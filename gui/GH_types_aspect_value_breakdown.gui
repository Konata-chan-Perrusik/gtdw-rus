# THIS IS A GENERATED FILE.
#
# Source template:
# added_folders/templates/gui/GH_types_aspect_value_breakdown.gui.jinja
#
# Please avoid manually editing this file: your changes WILL be overwritten when it gets regenerated.
# Instead, edit the source template and/or variables, then run render_templates.bat .

types AspectBreakdowns {

	type vbox_terrain_aspect_spellcasting_bonus_values = vbox {
		layoutpolicy_horizontal = expanding
		text_single = {
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			text = TERRAIN_SPELLCASTING_MODIFIER
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('drylands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('drylands_fire_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[fire_i][aspect_fire] Spellcasting Success Chance: [EmptyScope.ScriptValue('drylands_fire_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_fire_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[fire_i][aspect_fire] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_fire_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert_mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_mountains_fire_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[fire_i][aspect_fire] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_mountains_fire_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('oasis'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('oasis_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('oasis_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('jungle'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('jungle_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('jungle_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('floodplains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('floodplains_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('floodplains_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('wetlands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('wetlands_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('wetlands_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('archipelagic'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('archipelagic_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('archipelagic_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('forest'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('forest_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('forest_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('plains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('plains_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('plains_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('hills'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('hills_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('hills_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('farmlands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('farmlands_water_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[water_i][aspect_water] Spellcasting Success Chance: [EmptyScope.ScriptValue('farmlands_water_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('taiga'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('taiga_ice_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[ice_i][aspect_ice] Spellcasting Success Chance: [EmptyScope.ScriptValue('taiga_ice_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('mountains_air_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[air_i][aspect_air] Spellcasting Success Chance: [EmptyScope.ScriptValue('mountains_air_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert_mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_mountains_air_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[air_i][aspect_air] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_mountains_air_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('plains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('plains_air_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[air_i][aspect_air] Spellcasting Success Chance: [EmptyScope.ScriptValue('plains_air_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('steppe'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('steppe_air_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[air_i][aspect_air] Spellcasting Success Chance: [EmptyScope.ScriptValue('steppe_air_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('mountains_stone_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[stone_i][aspect_stone] Spellcasting Success Chance: [EmptyScope.ScriptValue('mountains_stone_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert_mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_mountains_stone_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[stone_i][aspect_stone] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_mountains_stone_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('hills'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('hills_stone_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[stone_i][aspect_stone] Spellcasting Success Chance: [EmptyScope.ScriptValue('hills_stone_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('drylands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('drylands_stone_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[stone_i][aspect_stone] Spellcasting Success Chance: [EmptyScope.ScriptValue('drylands_stone_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('oasis'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('oasis_dream_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[dream_i][aspect_dream] Spellcasting Success Chance: [EmptyScope.ScriptValue('oasis_dream_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('forest'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('forest_dream_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[dream_i][aspect_dream] Spellcasting Success Chance: [EmptyScope.ScriptValue('forest_dream_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('forest'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('forest_dream_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[dream_i][aspect_dream] Spellcasting Success Chance: [EmptyScope.ScriptValue('forest_dream_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('oasis'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('oasis_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('oasis_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('forest'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('forest_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('forest_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('jungle'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('jungle_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('jungle_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('farmlands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('farmlands_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('farmlands_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('floodplains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('floodplains_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('floodplains_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('plains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('plains_nature_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[nature_i][aspect_nature] Spellcasting Success Chance: [EmptyScope.ScriptValue('plains_nature_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('deadlands'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('deadlands_death_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[death_i][aspect_death] Spellcasting Success Chance: [EmptyScope.ScriptValue('deadlands_death_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('oasis'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('oasis_sand_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[sand_i][aspect_sand] Spellcasting Success Chance: [EmptyScope.ScriptValue('oasis_sand_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_sand_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[sand_i][aspect_sand] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_sand_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[And(EqualTo_string(Localize('desert_mountains'), Terrain.GetNameNoTooltip), NotEqualTo_CFixedPoint(EmptyScope.ScriptValue('desert_mountains_sand_value_add'), '(CFixedPoint)0'))]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[sand_i][aspect_sand] Spellcasting Success Chance: [EmptyScope.ScriptValue('desert_mountains_sand_value_add')|+0]"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
	}
	
	type vbox_province_aspect_values = vbox {
		layoutpolicy_vertical = expanding

		margin = { 5 0 }
		margin_bottom = 10
		spacing = 5

		background = {
			visible = "[HoldingView.HasHolding]"
			using = Background_Area_Dark
			alpha = 0.7
			margin_top = 9
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('fire_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('fire_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[fire_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End), '#V', '#color:{0.88,0.34,0.13}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('fire_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.88 0.34 0.13 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('fire')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('water_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('water_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[water_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End), '#V', '#color:{0.11,0.24,0.42}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('water_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.11 0.24 0.42 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('water')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('ice_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('ice_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[ice_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End), '#V', '#color:{0.72,0.9,0.92}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('ice_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.72 0.9 0.92 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ice')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('air_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('air_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[air_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End), '#V', '#color:{0.62,0.83,0.86}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('air_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.62 0.83 0.86 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('air')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('stone_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('stone_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[stone_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End), '#V', '#color:{0.47,0.30,0.18}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('stone_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.47 0.30 0.18 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('stone')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('dream_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('dream_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[dream_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End), '#V', '#color:{0.65,0.65,1.0}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('dream_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.65 0.65 1 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dream')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('celestial_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('celestial_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[celestial_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End), '#V', '#color:{0.65,0.15,0.86}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('celestial_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.65 0.15 0.86 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('celestial')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('dark_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('dark_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[dark_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End), '#V', '#color:{0.25,0.3,0.2}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('dark_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.25 0.3 0.2 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dark')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('light_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('light_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[light_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End), '#V', '#color:{0.90,0.75,0.30}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('light_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.90 0.75 0.30 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('light')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('blood_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('blood_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[blood_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End), '#V', '#color:{0.64,0.01,0.01}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('blood_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.95 0.01 0.01 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('blood')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('nature_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('nature_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[nature_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End), '#V', '#color:{0.36,0.66,0.01}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('nature_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.10 0.25 0.01 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('nature')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('ethereal_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('ethereal_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[ethereal_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End), '#V', '#color:{0.55,0.55,0.65}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('ethereal_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.55 0.55 0.65 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('ethereal')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('hymns_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('hymns_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[hymns_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End), '#V', '#color:{0.56,0.00,1.00}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('hymns_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.56 0.00 1.00 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('hymns')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('death_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('death_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[death_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End), '#V', '#color:{0.05,0.71,0.47}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('death_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.05 0.71 0.47 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('death')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('sand_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('sand_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[sand_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End), '#V', '#color:{0.90,0.75,0.30}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('sand_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.90 0.75 0.30 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('sand')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('metal_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('metal_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[metal_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End), '#V', '#color:{0.90,0.75,0.30}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('metal_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.90 0.75 0.30 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('metal')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('time_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('time_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[time_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End), '#V', '#color:{0.90,0.75,0.30}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('time_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.90 0.75 0.30 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('time')).End)]"
			}
		}
		hbox = {
			visible = "[Or(GreaterThan_CFixedPoint( HoldingView.GetProvince.MakeScope.ScriptValue('dawn_aspect_province_value'), '(CFixedPoint)0'), GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End))]"
			layoutpolicy_horizontal = expanding
			spacing = 3

			tooltip = "[HoldingView.GetProvince.MakeScope.GetScriptValueDesc('dawn_aspect_province_value')][SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), '', 'MUST_BUILD_ASPECT_ACTIVATING_BUILDING_WARNING')]"
			onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End)]"

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[dawn_i]"
				default_format = "#high"
			}

			text_single = {
				text = "[SelectLocalization(GetScriptedGui('province_has_activated_aspects_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).End), SelectLocalization(GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End), '#V', '#color:{0.90,0.75,0.30}'), '#weak')] [HoldingView.GetProvince.MakeScope.ScriptValue('dawn_aspect_province_value')|0]#!"
				
				background = {
					visible = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End)]"
					texture = "gfx/interface/component_masks/mask_brushed.dds"
					color = { 0.90 0.75 0.30 0.7 }
					spriteType = Corneredtiled
					spriteborder = { 20 10 }
				
					margin = { 7 0 }
					margin_bottom = 3
					margin_top = -3
				}
			}
			
			button_checkbox = {
				size = { 20 20 }
				
				visible = "[And(ObjectsEqual( HoldingView.GetCountyTitle.GetHolder, GetPlayer.Self ), GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End))]"
				enabled = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').IsValid(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End)]"
				checked = "[GetScriptedGui('province_aspect_specialization_is_activated_scripted_gui').IsShown(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End)]"
				onclick = "[GetScriptedGui('activate_province_aspect_specialization_scripted_gui').Execute(GuiScope.SetRoot(HoldingView.GetProvince.MakeScope).AddScope('aspect', MakeScopeFlag('dawn')).End)]"
			}
		}

		expand = {}
	}
	
	type vbox_modifier_aspect_spellcasting_bonus_values = vbox {
		layoutpolicy_horizontal = expanding
	}
	
	type vbox_building_aspect_spellcasting_bonus_values = vbox {
		layoutpolicy_horizontal = expanding
		text_single = {
			visible = "[EqualTo_string('01_thesorrowfield', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_sunkentower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_gehazetower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_oltenictower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_easterntower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_westtower_add', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_amagheantower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_kashiryatower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_frozentower', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +150#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_westerncabal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +100#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_easterncabal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +100#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_wehydkaha', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +100#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_palaceofthewizardking', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_palaceofthewizardking', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_tenenae', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +100#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_firstshard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +10#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +30#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('magi_tower_01', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +10#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('magi_tower_02', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_special_bloodcrystal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +10#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_special_bloodcrystal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_special_bloodcrystal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +30#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_special_bloodcrystal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_thebloodyard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_thebloodyard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_thebloodyard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "Magic Gained From Sacrifices: @magic_icon!#P +20%#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_thebloodyard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "Magic Gained From Sacrifices: @magic_icon!#P +20%#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_harekana_observatory', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_candamarun_academy', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_haryaadad_academy', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +60#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_portacademy', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +30#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_academyofswords', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +30#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_01', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +10#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_02', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +20#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_03', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +30#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_04', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +40#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_05', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +50#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_06', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +60#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_07', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +70#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_08', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[extended_magic_baseline|E]: @magic_icon!#P +80#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_burning_palace', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_wisdom', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_thuriya_pyinnya', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_academyofswords', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire] per [prestige_level|E]: [fire_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_easterncabal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire] per [prestige_level|E]: [fire_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_korlacu', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_forsaken_fortress', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_restored_fortress', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_renewed_fortress', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_korlacan_mines', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_korlacan_mines', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_korlacan_mines', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_korlacan_mines', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_fire]: [fire_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_potionworks', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_fount_of_heroes', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_water]: [water_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ice]: [ice_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_air]: [air_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_overgrown_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone] Spellcasting Success Chance: @spell_success_icon!#P +#![EmptyScope.ScriptValue('01_overgrown_temple_stone_value_add')|+0]#P %#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_overgrown_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_stone]: [stone_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('00_fog_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream]: [dream_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream]: [dream_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream]: [dream_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream]: [dream_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream]: [dream_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_fidhasil', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dream] per [prestige_level|E]: [dream_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('00_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('00_lich_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_harekana_observatory', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_celestial]: [celestial_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_01', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_02', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_03', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_04', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_05', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_06', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_07', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('dark_obelisk_08', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark]: [dark_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark] per [stress_level|E]: [dark_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dark] per [stress_level|E]: [dark_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_light]: [light_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_light]: [light_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_halite_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_light]: [light_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_halite_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_light]: [light_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_light]: [light_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_blood]: [blood_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_portacademy', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_blood] per [prestige_level|E]: [blood_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_nira_yew', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_blood] per [piety_level|E]: [blood_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('royal_garden_01', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('royal_garden_02', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('royal_garden_03', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_benoriya_atawek', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_potionworks', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature] per [piety_level|E]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_tarfal_garden', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_hanging_gardens', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_overgrown_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_dryadstones', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_altar_of_spring', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_nira_yew', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature] per [piety_level|E]: [nature_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_fidhasil', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature] per [prestige_level|E]: [nature_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_fount_of_heroes', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_nature]: [nature_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('00_fog_eternal_grove', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_ethereal]: [ethereal_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_boneshrine', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('04_special_aervalr_shard', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +4#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_death]: [death_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_halite_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_sand]: [sand_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('02_halite_temple', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_sand]: [sand_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_korlacu', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_metal] Spellcasting Success Chance: @spell_success_icon!#P +#![EmptyScope.ScriptValue('01_temple_of_korlacu_metal_value_add')|+0]#P %#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_korlacu', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_metal]: [metal_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_wisdom', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_metal] Spellcasting Success Chance: @spell_success_icon!#P +#![EmptyScope.ScriptValue('01_temple_of_wisdom_metal_value_add')|+0]#P %#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_temple_of_wisdom', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_metal]: [metal_i]#positive_value +3#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_metal] per [prestige_level|E]: [metal_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dawn] per [stress_level|E]: [dawn_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[aspect_dawn] per [stress_level|E]: [dawn_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
	}
	
	type vbox_building_arcana_values = vbox {
		layoutpolicy_horizontal = expanding
		text_single = {
			visible = "[EqualTo_string('01_mayikprolollan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_portacademy', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_aironoiakaan', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_easterncabal', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('01_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('03_wizzhaod', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E]: [arcana_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E]: [arcana_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_dragoncourt', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E]: [arcana_i]#positive_value +2#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('05_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('06_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('07_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
		text_single = {
			visible = "[EqualTo_string('08_tur_senach', Building.GetKey)]"
			layoutpolicy_horizontal = expanding
			max_width = 400
			using = DefaultTooltipText
			raw_text = "[arcana|E] per [prestige_level|E]: [arcana_i]#positive_value +1#!"
			fonttintcolor = "[TooltipInfo.GetTintColor]"
			alwaystransparent = no
		}
	}
}