types gh_hud
{
	type gh_aervalr_phase_widget = widget
	{
		icon = {
			texture = "gfx/interface/skinned/aervalr_frame.dds"
			size = { 54 54 }
			position = { -12 -8 }
			visible = "[GetScriptedGui('no_skin_scripted_gui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		icon = {
			texture = "gfx/interface/skins/norse/aervalr_frame.dds"
			size = { 54 54 }
			position = { -12 -8 }
			visible = "[GetScriptedGui('norse_skin_scripted_gui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		icon = {
			texture = "gfx/interface/skins/iberian/aervalr_frame.dds"
			size = { 54 54 }
			position = { -12 -8 }
			visible = "[GetScriptedGui('iberian_skin_scripted_gui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		icon = {
			texture = "gfx/interface/skins/iranian/aervalr_frame.dds"
			size = { 54 54 }
			position = { -12 -8 }
			visible = "[GetScriptedGui('iranian_skin_scripted_gui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		icon = {
			texture = "gfx/interface/skins/byzantine/aervalr_frame.dds"
			size = { 54 54 }
			position = { -12 -8 }
			visible = "[GetScriptedGui('byzantine_skin_scripted_gui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		tooltipwidget = {
			widget_moon_phase_tooltip = {}
		}
		size = { 37 35 }
		widget = {
			size = { 37 35 }
			
			background = {
				using = tooltip_ne
				
				texture = "gfx/interface/icons/moon_phases/Frame/MoonPhase_BG.dds"
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/newmoon_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('new_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/waxingcrescent_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('waxing_crescent_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/firstquarter_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('first_quarter_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/waxinggibbous_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('waxing_gibbous_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/fullmoon_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('full_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/waningcrescent_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('waning_crescent_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/lastquarter_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('last_quarter_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/phases/broken/waninggibbous_broken.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('base_moon_phase_name').GetFlagName, Localize('waning_gibbous_moon')]"
				}
				
				modify_texture = {
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/overlays/overlay_green.dds"
					visible = "[Or(Not(GetGlobalVariable('current_moon_phase').Var('moon_color').IsSet),EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('default'))]"
				}
				
				modify_texture = { # Blood Moon
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/overlays/overlay_red.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('red')]"
				}

				modify_texture = { # Superliminal (Aelhyoer) Moon
					blend_mode = overlay
					texture = "gfx/interface/icons/moon_phases/overlays/overlay_teal.dds"
					visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('teal')]"
				}
			}

			container = {
				visible = "[Or(Not(GetGlobalVariable('current_moon_phase').Var('moon_color').IsSet), EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('default'))]"
				icon = {
					position = { -11 -5 }
					size = { 55 55 }
					
					texture = "gfx/interface/icons/moon_phases/glow/constant/GlowConstant_Green.dds"
					using = Animation_Glow_Pulse
					
					state = {
						trigger_on_create = yes
				
						name = max_glow
						next = min_glow
						duration = 2
						using = Animation_FadeIn_Standard
					}
				
					state = {
						name = min_glow
						next = max_glow
						duration = 2
						using = Animation_Curve_Default
						alpha = 0.7
					}
				}
			}

			container = { # Blood Moon
				visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('red')]"
				icon = {
					position = { -11 -5 }
					size = { 55 55 }
					
					texture = "gfx/interface/icons/moon_phases/glow/constant/GlowConstant_Red.dds"
					using = Animation_Glow_Pulse
					
					state = {
						trigger_on_create = yes
				
						name = max_glow
						next = min_glow
						duration = 2
						using = Animation_FadeIn_Standard
					}
				
					state = {
						name = min_glow
						next = max_glow
						duration = 2
						using = Animation_Curve_Default
						alpha = 0.7
					}
				}
			}

			container = { # Superliminal (Aelhyoer) Moon
				visible = "[EqualTo_string(GetGlobalVariable('current_moon_phase').Var('moon_color').GetFlagName, Localize('teal')]"
				icon = {
					position = { -11 -5 }
					size = { 55 55 }
					
					texture = "gfx/interface/icons/moon_phases/glow/constant/GlowConstant_Teal.dds"
					using = Animation_Glow_Pulse
					
					state = {
						trigger_on_create = yes
				
						name = max_glow
						next = min_glow
						duration = 2
						using = Animation_FadeIn_Standard
					}
				
					state = {
						name = min_glow
						next = max_glow
						duration = 2
						using = Animation_Curve_Default
						alpha = 0.7
					}
				}
			}
		}
	}

	type gh_magic_resource_widget = widget
	{
		name = "magic"
		size = { 144 70 }

		widget = {
			size = { 144 45 }

			tooltipwidget = {
				widget_magic_value_tooltip = {}
			}
			using = tooltip_ne
		}

		background = {
			texture = "gfx/interface/skinned/resource_panel_start.dds"
		}

		vbox = {
			margin_top = -2

			hbox = {
				layoutpolicy_horizontal = expanding
				expand = {}

				hbox = {
					spacing = 7

					icon = {
						name = "magic_icon"
						size = { 30 30 }
						texture = "gfx/interface/icons/currencies/icon_magic_00.dds"
					}


					flowcontainer = {
						margin_bottom = 7
						spacing = -6
						direction = vertical
						ignoreinvisible = yes

						text_single = {
							name = "magic_value"
							text = "[FixedPointToFloat(GetPlayer.MakeScope.Var('magic_counter').GetValue)|1]"
				
							max_width = 50
							default_format = "#high"
							using = Font_Size_Medium
						}

						container = {
							text_single = {
								name = "magic_income"
								raw_text = "#F +[GuiScope.SetRoot(GetPlayer.MakeScope).ScriptValue('character_magic_baseline_income_value')|1]#!"
					
								max_width = 50
								default_format = "#high"
								using = Font_Size_Small
							}
						}
					}
				}
				spacer = {
					size = { 10 1}
				}
				divider_light = {
					visible = "[InDebugMode]"
					layoutpolicy_vertical = expanding
					alpha = 0.8
				}
			}
			expand = {}
		}
	}

	type gh_cliques_tab = widget_hud_main_tab
	{
		name = "tab_cliques"
		blockoverride "maintab_button"
		{
			texture = "gfx/interface/skinned/hud_maintab/maintab_court.dds"
			tooltip = "CLIQUES_BUTTON"
			
			# Trick to remove all other Game Views
			onclick = "[ToggleGameView('activity_list_window')]"
			onclick = "[ToggleGameView('activity_list_window')]"
			onclick = "[ToggleGameView('decisions')]"
			onclick = "[ToggleGameView('decisions')]"
			
			onclick = "[GetVariableSystem.Clear('artifact_window_open')]"
			onclick = "[GetVariableSystem.Toggle('cliques_window_open')]"
			onclick = "[GetScriptedGui('get_clique_title_scripted_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		}
		state = {
			name = _mouse_hierarchy_enter
			on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_cliques_leave','hud_tab_glow_cliques_enter')]"
		}
		state = {
			name = _mouse_hierarchy_leave
			on_start = "[PdxGuiInterruptThenTriggerAllAnimations('hud_tab_glow_cliques_enter','hud_tab_glow_cliques_leave')]"
		}
	}

	type progressbar_hud_magic_glow = icon
	{
		size = { 175% 175% }
		position = { -46 -22 }

		block "lvl_3"
		{
			alpha = 0
		}

		shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			texture_density = 3
		}

		state = {
			name = mask_a
			next = mask_b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 0 -1 }
			}
		}

		state = {
			name = mask_b
			next = mask_a
			duration = 8

			modify_texture = {
				name = "clouds"
				translate_uv = { 0 1 }
			}
		}

		state = {
			block "animation_trigger_1"
			{
				name = "magic_level_increase"
			}
			next = "fade_out"

			duration = 0.2
			delay = 0.3
			bezier = { 0.5 0 1 0.5 }
			alpha = 1
		}

		block "lvl_3" {
			state = {
				block "animation_trigger_2"
				{
					name = "magic_increase"
				}
				next = "fade_out"

				duration = 0.2
				delay = 0.3
				bezier = { 0.5 0 1 0.5 }
				alpha = 1
			}

			state = {
				name = "fade_out"

				duration = 1.5
				bezier = { 0 0.5 0.5 1 }
				alpha = 0
			}
		}
	}

	type progressbar_hud_magic = icon
	{
		shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"
		alpha = 0.8

		block "bar_color"
		{
			# texture = "gfx/interface/colors/red.dds"
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_rough_edges.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 5
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
			blend_mode = alphamultiply
			alpha = 0.3
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_scratches.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			alpha = 0.3
			texture_density = 3
		}

		modify_texture = {
			name = "flash"
			texture = "gfx/interface/colors/white.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)2')]"
			name = "lvl3_glow"
			texture = "gfx/interface/colors/gold.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
			blend_mode = mask
			spriteType = corneredtiled
			texture_density = 1
		}

		modify_texture = {
			block "bar_color_flow"
			{
				# texture = "gfx/interface/colors/yellow.dds"
				alpha = 0.3
			}
			blend_mode = colordodge
		}

		state = {
			name = "lvl3_glow_a"
			next = "lvl3_glow_b"
			duration = 0.6
			trigger_on_create = yes
			using = Animation_Curve_Default

			modify_texture = {
				name = "lvl3_glow"
				alpha = 0.5
			}
		}

		state = {
			name = "lvl3_glow_b"
			next = "lvl3_glow_a"
			duration = 1.5
			using = Animation_Curve_Default

			modify_texture = {
				name = "lvl3_glow"
				alpha = 0
			}
		}

		state = {
			name = "magic_level_increase"
			next = "fade_out"

			duration = 0.1
			bezier = { 0.5 0 1 0.5 }

			modify_texture = {
				name = "flash"
				alpha = 0.6
			}
		}

		state = {
			name = "magic_increase"
			next = "fade_out"

			duration = 0.1
			bezier = { 0.5 0 1 0.5 }

			modify_texture = {
				name = "flash"
				alpha = 0.6
			}
		}

		state = {
			name = "fade_out"

			duration = 0.8
			bezier = { 0 0.5 0.5 1 }


			modify_texture = {
				name = "flash"
				alpha = 0
			}
		}

		state = {
			name = a
			next = b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 1 0 }
			}
		}

		state = {
			name = b
			next = a
			duration = 15

			modify_texture = {
				name = "clouds"
				translate_uv = { -1 0 }
			}
		}
	}

	type gh_ambient_magic_mapmode = button_normal
	{
		onclick = "[SetMapMode('ambient_magic_mapmode')]"
		onclick = "[GetScriptedGui('ambient_magic_map').Execute(GuiScope.End)]"
		down = "[And( GetScriptedGui('ambient_magic_map').IsShown(GuiScope.End), IsMapMode('custom_baronies') )]"
		tooltip = "AMBIENT_MAGIC_MAP_TOOLTIP"
		enabled = "[And(Not(IsObserver), GetScriptedGui('ambient_magic_map').IsValid(GuiScope.End))]"
		using = tooltip_ws
	}

	type gh_bestiary_button = button_normal
	{
		name = "bestiary_button"
		size = { 35 35 }
		alpha = 0.7
		
		button_icon = {
			parentanchor = center
			alwaystransparent = yes
			texture = "gfx/interface/icons/flat_icons/bestiary_icon.dds"
		}
		enabled = [GetPlayer.IsValid]
		
		tooltip = "OPEN_BESTIARY"
		
		onclick = "[GetVariableSystem.Toggle( 'show_hunting')]"
		onclick = "[GetVariableSystem.Set( 'hunting_tab' , 'monsters' )]"
		onclick = "[GetVariableSystem.Clear( 'artifact_window_open' )]"
		
		state = {
			name = _mouse_enter
			alpha = 1
			duration = 0.7
			using = Animation_Curve_Default
		}

		state = {
			name = _mouse_leave
			alpha = 0.7
			duration = 0.2
			using = Animation_Curve_Default
		}
	}

	type gh_magic_exposure_bar = button_normal
	{
		name = "magic_button"

		onclick = "[GetVariableSystem.Toggle( 'show_spells')]"
		size = { 126 55 }

		widget = {
			parentanchor = center
			size = { 126 55 }


			tooltipwidget = {
				widget_magic_value_tooltip = {}
			}
			using = tooltip_ne

			widget = {
				name = "magicprogressbar"
				parentanchor = center
				widgetanchor = left|vcenter
				position = { -14 0 }
				size = { 70 25 }

				background = {
					texture = "gfx/interface/colors/white.dds"
					color = { 0.1 0.1 0.1 0.8 }
				}

				icon = {
					visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)2')]"
					size = { 100% 100% }
					texture = "gfx/interface/colors/white.dds"
					color = { 1 0.1 0.1 0.2 }
				
					using = Animation_ShowHide_Standard
				
					state = {
						name = a
						next = b
						trigger_on_create = yes
				
						using = Animation_Curve_Default
						duration = 0.8
						alpha = 0
					}
				
					state = {
						name = b
						next = a
				
						using = Animation_Curve_Default
						duration = 1.5
						alpha = 1
					}
				}

				hbox = {
					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled(FixedPointToFloat(Subtract_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_total_value'), GetPlayer.MakeScope.ScriptValue('exposure_current_milestone_value'))), FixedPointToFloat(Subtract_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_next_milestone_value'), GetPlayer.MakeScope.ScriptValue('exposure_current_milestone_value'))), '(int32)70' )]"

						progressbar_hud_magic = {
							visible = "[LessThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)1')]"
							size = { 100% 100% }

							using = Animation_ShowHide_Standard

							blockoverride "bar_color"
							{
								texture = "gfx/interface/colors/blue.dds"
							}

							blockoverride "bar_color_flow"
							{
								texture = "gfx/interface/colors/white.dds"
								alpha = 0.3
							}
						}
						
						progressbar_hud_magic = {
							visible = "[And(GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)1'), LessThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)3'))]"
							size = { 100% 100% }

							using = Animation_ShowHide_Standard

							blockoverride "bar_color"
							{
								texture = "gfx/interface/colors/orange.dds"
							}

							blockoverride "bar_color_flow"
							{
								texture = "gfx/interface/colors/white.dds"
								alpha = 0.3
							}
						}
						
						progressbar_hud_magic = {
							visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)3')]"
							size = { 100% 100% }

							using = Animation_ShowHide_Standard

							blockoverride "bar_color"
							{
								texture = "gfx/interface/colors/red.dds"
							}

							blockoverride "bar_color_flow"
							{
								texture = "gfx/interface/colors/gold.dds"
								alpha = 0.3
							}
						}
					}

					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled(FixedPointToFloat(Subtract_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_total_value'), GetPlayer.MakeScope.ScriptValue('exposure_current_milestone_value'))), FixedPointToFloat(Subtract_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_next_milestone_value'), GetPlayer.MakeScope.ScriptValue('exposure_current_milestone_value'))), '(int32)70' )]"
					}
				}
			}

			widget = {
				size = { 100% 100% }

				#progressbar_hud_magic_glow = {
				#	texture = "gfx/interface/hud/hud_stress_glow_red.dds"
				#
				#	blockoverride "animation_trigger_1"
				#	{
				#		name = "stress_level_increase"
				#	}
				#
				#	blockoverride "animation_trigger_2"
				#	{
				#		name = "stress_increase"
				#	}
				#}
				#
				#progressbar_hud_magic_glow = {
				#	texture = "gfx/interface/hud/hud_stress_glow_blue.dds"
				#
				#	blockoverride "animation_trigger_1" {
				#		name = "stress_level_decrease"
				#	}
				#
				#	blockoverride "animation_trigger_2"
				#	{
				#		name = "stress_decrease"
				#	}
				#}
				
				progressbar_hud_magic_glow = {
					visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)3')]"
					texture = "gfx/interface/hud/hud_stress_glow_red.dds"
				
					blockoverride "animation_trigger_1" {
						name = "lvl3_fire"
						trigger_on_create = yes
					}
				
					blockoverride "animation_trigger_2" {}
					blockoverride "lvl_3" {}
				}

				icon = {
					parentanchor = center
					position = { -30 0 }
					size = { 30 30 }
					texture = "gfx/interface/colors/white.dds"
					using = Color_Red


					modify_texture = {
						name = "mask_1"
						texture = "gfx/interface/component_masks/mask_glow.dds"
						blend_mode = alphamultiply
						rotate_uv = 1
					}

					modify_texture = {
						name = "mask_2"
						texture = "gfx/interface/component_masks/mask_glow.dds"
						blend_mode = alphamultiply
						rotate_uv = -1
					}

					modify_texture = {
						name = "mask_3"
						texture = "gfx/interface/component_masks/mask_clouds.dds"
						blend_mode = alphamultiply
						alpha = 0.1
					}

					modify_texture = {
						name = "mask_4"
						texture = "gfx/interface/component_masks/mask_circle.dds"
						blend_mode = mask
					}

					modify_texture = {
						name = "mask_3"
						texture = "gfx/interface/colors/gold.dds"
						blend_mode = add
					}

					state = {
						name = "stress_level_increase"
						next = b

						using = Animation_Curve_Default
						scale = 1
						alpha = 0
					}

					state = {
						name = b
						next = c

						duration = 0.6
						bezier = { 0.5 0 1 0.5 }

						scale = 5
						alpha = 0.7
					}

					state = {
						name = c
						duration = 0.3
						alpha = 0
						scale = 6
					}

					state = {
						name = rotate_a
						next = rotate_b
						trigger_on_create = yes

						modify_texture = {
							name = "mask_1"
							rotate_uv = 1
						}
					}

					state = {
						name = rotate_a
						next = rotate_b

						duration = 1

						modify_texture = {
							name = "mask_1"
							rotate_uv = 180
						}
					}

					state = {
						name = rotate_a_2
						next = rotate_b_2
						trigger_on_create = yes

						modify_texture = {
							name = "mask_2"
							rotate_uv = -1
						}
					}

					state = {
						name = rotate_a_2
						next = rotate_b_2

						duration = 1

						modify_texture = {
							name = "mask_2"
							rotate_uv = -180
						}
					}

					state = {
						name = rotate_a_3
						next = rotate_b_3
						trigger_on_create = yes

						modify_texture = {
							name = "mask_3"
							rotate_uv = 0
							alpha = 0.1
						}
					}

					state = {
						name = rotate_a_3
						next = rotate_b_3

						duration = 1

						modify_texture = {
							name = "mask_3"
							rotate_uv = 40
							alpha = 0.8
						}
					}
				}

				icon = {
					size = { 126 55 }
					texture = "gfx/interface/hud/hud_magic_bg.dds"

					icon = {
						parentanchor = vcenter
						position = { 11 0 }
						size = { 35 35 }

						texture = "gfx/interface/icons/rituals/icon_power_level.dds"
						framesize = { 70 70 }

						modify_texture = {
							visible = "[And(GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)1'), LessThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)2'))]"
							name = "overwhelm_lvl2_glow"
							texture = "gfx/interface/colors/orange.dds"
							blend_mode = colordodge
							alpha = 0.5
						}
						
						modify_texture = {
							visible = "[And(GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)2'), LessThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)3'))]"
							name = "overwhelm_lv23_glow"
							texture = "gfx/interface/colors/orange.dds"
							blend_mode = colordodge
							alpha = 1
						}
						
						modify_texture = {
							visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('exposure_level_value'), '(CFixedPoint)3')]"
							name = "overwhelm_lv345_glow"
							texture = "gfx/interface/colors/red.dds"
							blend_mode = colordodge
							alpha = 1
						}
					}
				}
			}
		}
	}

	type gh_magic_widget = widget
	{
		name = "magic_widget"
		size = { 112 50 }

		icon = {
			texture = "gfx/interface/skinned/magic_widget_frame.dds"
			size = { 112 96 }
			position = { 40 -34 }
		}

		button_normal = {
			parentanchor = center
			position = { 40 0 }
			name = "magic_button"

			tooltip = "Нажмите, чтобы открыть меню заклинаний"
			using = tooltip_ne

			onclick = "[GetVariableSystem.Toggle( 'show_spells')]"
			size = { 55 55 }

			icon_round_button_base = {}

			button_icon = {
				texture = "gfx/interface/hud/ambient_magic_mapmode.dds"
				onclick = "[GetVariableSystem.Toggle( 'show_spells')]"
				size = { 40 40 }
				parentanchor = center
				gfxtype = togglepushbuttongfx
				effectname = "NoHighlight"
			}
		}

		# Pogressbar & frame
		highlight_icon = {
			name = "progress_frame"
			texture = "gfx/interface/window_scheme/scheme_hud_bg_progress_frame.dds"
			size = { 100 124 }
			parentanchor = center
			alpha = 0.5
		}

		progresspie = {
			name = "progress"
			position = { 0.3 -2.5 }
			size = { 76 76 }
			texture = "gfx/interface/progressbars/action_progress_thin.dds"
			framesize = { 128 128 }
			frame = 2
			widgetanchor = center
			parentanchor = center
			value = "[GetPlayer.MakeScope.Var('magic_counter').GetValue]"
			max = "[GetPlayer.MakeScope.ScriptValue('character_magic_baseline_value')]"
			tooltip = "[GetPlayer.MakeScope.Var('magic_counter').GetValue] | [GetPlayer.MakeScope.ScriptValue('character_magic_baseline_value')]"
			using = tooltip_ne
		}
	}	
}