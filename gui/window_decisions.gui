window = {
	name = "decisions_view"
	parentanchor = top|right
	layer = windows_layer
	movable = no

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
		on_start = "[GetVariableSystem.Set( 'decision_tab', 'decision' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin_top = 30
		margin_bottom = 25
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						datacontext = "[GetPlayer]"
						text = "DECISIONS_VIEW_TITLE_CONTAINER"
					}

					blockoverride "button_close"
					{
						onclick = "[DecisionsView.Close]"
					}
				}
				hbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 5

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'decision_tab', 'decision' )]"
						down = "[GetVariableSystem.HasValue( 'decision_tab', 'decision' )]"

						text_single = {
							text = "DECISIONS_VIEW_DECISION_TAB_TITLE"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"
						}
					}
					button_tab = {
						layoutpolicy_horizontal = expanding
						visible = "[Or( Or( GetPlayer.IsGovernor, IsLandlessAdventurer( GetPlayer) ), IsNomad( GetPlayer ) )]"
						onclick = "[GetVariableSystem.Set( 'decision_tab', 'task_contract' )]"
						down = "[GetVariableSystem.HasValue( 'decision_tab', 'task_contract' )]"

						text_single = {
							text = "DECISIONS_VIEW_CONTRACTS_TAB_TITLE"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"
						}
					}
					button_tab = {
						layoutpolicy_horizontal = expanding
						raw_text = "Situations"
						
						onclick = "[GetVariableSystem.Set( 'decision_tab', 'situations' )]"
						down = "[GetVariableSystem.HasValue( 'decision_tab', 'situations' )]"
					}
				}

				scrollbox = {
					name = "decision_scrollarea"
					visible = "[GetVariableSystem.HasValue( 'decision_tab', 'decision' )]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/decisions.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "scrollbox_content"
					{
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						vbox = {
							name = "decision_groups_container"
							spacing = 2

							layoutpolicy_horizontal = expanding

							datamodel = "[DecisionsView.GetDecisionGroupItems]"
							item = {
								vbox_decision_group_foldout = {}
							}
						}
					}
					blockoverride "scrollbox_expand" {
						expand = {}
					}
				}

				scrollbox = {
					name = "tab_contracts"
					visible = "[GetVariableSystem.HasValue( 'decision_tab', 'task_contract' )]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						using = Background_Area
					}

					blockoverride "scrollbox_content"
					{
						text_label_center = {
							text = "DECISIONS_VIEW_ONGOING_CONTRACTS"
						}

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							datamodel = "[GetPlayer.GetAcceptedTaskContracts]"
							item = {
								contract_item = {}
							}
							expand = {}
						}
					}
				}

				scrollbox = {
					name = "situations_scrollarea"
					visible = "[GetVariableSystem.HasValue( 'decision_tab', 'situations' )]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/decisions.dds"
						margin = { -5 0 }
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
							blend_mode = alphamultiply
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "decisions_main_container"
						spacing = 20

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								raw_text = "Global Situations"
							}

							text_single = {
								visible = "[IsDataModelEmpty(GetGlobalList('global_story_cycle_list'))]"
								raw_text = "No Global Situations"
								default_format = "#low;italic"
							}
							
							vbox = {
								name = "global_situations"
								datamodel = "[GetGlobalList('global_story_cycle_list')]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									vbox = {
										datacontext = "[Scope.Story]"
										layoutpolicy_horizontal = expanding
										icon = {
											name = "tile_frame_top"
											texture = "gfx/interface/skinned/component_decoration/decoration_frame_top.dds"
											spriteType = Corneredtiled
											spriteborder = { 100 0 }
											texture_density = 2
											size = { 540 15 }
										}
										hbox = {
											layoutpolicy_horizontal = expanding
											margin_left = 10
											margin_top = 30
											
											hbox = {
												layoutpolicy_horizontal = expanding
												margin_right = 25
												margin_left = 40
												
												widget = {
													flowcontainer = {
														layoutpolicy_vertical = expanding
														direction = vertical
														
														margin_bottom = 10
														
														text_single = {
															text = "[Localize(Concatenate(Scope.Var('story_name').GetFlagName,'_story_name'))]"
															default_format = "#high"
															using = Font_Size_Big
															fontsize = 26
														}

														text_single = {
															visible = "[Scope.Var('story_start_year').IsSet]"
															layoutpolicy_horizontal = expanding
															margin_top = 5
														
															raw_text = "#weak Began [Scope.Var('story_start_year').GetValue|0]#!"
															default_format = "#low"
															using = Font_Size_Small
														}
													}
												}
												
												expand = {}
												
												highlight_icon = {
													size = { 250 70 }
													
													mirror = horizontal
													texture = "[GetDecisionWithKey(Concatenate(Scope.Var('story_decision_illustration').GetFlagName,'_decision')).GetPicture( GetPlayer.Self )]"
													alpha = 0.9
										
													tintcolor = { 0.6 0.6 0.6 0.7 }
										
													using = Mask_Rough_Edges
										
													modify_texture = {
														texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
														blend_mode = alphamultiply
													}
												}
											}
											background = {
												using = Background_Area_Solid
												margin_top = -25
												margin_left = -25
												margin_right = -25
											}
										}
										
										# Progressbars
										
										hbox = {
											name = "situation_progress_bar"
											
											visible = "[Scope.Var('primary_progressbar_variable').IsSet]"
											
											layoutpolicy_horizontal = expanding
								
											hbox = {
												size = { 100% 104 }
								
												tooltip = "SITUATION_PROGRESS_TOOLTIP"
												using = tooltip_ne
								
												widget = {
													size = { 100% 100% }
								
													hbox = {
														margin_left = 45
														margin_top = 47
														widget = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
															layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat(Select_CFixedPoint(Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).IsSet, Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).GetValue, Scope.ScriptValue(Scope.Var('primary_progressbar_variable').GetFlagName))), FixedPointToFloat(Select_CFixedPoint(Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).IsSet, Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_maximum')).GetValue, Scope.ScriptValue(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_maximum')))), '(int32)79' )]"
															
															progressbar_hud_stress = {
																size = { 100% 12 }
																visible = "[Not(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_color')).IsSet)]"
								
																using = Animation_ShowHide_Standard
								
																blockoverride "bar_color"
																{
																	texture = "gfx/interface/colors/orange.dds"
																}
								
																blockoverride "bar_color_flow"
																{
																	texture = "gfx/interface/colors/white.dds"
																	alpha = 0.3
																}
															}
															
															progressbar_hud_stress = {
																size = { 100% 12 }
																visible = "[And(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_color')).IsSet, EqualTo_string(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_color')).GetFlagName, 'orange'))]"
								
																using = Animation_ShowHide_Standard
								
																blockoverride "bar_color"
																{
																	texture = "gfx/interface/colors/gold.dds"
																}
								
																blockoverride "bar_color_flow"
																{
																	texture = "gfx/interface/colors/white.dds"
																	alpha = 0.3
																}
															}
															
															progressbar_hud_stress = {
																size = { 100% 12 }
																visible = "[And(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_color')).IsSet, EqualTo_string(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_color')).GetFlagName, 'gold'))]"
								
																using = Animation_ShowHide_Standard
								
																blockoverride "bar_color"
																{
																	texture = "gfx/interface/colors/gold.dds"
																}
								
																blockoverride "bar_color_flow"
																{
																	texture = "gfx/interface/colors/white.dds"
																	alpha = 0.3
																}
															}
														}
								
														widget = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding
															layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat(Select_CFixedPoint(Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).IsSet, Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).GetValue, Scope.ScriptValue(Scope.Var('primary_progressbar_variable').GetFlagName))), FixedPointToFloat(Select_CFixedPoint(Scope.Var(Scope.Var('primary_progressbar_variable').GetFlagName).IsSet, Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_maximum')).GetValue, Scope.ScriptValue(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_maximum')))), '(int32)79' )]"
														}
													}
								
													icon = {
														size = { 98% 100% }
														texture = "gfx/interface/window_decisions/situation_progressbar.dds"
														
														text_single = {
															margin_top = 37
															margin_left = 17
															text = "[Concatenate('@',Concatenate(Scope.Var(Concatenate(Scope.Var('primary_progressbar_variable').GetFlagName,'_tracker_icon')).GetFlagName,'!'))]"
														}
													}
												}
											}
										}
										
										vbox = {
											margin_left = 25
											margin_right = 25
											
											datacontext = "[Scope.Story]"
											
											text_multi = {
												text = "[Localize(Concatenate(Scope.Var('story_name').GetFlagName,'_story_desc'))]"
												layoutpolicy_horizontal = expanding
												autoresize = yes
												max_width = 450
												margin_bottom = 10
											}
											
											vbox = {
												visible = "[DataModelHasItems(Scope.GetList('person_of_interest_type_list'))]"
											
												layoutpolicy_horizontal = expanding
												
												divider_light = {
													layoutpolicy_horizontal = expanding
												}
												
												text_single = {
													raw_text = "#weak #underline People of Interest#!#!"
													align = center
												}
												
												hbox = {
													datamodel = "[Scope.GetList('person_of_interest_type_list_row_1')]"
													visible = "[DataModelHasItems(Scope.GetList('person_of_interest_type_list_row_1'))]"
													item = {
														vbox = {
															datamodel = "[Story.MakeScope.GetList(Scope.GetFlagName)]"
															layoutpolicy_horizontal = expanding
															margin_right = 10
															item = {
																vbox = {
																	portrait_head = {
																		name = "person_of_interest_portrait"
																		datacontext = "[Scope.Char]"
												
																		blockoverride "coa" {}
																		blockoverride "opinion_box"{}
																	}
																	text_multi = {
																		text = "[Scope.Char.GetName]"
																		layoutpolicy_horizontal = expanding
																		align = center
																	}
																}
															}
															text_multi = {
																text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
																layoutpolicy_horizontal = expanding
																align = center
																default_format = "#high"
															}
														}
													}
												}
												
												hbox = {
													datamodel = "[Scope.GetList('person_of_interest_type_list_row_2')]"
													visible = "[DataModelHasItems(Scope.GetList('person_of_interest_type_list_row_2'))]"
													item = {
														vbox = {
															datamodel = "[Story.MakeScope.GetList(Scope.GetFlagName)]"
															layoutpolicy_horizontal = expanding
															margin_right = 10
															item = {
																vbox = {
																	portrait_head = {
																		name = "person_of_interest_portrait"
																		datacontext = "[Scope.Char]"
												
																		blockoverride "coa" {}
																		blockoverride "opinion_box"{}
																	}
																	text_multi = {
																		text = "[Scope.Char.GetName]"
																		layoutpolicy_horizontal = expanding
																		align = center
																	}
																}
															}
															text_multi = {
																text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
																layoutpolicy_horizontal = expanding
																align = center
																default_format = "#high"
															}
														}
													}
												}
												
												hbox = {
													datamodel = "[Scope.GetList('person_of_interest_type_list_row_3')]"
													visible = "[DataModelHasItems(Scope.GetList('person_of_interest_type_list_row_3'))]"
													item = {
														vbox = {
															datamodel = "[Story.MakeScope.GetList(Scope.GetFlagName)]"
															layoutpolicy_horizontal = expanding
															margin_right = 10
															item = {
																vbox = {
																	portrait_head = {
																		name = "person_of_interest_portrait"
																		datacontext = "[Scope.Char]"
												
																		blockoverride "coa" {}
																		blockoverride "opinion_box"{}
																	}
																	text_multi = {
																		text = "[Scope.Char.GetName]"
																		layoutpolicy_horizontal = expanding
																		align = center
																	}
																}
															}
															text_multi = {
																text = "[Localize(Concatenate(Scope.GetFlagName, '_name'))]"
																layoutpolicy_horizontal = expanding
																align = center
																default_format = "#high"
															}
														}
													}
												}
											}
											
											vbox = {
												visible = "[DataModelHasItems(Scope.GetList('tracked_powerbalance_faiths_list'))]"
											
												layoutpolicy_horizontal = expanding
												
												divider_light = {
													layoutpolicy_horizontal = expanding
												}
												
												text_single = {
													raw_text = "#weak #underline Powerbalance#!#!"
													align = center
												}
												
												spacer = {
													size = { 10 10 }
												}
												
												hbox = {
													datamodel = "[Scope.GetList('tracked_powerbalance_faiths_list_row_1')]"
													visible = "[DataModelHasItems(Scope.GetList('tracked_powerbalance_faiths_list_row_1'))]"
													layoutpolicy_horizontal = expanding
													margin_right = 10
													
													item = {
														vbox = {
															icon = {
																name = "faith_icon"
																texture = "[Scope.Faith.GetIcon]"
																size = { 60 60 }
															}
															
															text_multi = {
																text = "[Scope.Faith.GetName]"
																layoutpolicy_horizontal = expanding
																align = center
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_domain_icon"
																	texture = "gfx/interface/icons/icon_domain.dds"
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.Faith.GetNumberOfCountiesOfFaith] ([Scope.ScriptValue('faith_county_number_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_empire_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 5
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_emperors_number_value')|0] ([Scope.ScriptValue('faith_emperors_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_kingdom_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 4
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_kings_number_value')|0] ([Scope.ScriptValue('faith_kings_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_duchy_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 3
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_dukes_number_value')|0] ([Scope.ScriptValue('faith_dukes_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_county_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 2
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_counts_number_value')|0] ([Scope.ScriptValue('faith_counts_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
														}
													}
												}
												
												hbox = {
													datamodel = "[Scope.GetList('tracked_powerbalance_faiths_list_row_2')]"
													visible = "[DataModelHasItems(Scope.GetList('tracked_powerbalance_faiths_list_row_2'))]"
													layoutpolicy_horizontal = expanding
													margin_right = 10
													margin_top = 10
													
													item = {
														vbox = {
															icon = {
																name = "faith_icon"
																texture = "[Scope.Faith.GetIcon]"
																size = { 60 60 }
															}
															
															text_multi = {
																text = "[Scope.Faith.GetName]"
																layoutpolicy_horizontal = expanding
																align = center
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_domain_icon"
																	texture = "gfx/interface/icons/icon_domain.dds"
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.Faith.GetNumberOfCountiesOfFaith] ([Scope.ScriptValue('faith_county_number_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_empire_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 5
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_emperors_number_value')|0] ([Scope.ScriptValue('faith_emperors_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_kingdom_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 4
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_kings_number_value')|0] ([Scope.ScriptValue('faith_kings_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_duchy_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 3
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_dukes_number_value')|0] ([Scope.ScriptValue('faith_dukes_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_county_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 2
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_counts_number_value')|0] ([Scope.ScriptValue('faith_counts_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
														}
													}
												}
												
												hbox = {
													datamodel = "[Scope.GetList('tracked_powerbalance_faiths_list_row_3')]"
													visible = "[DataModelHasItems(Scope.GetList('tracked_powerbalance_faiths_list_row_3'))]"
													layoutpolicy_horizontal = expanding
													margin_right = 10
													margin_top = 10
													
													item = {
														vbox = {
															icon = {
																name = "faith_icon"
																texture = "[Scope.Faith.GetIcon]"
																size = { 60 60 }
															}
															
															text_multi = {
																text = "[Scope.Faith.GetName]"
																layoutpolicy_horizontal = expanding
																align = center
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_domain_icon"
																	texture = "gfx/interface/icons/icon_domain.dds"
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.Faith.GetNumberOfCountiesOfFaith] ([Scope.ScriptValue('faith_county_number_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_empire_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 5
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_emperors_number_value')|0] ([Scope.ScriptValue('faith_emperors_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_kingdom_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 4
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_kings_number_value')|0] ([Scope.ScriptValue('faith_kings_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_duchy_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 3
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_dukes_number_value')|0] ([Scope.ScriptValue('faith_dukes_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
															
															hbox = {
																layoutpolicy_horizontal = expanding
																
																icon = {
																	name = "faith_powerbalance_county_icon"
																	texture = "gfx/interface/coat_of_arms/crown_strip_115_gameconcept.dds"
																	framesize = { 104 104 }

																	frame = 2
																	size = { 25 25 }
																}
																
																expand = {}
																
																text_single = {
																	raw_text = "[Scope.ScriptValue('faith_counts_number_value')|0] ([Scope.ScriptValue('faith_counts_percentage_value')|0]%)"
																	layoutpolicy_horizontal = expanding
																	align = right
																}
															}
														}
													}
												}
											}
											
											vbox = {
												datamodel = "[Scope.GetList('tracked_story_variables')]"
												visible = "[DataModelHasItems(Scope.GetList('tracked_story_variables'))]"
											
												layoutpolicy_horizontal = expanding
												
												divider_light = {
													layoutpolicy_horizontal = expanding
												}
												
												text_single = {
													raw_text = "#weak Statistics#!"
													align = center
												}
												
												item = {
													hbox = {
														layoutpolicy_horizontal = expanding
														margin_right = 10
														text_single = {
															raw_text = "[Localize(Concatenate(Scope.GetFlagName,'_name'))]:"
															layoutpolicy_horizontal = expanding
															align = left
														}
														
														expand = {}
														
														text_single = {
															text = "[Story.MakeScope.GetVariable(Scope.GetFlagName).GetValue|0]"
															layoutpolicy_horizontal = expanding
															align = right
														}
													}
												}
											}
											
											background = {
												using = Background_Area_Solid
												margin_top = 45
												margin_bottom = 10
												alpha = 0.6
											}
										}
									}
								}
							}
						}
					}
				}

				expand = {}
			}
		}
	}
}

types Decisions
{
	type vbox_decision_group_foldout = vbox {
		datacontext = "[DecisionGroupItem.GetType]"
		spacing = 4

		layoutpolicy_horizontal = expanding

		oncreate = "[BindFoldOutContext]"
		oncreate = "[PdxGuiFoldOut.Unfold]"

		button_expandable_toggle_field = {
			blockoverride "text"
			{
				text = "[DecisionGroupItem.GetGroupTitle]"
			}
		}

		vbox = {
			visible = "[PdxGuiFoldOut.IsUnfolded]"

			layoutpolicy_horizontal = expanding

			fixedgridbox = {
				name = "decisions_in_group"
				datamodel = "[DecisionGroupItem.GetDecisions]"

				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				addcolumn = 527
				addrow = "[Select_float( DecisionGroupType.HasTag('big_button'), '(float)60.0', '(float)50.0' )]"

				item = {
					vbox = {
						layoutpolicy_horizontal = expanding

						button_decision_entry = {
							datacontext = "[DecisionsViewItem.GetDecision]"

							layoutpolicy_horizontal = expanding

							blockoverride "button_size" {
								minimumsize = "[Select_CVector2f( DecisionGroupType.HasTag('big_button'), '(CVector2f)527,55', '(CVector2f)527,45' )]"
							}

							blockoverride "size_illustration" {
								minimumsize = "[Select_CVector2f( DecisionGroupType.HasTag('big_button'), '(CVector2f)527,55', '(CVector2f)527,45' )]"
							}

							blockoverride "decision_texture_icon" {
								texture = "[DecisionsViewItem.GetDecisionPicture]"
							}

							blockoverride "decision_texture_highlight" {
								texture = "[DecisionsViewItem.GetDecisionPicture]"
							}

							onclick = "[DecisionsViewItem.OnSelect]"
							onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
							down = "[DecisionsViewItem.IsSelected]"
						}
						expand = {}
					}
				}
			}
		}
	}

	type button_decision_entry = button_standard {
		block "button_size" {
			size = { 300 45 }
		}

		tooltipwidget = {
			decision_tooltip = {}
		}

		margin_widget = {
			parentanchor = right|vcenter
			scissor = yes

			margin = { 2 2 }

			block "size_illustration" {
				size = { 100% 100% }
			}

			proportional_icon = {
				name = "illustration"
				visible = "[Decision.IsPossibleForPlayer]"
				parentanchor = right|top
				size = { 45% 100% }
				mirror = horizontal

				block "icon_alpha" {
					alpha = 0.6
				}

				block "decision_texture_icon" {
					texture = "[Decision.GetPicture( GetPlayer.Self )]"
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			proportional_icon = {
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				parentanchor = right|top
				size = { 45% 100% }
				mirror = horizontal
				
				enabled = no

				alpha = 0.6

				block "decision_texture_highlight" {
					texture = "[Decision.GetPicture( GetPlayer.Self )]"
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		# Vignette
		margin_widget = {
			parentanchor = center
			size = { 100% 100% }
			
			margin = { 2 2 }

			icon = {
				parentanchor = center
				size = { 100% 100% }

				texture = "gfx/interface/component_tiles/tile_vignette_3px.dds"
				spriteType = Corneredtiled
				spriteborder = { 5 5 }
			}
		}

		hbox = {
			margin = { 15 0 }
			margin_right = 10

			text_single = {
				name = "title"
				visible = "[Decision.IsPossibleForPlayer]"
				layoutpolicy_horizontal = growing

				text = "[Decision.GetTitleForPlayer]"
				align = nobaseline
				block "default_format" {
					default_format = "#clickable"
				}
			}

			text_single = {
				name = "title2"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				layoutpolicy_horizontal = growing

				text = "[Decision.GetTitleForPlayer]"
				align = nobaseline
				block "default_format" {
					default_format = "#low"
				}
			}

			highlight_icon = {
				name = "not_possible"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				size = { 30 30 }

				texture = "gfx/interface/icons/symbols/icon_cross.dds"
			}
		}
	}
}

types Contract
{
	type contract_item = vbox {
		layoutpolicy_horizontal = expanding
		using = Background_Letter

		widget = {
			size = { 520 50 }

			background = {
				visible = "[Not(TaskContract.IsCriminal)]"
				texture = "gfx/interface/window_contract/header_letter.dds"
				alpha = 0.9
				margin = { 4 2 }
			}

			background = {
				visible = "[TaskContract.IsCriminal]"
				texture = "gfx/interface/window_contract/header_letter_crime.dds"
				alpha = 0.9
				margin = { 4 2 }
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_left = 8
					margin_right = 10

					### Contract icon
					hbox = {
						layoutpolicy_vertical = expanding

						icon = {
							name = "contract_icon"
							size = { 56 56 }
							texture = "[TaskContract.GetType.GetIcon]"
						}

						header_text = {
							name = "header_text"
							text = "[TaskContract.GetType.GetName]"
							margin = { 4 0 }
							margin_bottom = 15
						}
					}

					expand = {}

					### Contract Tier and Stars
					hbox = {
						layoutpolicy_vertical = expanding
						margin_right = 10
						margin_bottom = 15

						background = {
							using = Background_Area_Dark
							alpha = 0.2
							margin_bottom = -15

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_horizontal_thick.dds"
								blend_mode = alphamultiply
							}
						}

						text_single = {
							text = "[SelectLocalization(IsLandlessAdventurer( TaskContract.GetTaker ) , 'TASK_CONTRACT_TIER' , SelectLocalization(IsAdministrativeRuler( TaskContract.GetTaker ), 'GOVERNANCE_ISSUE_TIER', 'SETTLEMENT_ISSUE_TIER'))]"
							default_format = "#italic"
							margin_right = 5
						}

						### Filled Stars
						icon_flat_standard_gold = {
							name = "star_fill_easy"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_medium"
							visible = "[Or( TaskContract.IsMedium, TaskContract.IsHard )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_gold = {
							name = "star_fill_hard"
							visible = "[TaskContract.IsHard]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						### Empty Stars
						icon_flat_standard_black = {
							name = "star_empty_medium"
							visible = "[TaskContract.IsEasy]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}

						icon_flat_standard_black = {
							name = "star_empty_hard"
							visible = "[Or( TaskContract.IsEasy, TaskContract.IsMedium )]"
							size = { 22 22 }
							texture = "gfx/interface/icons/flat_icons/star.dds"
						}
					}

					blockoverride "header_text"
					{
					}
				}
			}
		}

		hbox = {
			margin = { 10 10 }
			layoutpolicy_horizontal = expanding

			background = {
				using = Background_Area_Dark

				texture = "gfx/interface/component_masks/patterns/mask_pattern_floral.dds"
				margin_top = 5
				alpha = 0.6

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_scratches.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
					blend_mode = alphamultiply
					alpha = 0.8
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
					blend_mode = alphamultiply
					mirror = vertical
					alpha = 0.2
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
					blend_mode = alphamultiply
					mirror = vertical
					alpha = 0.5
				}
			}

			widget = {
				size = { 160 160 }

				datacontext = "[TaskContract.GetEmployer]"
				visible = "[Character.IsValid]"

				icon = {
					name = "portrait_background"
					size = { 192 200 }
					position = { -10 -20 }
					texture = "gfx/interface/window_legend_chronicle/marginalia_portrait_gold_bg.dds"

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_clouds.dds"
						blend_mode = alphamultiply
						spriteType = corneredTiled
						alpha = 0.5
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_scratches.dds"
						blend_mode = alphamultiply
						spriteType = corneredTiled
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
						blend_mode = alphamultiply
					}

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
						blend_mode = alphamultiply
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_seamless_torn_edge_vertical.dds"
						spriteType = corneredtiled
						spriteborder_right = 1080
						blend_mode = alphamultiply
					}

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_seamless_torn_edge_horizontal.dds"
						spriteType = corneredtiled
						spriteborder_top = 1080
						blend_mode = alphamultiply
					}
				}

				portrait_button = {
					datacontext = "[TaskContract.GetEmployer]"
					visible = "[Character.IsValid]"
					size = { 175 210 }
					position = { 0 -40 }

					using = portrait_base

					portrait_texture = "[Character.GetAnimatedPortrait( 'environment_hud', 'camera_torso', 'idle', PdxGetWidgetScreenSize( PdxGuiWidget.Self ) )]"
					background_texture = "gfx/portraits/portrait_transparent.dds"
					texture = "gfx/portraits/portrait_transparent.dds"
					mask = "gfx/portraits/portrait_mask_body.dds"
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					widget = {
						size = { 200 200 }


						button = {
							name = "name_plate"

							parentanchor = bottom

							size = { 150 32 }
							position = { 10 -45 }
							using = Background_Letter
							alpha = 0.9

							datacontext = "[TaskContract.GetEmployer]"
							onclick = "[DefaultOnCharacterClick( Character.GetID )]"

							tooltipwidget = {
								container_character_tooltip = {}
							}

							text_multi = {
								min_width = 115
								max_width = 115
								min_height = 32
								max_height = 32

								position = { 23 1 }

								text = "[Character.GetFirstNameNoTooltip]"
								default_format = "#light_background"
								align = vcenter|nobaseline|center
								using = Font_Type_Flavor
								using = Text_Light_Background_Overrides
							}
						}

						coa_realm_small_crown = {
							datacontext = "[TaskContract.GetEmployer]"
							visible = "[And(Character.IsAlive, Character.HasLandedTitles)]"
							parentanchor = bottom|left
							position = { -6 -37 }
							scale = 0.8
						}

					}

				}
			}



			### Contract desc
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				expand = {}

				vbox = {

					icon = {
						name = "decal"
						size = { 262 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
						mirror = vertical
					}

					### Desc title
					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							margin = { 0 8 }
							max_width = 320

							text = "[TaskContract.GetType.GetDescriptionTitle]"
							using = Font_Type_Flavor
							using = Font_Size_Medium
							default_format = "#light_background"
						}

						expand = {}
					}
				}

				vbox = {
					spacing = 5

					### Desc
					hbox = {
						layoutpolicy_horizontal = expanding
						margin_bottom = 10

						text_multi = {
							max_width = 320
							autoresize = yes

							text = "[TaskContract.GetTaskContractDescription]"
							default_format = "#light_background;italic"
						}

						expand = {}
					}

					icon = {
						name = "decal"
						size = { 262 20 }
						texture = "gfx/interface/window_legend_chronicle/marginalia_divider.dds"
						alpha = 0.5
					}
				}

				expand = {}
			}

			expand = {}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 20 10 }

			background = {
				margin = { -10 0}
				using = Background_Area
				alpha = 2

				modify_texture = {
					texture = "gfx/interface/component_masks/event_effect_mask.dds"
					blend_mode = alphaMultiply
					alpha = 1
				}
			}

			text_multi = {
				max_width = 500
				autoresize = yes

				text = "[TaskContract.GetTaskContractRequest]"
				default_format = "#high;italic"
			}

		}


		expand = {}

		margin_bottom = 10

		vbox = {
			hbox = {
				margin = {0 15}

				button_primary = {
					size = { 150 33 }
					onclick = "[ToggleGameViewData('task_contract', TaskContract.Self )]"
					text = "VIEW_CONTRACT"
					using = tooltip_se
				}
			}

		}

		expand = {}
	}
}

types GHCompTypes { # Make the gui warning disappear
	type gh_overwrite_window_decisions = vbox {}
}