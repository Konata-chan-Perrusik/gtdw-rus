types gh_main
{
	type = gh_patch_highlights = icon
	{
		name = "right_panel"
		parentanchor = right|vcenter
		size = { 452 820 }
		# texture = "gfx/interface/frontend/frontend_main_menu_bg.dds"

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding


			background = {
				using = Background_Area_Light
				using = Mask_Rough_Edges
				margin_top = -12
				margin_bottom = 12
			}

			text_single = {
				margin = { 160 5 }
				parentanchor = top
				layoutpolicy_horizontal = expanding
				raw_text = "Что нового?"
				using = Font_Size_Big
				default_format = "#high;bold;glow_color:{0,0,0,1}"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				scrollarea = {
					name = "changelog_scrollbox"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					scrollbarpolicy_horizontal = always_off

					scrollbar_vertical = {
						using = editor_vertical_scrollbar
					}

					scrollwidget = {
						vbox = {
							ignoreinvisible = yes
							layoutpolicy_horizontal = expanding
							spacing = 10
							
							gh_patch_highlight_card = {
								blockoverride "patch_highlight_title"
								{
									raw_text = "Roads to Power и совместимость с 1.15 Compatibility"
								}
								blockoverride "patch_highlight_subtitle"
								{
									raw_text = "Compatch"
								}
								blockoverride "patch_highlight_header_background_color" {
									using = Color_Orange
								}
								blockoverride "patch_highlight_header_icon" {
									icon = {
										size = { 32 32 }
										texture = "gfx/interface/icons/GH_main_menu/rtp_icon.dds"
									}
								}
								blockoverride "patch_highlight_description"
								{
									raw_text = "Godherja был внесен патч для поддержки бесплатного обновления 1.15 "Корона", дополнения #EMP "Дороги к власти"! , и его механика уже применялась в нескольких местах. Кашира использует [administrative|E] [government|E], в то время как множество [adventurers|E] сейчас бродят по [aeras|E] среди целого ряда других интеграций."
								}
							}
							
							gh_patch_highlight_card = {
								blockoverride "patch_highlight_title"
								{
									raw_text = "Расширение Живой магии"
								}
								blockoverride "patch_highlight_subtitle"
								{
									raw_text = "Магия"
								}
								blockoverride "patch_highlight_header_background_color" {
									using = Color_Red
								}
								blockoverride "patch_highlight_header_icon" {
									icon = {
										size = { 32 32 }
										texture = "gfx/interface/icons/GH_main_menu/living_magic_icon.dds"
									}
								}
								blockoverride "patch_highlight_description"
								{
									raw_text = "Более тысячи лет аверианской науки сделали [living_magic|E], пожалуй, самой богатой арканологической традицией на всем [aeras|E], которая теперь достойно представлена #V 52#! новыми [Концепция ('ритуал', 'ритуалами')|E]."
								}
							}
							
							gh_patch_highlight_card = {
								blockoverride "patch_highlight_title"
								{
									raw_text = "Карта мира"
								}
								blockoverride "patch_highlight_subtitle"
								{
									raw_text = "Карта"
								}
								blockoverride "patch_highlight_header_background_color" {
									using = Color_Green
								}
								blockoverride "patch_highlight_header_icon" {
									icon = {
										size = { 32 32 }
										texture = "gfx/interface/icons/GH_main_menu/adventure_inspiration.dds"
									}
								}
								blockoverride "patch_highlight_description"
								{
									raw_text = "От идиллических лесов и равнин Шевалье до экологически обширного и разнообразного Калатипсоми, через болота долины Нокидбес и до самых отдаленных биолюминесцентных берегов Ночного побережья. Аэрас получил значительные эстетические улучшения"
								}
							}
							
							gh_patch_highlight_card = {
								blockoverride "patch_highlight_title"
								{
									raw_text = "Переработка охоты"
								}
								blockoverride "patch_highlight_subtitle"
								{
									raw_text = "Игровая механика"
								}
								blockoverride "patch_highlight_header_background_color" {
									using = Color_Orange
								}
								blockoverride "patch_highlight_header_icon" {
									icon = {
										size = { 32 32 }
										texture = "gfx/interface/icons/GH_main_menu/hunt_icon.dds"
									}
								}
								blockoverride "patch_highlight_description"
								{
									raw_text = "Система охоты была полностью переработана, появились охоты на монстров, всплывающие подсказки для ознакомления с биологическим разнообразием баронств, обновленный бестиарий с фильтрами и контракты на убийство для  [adventurers|E]."
								}
							}

							gh_patch_highlight_card = {
								blockoverride "patch_highlight_title"
								{
									raw_text = "Контент для амсари"
								}
								blockoverride "patch_highlight_subtitle"
								{
									raw_text = "Игровая механика"
								}
								blockoverride "patch_highlight_header_background_color" {
									using = Color_Bright_Yellow
								}
								blockoverride "patch_highlight_header_icon" {
									icon = {
										size = { 32 32 }
										texture = "gfx/interface/icons/GH_main_menu/amsar_icon.dds"
									}
								}
								blockoverride "patch_highlight_description"
								{
									raw_text = "В Амсар появилось множество новых решений, событий, религий, культурных традиций и полностью переработанная гражданская война. В игре есть механика, позволяющая по-разному поддерживать претендентов и сплачивать других на вашу сторону!"
								}
							}
							
							expand = {}
						}
					}

					blockoverride "scrollbox_background_fade" {
						icon = {
							alpha = 0
						}
					}
				}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					
					text_single = {
						raw_text = "Join us at our #BOL;color:{0.05,0.71,0.47} Discord Server#! to interact with the dev team directly and receive teasers for upcoming content:"
						layoutpolicy_horizontal = expanding
						default_format = "#high"
						max_width = 380
								
						multiline = yes
						using = Font_Size_Small
						align = nobaseline
					}
					
					editbox_standard = {
						layoutpolicy_horizontal = expanding
						max_width = 375
						blockoverride "editbox_properties" { raw_text = "https://discord.com/invite/ABNh7Yd4eB" }
					}
					
					spacer = {
						size = { 20 20 }
					}
					
					text_single = {
						raw_text = "The full changelog for this patch can be found below:"
						layoutpolicy_horizontal = expanding
						default_format = "#high"
						max_width = 380
								
						using = Font_Size_Small
						align = nobaseline
					}
					
					editbox_standard = {
						layoutpolicy_horizontal = expanding
						max_width = 375
						blockoverride "editbox_properties" { raw_text = "https://docs.google.com/document/d/1zVF1CAzpkt3ekg41GF6tvSl2OJCqNrZSpkuRt0WNI6M/edit?usp=sharing" }
					}
				}
			}

			spacer = {
				size = { 10 10 }
			}
		}
	}
	
	type gh_patch_highlight_card = vbox_generic_object_card
	{
		layoutpolicy_horizontal = expanding
		alwaystransparent = no
						
		blockoverride "header_properties"
		{
			layoutpolicy_horizontal = expanding
			margin = { 10 10 }
		}
		
		blockoverride "header_background_color"
		{
			block "patch_highlight_header_background_color" {
				using = Color_Green
			}
		}
						
		blockoverride "header_pre_contents"
		{
			block "patch_highlight_header_icon" {
				icon = {
					size = { 32 32 }
					texture = "gfx/interface/icons/GH_main_menu/adventure_inspiration.dds"
				}
			}
		}
						
		blockoverride "header_top_contents"
		{
			text_single = {
				block "patch_highlight_title" {
					raw_text = "PATCH HIGHLIGHT TEXT"
				}
				default_format = "#high"
				max_width = 380
						
				using = Font_Size_Medium
				align = nobaseline
						
				parentanchor = vcenter|left
			}
		}
		
		blockoverride "header_bottom_contents"
		{
			text_single = {
				block "patch_highlight_subtitle" {
					raw_text = "Mapping"
				}
				default_format = "#weak"
				margin_top = 10
		
				using = Font_Size_Small
				align = nobaseline
		
				parentanchor = vcenter|left
			}
		}
		
		blockoverride "card_contents"
		{
			Background = {
				spriteType = Corneredtiled
				alpha = 0.15
				texture = "gfx/interface/colors/gold.dds"
				using = Mask_Rough_Edges
		
				modify_texture = {
					name = "mask"
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
					spriteborder = { 0 0 }
					blend_mode = alphamultiply
				}
		
				modify_texture = {
					texture = "gfx/interface/component_masks/patterns/mask_pattern_floral.dds"
					spriteType = Corneredtiled
					blend_mode = alphamultiply
					alpha = 0.8
					texture_density = 2
				}
		
				modify_texture = {
					texture = "gfx/interface/colors/grey.dds"
					blend_mode = normal
				}
			}
		
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_left = 20
				margin_right = 10
				spacing = 5
		
				vbox = {
					spacing = 5
		
					text_multi = {
						layoutpolicy_horizontal = expanding
						autoresize = yes
						max_width = 410
						block "patch_highlight_description" {
							raw_text = "PATCH HIGHLIGHT DESCRIPTION"
						}
						fontsize = 14
						align = nobaseline|left
					}
				}
		
				expand = {}
		
				divider_light = {
					layoutpolicy_vertical = expanding
					
					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick_vertical.dds"
						blend_mode = alphamultiply
					}
				}
			}
		}
	}

	type = gh_challenge_character = widget
	{
		name = "challenge_character"
		datacontext = "[FrontEndMainView.GetChallengeCharacter]"
		datacontext = "[ChallengeCharacter.GetBookmarkCharacter]"
		allow_outside = yes

		size = { 456 500 }

		widget = {
			position = { 0 -40 }
			size = { 280 280 }
			parentanchor = top|hcenter

			icon = {
				texture = "gfx/interface/colors/black.dds"
				size = { 180% 180% }
				position = { -10 -10 }
				parentanchor = top|hcenter
				alpha = 0.5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_glow.dds"
					blend_mode = alphaMultiply
				}
			}

			icon = {
				texture = "gfx/interface/colors/black.dds"
				size = { 220% 220% }
				position = { -10 -10 }
				parentanchor = top|hcenter
				alpha = 0.5
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_glow.dds"
					blend_mode = alphaMultiply
				}
			}

			coat_of_arms_icon = { #Dynasty
				size = { 100% 100% }
				visible = "[Not( BookmarkCharacter.HasDynastyHouse )]"
				parentanchor = top|hcenter
				coat_of_arms = "[BookmarkCharacter.GetDynastyTemplate.GetCoA.GetTexture('(int32)256','(int32)256')]"
				coat_of_arms_slot = "[BookmarkCharacter.GetDynastyTemplate.GetCoA.GetSlot('(int32)256','(int32)256')]"
				coat_of_arms_mask = "gfx/interface/frontend/mask_coa_flag.dds"

				modify_texture = {
					texture = "gfx/interface/coat_of_arms/coa_overlay.dds"
					blend_mode = overlay
					spritetype = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_glow.dds"
					blend_mode = alphaMultiply
				}
			}

			coat_of_arms_icon = { #Dynasty House
				size = { 100% 100% }
				visible = "[BookmarkCharacter.HasDynastyHouse]"
				parentanchor = top|hcenter
				coat_of_arms = "[BookmarkCharacter.GetDynastyHouseTemplate.GetCoA.GetTexture('(int32)256','(int32)256')]"
				coat_of_arms_slot = "[BookmarkCharacter.GetDynastyHouseTemplate.GetCoA.GetSlot('(int32)256','(int32)256')]"
				coat_of_arms_mask = "gfx/interface/frontend/mask_coa_flag.dds"

				modify_texture = {
					texture = "gfx/interface/coat_of_arms/coa_overlay.dds"
					blend_mode = overlay
					spritetype = corneredTiled
				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_glow.dds"
					blend_mode = alphaMultiply
				}
			}
		}

		portrait_button = {
			using = portrait_base
			size = { 240 240 }
			position = { 0 -42 }

			parentanchor = top|hcenter

			portrait_texture = "[FrontEndMainView.GetChallengeCharacterPortrait( 'environment_bookmarks_map', 'camera_shoulders', PdxGetWidgetScreenSize(PdxGuiWidget.Self) )]"
			mask = "gfx/portraits/portrait_mask_body.dds"

			blockoverride "grayscale" {}
			blockoverride "portrait_button_template_onmouseenter" {}
			blockoverride "portrait_button_template_onmouseleave" {}
			blockoverride "portrait_button_template_onclick" {}
			blockoverride "portrait_button_template_onrightclick" {}
			blockoverride "portrait_button_template_tooltip" {}
			alwaystransparent = yes
		}

		widget = {
			parentanchor = hcenter
			position = { 0 90 }
			size = { 300 200 }
			button_back = {
				parentanchor = left
				visible = "[InDebugMode]"
				size = { 30 30 }
				onclick = "[FrontEndMainView.GoPreviousChallengeCharacter]"
			}

			button_forward = {
				parentanchor = right
				visible = "[InDebugMode]"
				size = { 30 30 }
				onclick = "[FrontEndMainView.GoNextChallengeCharacter]"
			}
		}

		icon = {
			texture = "gfx/interface/component_decoration/decoration_frame_top_clean.dds"
			position = { -24 164 }
			spriteType = Corneredtiled
			spriteborder = { 100 0 }
			size = { 500 20 }
			texture_density = 2
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin_bottom = 10

			spacer = {
				size = { 180 180 }
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				background = {
					texture = "gfx/interface/component_masks/mask_rough_edges.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					color = { 0.025 0.025 0.05 0.8 }
					texture_density = 2
					alpha = 0.75
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					margin = {0 10}

					background = {
						using = Background_Area_Dark
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						autoresize = no
						align = nobaseline|center
						text = "CHALLENGE_CHARACTER_SUGGESTION"
						default_format = "#high;glow_color:{0,0,0,1}"
					}

					text_single = {
						name = "character_name"
						layoutpolicy_horizontal = expanding
						autoresize = no
						align = nobaseline|center
						text = "CHALLENGE_CHARACTER_INFO"
						using = Font_Size_Big
						default_format = "#high;glow_color:{0,0,0,1}"
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						autoresize = no
						align = nobaseline|center
						text = "[ChallengeCharacter.GetStartDate.GetStringLong]"
						default_format = "#medium;glow_color:{0,0,0,1}"
						using = Font_Size_Medium
						using = Font_Type_Flavor
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 24 0 }

					divider_light = {
						layoutpolicy_horizontal = expanding
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 16
					margin_left = 16

					expand = {layoutpolicy_horizontal = expanding}

					vbox = {
						layoutpolicy_vertical = expanding
						coa_dynasty_bookmark = {
							blockoverride "character" {}
							using = tooltip_ws

						}
						expand = {layoutpolicy_vertical = expanding}
					}
					
					expand = {layoutpolicy_horizontal = expanding}

					vbox = {
						layoutpolicy_horizontal = expanding
						spacing = 4
						hbox = {
							layoutpolicy_horizontal = expanding
							min_width = 270
							spacing = 10
							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5
								text_single = {
									max_width = 140
									layoutpolicy_horizontal = expanding
									text = "BOOKMARK_CHARACTER_CULTURE"
									autoresize = no
									align = nobaseline
								}

								text_single = {
									max_width = 140
									layoutpolicy_horizontal = expanding
									text = "BOOKMARK_CHARACTER_RELIGION"
									autoresize = no
									align = nobaseline
								}
							}

							divider_light = {
								layoutpolicy_vertical = expanding
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5

								text_single = {
									max_width = 140
									layoutpolicy_horizontal = expanding
									text = "BOOKMARK_CHARACTER_GOVERNMENT"
									autoresize = no
									align = nobaseline
								}

								text_single = {
									max_width = 140
									layoutpolicy_horizontal = expanding
									text = "BOOKMARK_CHARACTER_REALM"
									autoresize = no
									align = nobaseline
									tooltip = "BOOKMARK_CHARACTER_REALM"
								}
							}
						}

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "BOOKMARK_CHARACTER_DIFFICULTY"
							autoresize = no
							align = nobaseline
						}
					}
					expand = {layoutpolicy_horizontal = expanding}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					margin = { 24 12 }

					divider_light = {
						layoutpolicy_horizontal = expanding
					}
				}

				hbox = {
					datamodel = "[FrontEndMainView.AccessChallengeAchievements]"
					spacing = 16
					item = {

						container = {

							icon = {
								visible = "[GUIAchievement.GetAchievement.IsUnlocked]"
								texture = "[GUIAchievement.AccessTexture]"
								size = { 64 64 }
								alpha = "[Select_float(GUIAchievement.GetAchievement.IsUnlocked,'(float)1.0','(float)0.5')]"
								#tooltip = "ACHIEVEMENT_UNLOCKED"
								tooltip = "CHALLENGE_ACHIEVEMENT_TOOLTIP"
							}

							highlight_icon = {
								visible = "[Not(GUIAchievement.GetAchievement.IsUnlocked)]"
								texture = "[GUIAchievement.AccessTexture]"
								size = { 64 64 }
								alpha = "[Select_float(GUIAchievement.GetAchievement.IsUnlocked,'(float)1.0','(float)0.5')]"
								#tooltip = "ACHIEVEMENT_LOCKED"
								tooltip = "CHALLENGE_ACHIEVEMENT_TOOLTIP"

								effectname = "GreyedOut"

								highlight_icon = {
									size = { 96% 97% }
									parentanchor = center
									texture = "gfx/interface/component_masks/mask_frame_horizontal.dds"
									tintcolor = { 0 0 0 0.6 }
								}
							}
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 12

					background = {
						using = Background_Area_Light
						using = Mask_Rough_Edges
						margin_top = -12
						margin_bottom = 12
					}

					text_multi = {
						name = "character_text"
						text = "[BookmarkCharacter.GetDescription]"
						size = { 400 250 }
						margin_bottom = 10
						align = left
					}

					expand = {}

					hbox = {
						layoutpolicy_horizontal = expanding

						expand = {}
						

						button_standard = {
							size = { 160 40 }
							onclick = "[FrontEndMainView.StartGameWithChallengeCharacter]"
							text = "START"
						}

						expand = {}

						button_tertiary = {
							name = "game_rules_button"
							size = { 160 40 }

							onclick = "[OpenGameRules]"
							hbox = {
								layoutpolicy_horizontal = expanding
								expand = {}
								button_rules = {
									size = { 25 25 }
									alwaystransparent = yes
								}

								text_single = {
									margin = { 4 0 }
									text = "GAME_RULES"
									align = nobaseline
									default_format = "#clickable"
									alwaystransparent = yes
								}
								
								vbox = {
									datacontext = "[GetGameRules]"
									achievements_enabled_icon = {
										visible = "[CanGetAchievements]"
										size = { 25 25 }
										tooltip = ACHIEVEMENTS_ENABLED
									}
									achievements_disabled_icon = {
										visible = "[Not( CanGetAchievements )]"
										size = { 25 25 }
										tooltip = ACHIEVEMENTS_DISABLED
									}
								}

								expand = {}
							}
						}

						expand = {}
					}
				}
			}
		}
	}

	type = gh_lore_doc_button = button_group
	{
		onclick = "[GetVariableSystem.Toggle('show_lore_doc')]"
		onclick = "[GetVariableSystem.Clear('artifact_window_open' )]"
		onclick = "[GetVariableSystem.Set('lore_doc_section', 'foreword')]"
		flowcontainer = {
			direction = vertical

			gh_lore_doc_button_no_text = {
				parentanchor = hcenter
				size = { 50 30 }
				alpha = 0.7
			}

			text_single = {
				parentanchor = hcenter
				max_width = 100
				min_width = 100
				align = center
				fontsize = 13
				fontsize_min = 10

				text = "LORE_DOC_WINDOW_TITLE"
				default_format = "#low;glow_color:{0.1,0.1,0.1,1}"
			}
		}
	}

	type gh_lore_doc_button_no_text = button_normal
	{
		name = "lore_doc_no_text_button"
		size = { 35 35 }
		alpha = 0.7

		enabled = [GetPlayer.IsValid]
		
		button_icon = {
			parentanchor = center
			alwaystransparent = yes
			texture = "gfx/interface/icons/flat_icons/gh_logo_icon.dds"
		}
		
		tooltip = "TOOLTIP_OPEN_OPEN_LORE_DOC"
		
		onclick = "[GetVariableSystem.Toggle('show_lore_doc')]"
		onclick = "[GetVariableSystem.Clear('artifact_window_open' )]"
		onclick = "[GetVariableSystem.Set('lore_doc_section', 'foreword')]"
		
		state = {
			name = _mouse_enter
			alpha = 1
			duration = 0.7
			using = Animation_Curve_Default
		}

		state = {
			name = _mouse_leave
			alpha = 0.7
			duration = 0.2
			using = Animation_Curve_Default
		}
	}
}