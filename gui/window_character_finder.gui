### LIST TEMPLATE

window = {
	name = "character_finder_window"
	# size = { 750 90% }
	parentanchor = top|right
	position = { -50 65 }
	allow_outside = yes
	layer = middle

	using = Window_Background
	using = Window_Decoration_Spike
	using = Window_Size_CharacterList

	datacontext = "[CharacterFinderWindow.GetCharacterList]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "CHARACTER_FINDER_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterFinderWindow.Close]"
			}
		}

		vbox_character_list = {
			#visible = "[Not(GetPlayer.MakeScope.Var('character_finder_select_magic_school').IsSet)]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_empty_visibility"
			{
				layoutpolicy_vertical = expanding
				visible = "[Not( CharacterSelectionList.HasItems )]"
				text = "CHARACTER_FINDER_NO_MATCH"
			}
			
			blockoverride "container_implementation" {
				fixedgridbox = {
					addcolumn = 630
					addrow = 107

					name = "characters_grid"
					datamodel_reuse_widgets = yes
					datamodel = "[CharacterSelectionList.GetList]"
					visible = "[Not(CharacterSelectionList.IsBuildingList)]"

					item = {
						widget_character_list_item_finder = {
							size = { 630 94 }
						}
					}
				}
			}
		}
		
		#vbox_character_list = {
		#	visible = "[GetPlayer.MakeScope.Var('character_finder_select_magic_school').IsSet]"
		#	layoutpolicy_horizontal = expanding
		#	layoutpolicy_vertical = expanding
		#
		#	blockoverride "scrollbox_empty_visibility"
		#	{
		#		layoutpolicy_vertical = expanding
		#		visible = "[Not( CharacterSelectionList.HasItems )]"
		#		text = "CHARACTER_FINDER_NO_MATCH"
		#	}
		#	
		#	blockoverride "container_implementation" {
		#		vbox = {
		#			layoutpolicy_horizontal = expanding
		#
		#			name = "characters_grid"
		#			datamodel_reuse_widgets = yes
		#			datamodel = "[CharacterSelectionList.GetList]"
		#			visible = "[Not(CharacterSelectionList.IsBuildingList)]"
		#
		#			item = {
		#				widget_character_list_item_finder = {
		#					visible = no
		#					#visible = "[GetScriptedGui('character_finder_has_magic_school_scripted_gui').IsShown(GuiScope.SetRoot(CharacterListItem.GetCharacter.MakeScope).AddScope('character_finder_select_magic_school_scope', GetPlayer.MakeScope.Var('character_finder_select_magic_school')).End)]"
		#					size = { 630 94 }
		#				}
		#			}
		#		}
		#	}
		#}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilterWithDefault('relation_filter', '(int32)1')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('range_filter')]"
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding

				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}
					
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('government_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('vassal_stance_filter')]"
					}

					
					
					divider = {
						layoutpolicy_horizontal = expanding
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}


					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('trait_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('sexuality_filter')]"
					}


					divider = {
						layoutpolicy_horizontal = expanding
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('imprisoned_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('inspiration_filter')]"
					}

					

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('artifact_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hostage_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('membership_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}


					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
					}
				}
			}
			
			# GH_TODO: Readd this whenever PDox decides to give us decent filtering tools
			#vbox = {
			#	layoutpolicy_horizontal = expanding
			#	hbox = {
			#		layoutpolicy_horizontal = expanding
			#		margin_top = 4
			#
			#		text_label_center = {
			#			name = "label"
			#			layoutpolicy_horizontal = expanding
			#			margin_right = 36
			#			text = "[magic|E]"
			#			align = center
			#		}
			#	}
			#	
			#	fixedgridbox = {
			#		addcolumn = 60
			#		addrow = 96
			#		datamodel_wrap = 8
			#		flipdirection = yes
			#		datamodel = "[GetGlobalList('global_magic_school_list')]"
			#		
			#		item = {
			#			button_standard_hover = {
			#				size = { 60 60 }
			#				datacontext = "[Scope.Story]"
			#				down = "[And(GetPlayer.MakeScope.Var('character_finder_select_magic_school').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('character_finder_select_magic_school').Story, Scope.Story))]"
			#				onclick = "[GetScriptedGui('character_finder_select_magic_school_filter_scripted_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('character_finder_select_magic_school_scope', Scope.Story.MakeScope).End)]"
			#				magic_school_icon = { }
			#			}
			#		}
			#	}
			#}
		}
	}
}

types GHCompTypes { # Make the gui warning disappear
	type gh_overwrite_window_character_finder = vbox {}
}