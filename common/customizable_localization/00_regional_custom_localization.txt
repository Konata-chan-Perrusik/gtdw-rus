MountedWarriorTerm = {
	type = character

	text = {
		localization_key = knight
	}
}


MountedWarriorTermPlural = {
	type = character

	text = {
		localization_key = knights
	}
}


MountedWarriorAdjective = {
	type = character

	text = {
		localization_key = knightly
	}
}

MartialTournamentAdjective = {
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_feudal
			location = { geographical_region = world_ga_marcher_kingdoms }
		}
		localization_key = tournament_jousting
	}
	text = {
		trigger = {
			OR = {		
				GH_is_any_tribal_government_trigger = yes
				faith = { has_doctrine = standard_hostility_doctrine }
				location = { geographical_region = world_ga_clanlands }
			}
		}
		localization_key = tournament_wrestling
	}
	text = {
		trigger = {
			always = no
		}
		localization_key = tournament_sparring
		fallback = yes
	}
}

LevyMenWomen = {
	type = character

	#Gender law triggers

	text = {
		localization_key = levies_men
	}

	text = {
		localization_key = levies_women
	}

	text = {
		localization_key = levies_people
	}
}

FortifiedBuilding = { #Castle, Fort, Kasbah etc.
	type = character

	text = {
		trigger = { GH_is_any_tribal_government_trigger = yes }
		localization_key = stronghold
	}

	text = {
		trigger = { always = no }
		localization_key = castle
		fallback = yes
	}
}

ResidenceBuilding = { #Castle, Palace, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_nomadic
		}
		localization_key = yurt_residence
	}

	text = {
		trigger = {
			government_has_flag = government_is_tribal
		}
		localization_key = hall_residence
	}

	text = {
		trigger = {
			government_has_flag = government_is_landless_adventurer
		}
		localization_key = tent
	}

	text = {
		trigger = { government_flag_magocracy_trigger = yes }
		localization_key = tower
	}

	text = {
		trigger = { gov_mix_rep_or_playrep_trigger = yes }
		localization_key = mansion
	}

	text = {
		trigger = { gov_mix_theo_or_ho_trigger = yes }
		localization_key = temple
	}

	text = {
		trigger = {
			any_held_title = { is_noble_family_title = yes }
		}
		localization_key = estate
	}

	text = {
		trigger = {
			NOR = {
				government_flag_magocracy_trigger = yes
				gov_mix_rep_or_playrep_trigger = yes
				gov_mix_theo_or_ho_trigger = yes
			}
		}
		localization_key = castle
	}

	text = {
		localization_key = residence
		fallback = yes
	}
}

ResidenceBuildingPlural = { #Castles, Palaces, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_nomadic
		}
		localization_key = yurt_residence_plural
	}

	text = {
		trigger = {
			government_has_flag = government_is_tribal
		}
		localization_key = hall_residence_plural
	}

	text = {
		trigger = {
			government_has_flag = government_is_landless_adventurer
		}
		localization_key = camp_plural
	}

	text = {
		trigger = { government_flag_magocracy_trigger = yes }
		localization_key = towers
	}

	text = {
		trigger = { gov_mix_rep_or_playrep_trigger = yes }
		localization_key = mansions
	}

	text = {
		trigger = { gov_mix_theo_or_ho_trigger = yes }
		localization_key = temples
	}

	text = {
		trigger = {
			any_held_title = { is_noble_family_title = yes }
		}
		localization_key = estate_plural
	}

	text = {
		trigger = {
			NOR = {
				government_flag_magocracy_trigger = yes
				gov_mix_rep_or_playrep_trigger = yes
				gov_mix_theo_or_ho_trigger = yes
			}
		}
		localization_key = castles
	}

	text = {
		localization_key = residences
		fallback = yes
	}
}


OutdoorsHidingPlace = { #Something you can find in nature / by the road
	type = character

	text = {
		localization_key = trees
	}

	text = {
		localization_key = rocks
	}
}

ObjectToClimb = {
	type = character

	text = {	
		trigger = { location = { GH_any_desert_terrain_trigger = yes } }
		localization_key = sand_dune
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_mountains_terrain_trigger = yes
					GH_any_drylands_terrain_trigger = yes
					GH_any_steppe_terrain_trigger = yes
					GH_any_plains_terrain_trigger = yes
					GH_any_wasteland_terrain_trigger = yes
				}
			}
		}
		localization_key = boulder
	}
	text = {
		trigger = { location = { GH_any_underground_terrain_trigger = yes } }
		localization_key = rubble
	}
	text = {
		localization_key = tree
	}
}

IndefiniteBodyOfWater = { #Lake, River, Oasis, etc.
	type = character
	random_valid = yes

	text = {
		trigger = { location = { GH_any_oasis_terrain_trigger = yes } }
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = { location = { is_coastal = yes } }
		localization_key = body_of_water_the_ocean
	}
	text = {
		trigger = { location = { is_riverside_province = yes } }
		localization_key = body_of_water_a_river
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_farmlands_terrain_trigger = yes
					GH_any_jungle_terrain_trigger = yes
					GH_any_wetlands_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_floodplains_terrain_trigger = yes
					GH_any_wetlands_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_plains_terrain_trigger = yes
					GH_any_hills_terrain_trigger = yes
					GH_any_forest_terrain_trigger = yes
					GH_any_taiga_terrain_trigger = yes
					GH_any_steppe_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

# As above, but excluding rivers'n'seas.
IndefiniteBodyOfWater_Static = {
	type = character
	random_valid = yes

	text = {
		trigger = { location = { GH_any_oasis_terrain_trigger = yes } }
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_jungle_terrain_trigger = yes
					GH_any_wetlands_terrain_trigger = yes
					GH_any_farmlands_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_floodplains_terrain_trigger = yes
					GH_any_wetlands_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					GH_any_taiga_terrain_trigger = yes
					GH_any_steppe_terrain_trigger = yes

					GH_any_plains_terrain_trigger = yes
					GH_any_forest_terrain_trigger = yes
					GH_any_hills_terrain_trigger = yes
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

RandomExampleName = {
	type = character

	text = {
		localization_key = random_example_name_default
	}
}

TerrainTypeCountyScope = {
	type = landed_title

	text = {
		trigger = { title_province = { GH_any_plains_terrain_trigger = yes } }
		localization_key = terrain_plains
	}

	text = {
		trigger = { title_province = { GH_any_farmlands_terrain_trigger = yes } }
		localization_key = terrain_farmlands
	}

	text = {
		trigger = { title_province = { GH_any_hills_terrain_trigger = yes } }
		localization_key = terrain_hills
	}

	text = {
		trigger = { title_province = { GH_any_mountains_terrain_trigger = yes } }
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { title_province = { GH_any_desert_terrain_trigger = yes } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { title_province = { GH_any_oasis_terrain_trigger = yes } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { title_province = { GH_any_jungle_terrain_trigger = yes } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { title_province = { GH_any_forest_terrain_trigger = yes } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { title_province = { GH_any_taiga_terrain_trigger = yes } }
		localization_key = terrain_taiga
	}

	text = {
		trigger = { title_province = { GH_any_wetlands_terrain_trigger = yes } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { title_province = { GH_any_steppe_terrain_trigger = yes } }
		localization_key = terrain_steppe
	}

	text = {
		trigger = { title_province = { GH_any_floodplains_terrain_trigger = yes } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { title_province = { GH_any_drylands_terrain_trigger = yes } }
		localization_key = terrain_drylands
	}

	text = {	
		trigger = { title_province = { GH_any_wasteland_terrain_trigger = yes } }
		localization_key = terrain_deadlands
	}

	text = {
		trigger = { title_province = { GH_any_underground_terrain_trigger = yes } }
		localization_key = terrain_underground
	}
}

TerrainType = {
	type = character

	text = {	
		trigger = { location = { GH_any_plains_terrain_trigger = yes } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { location = { GH_any_farmlands_terrain_trigger = yes } }
		localization_key = terrain_farmlands
	}

	text = {
		trigger = { location = { GH_any_hills_terrain_trigger = yes } }
		localization_key = terrain_hills
	}

	text = {
		trigger = { location = { GH_any_mountains_terrain_trigger = yes } }
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { location = { GH_any_desert_terrain_trigger = yes } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { location = { GH_any_oasis_terrain_trigger = yes } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { location = { GH_any_jungle_terrain_trigger = yes } }
		localization_key = terrain_jungle
	}

	text = {
		trigger = { location = { GH_any_forest_terrain_trigger = yes } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { location = { GH_any_taiga_terrain_trigger = yes } }
		localization_key = terrain_taiga
	}

	text = {
		trigger = { location = { GH_any_wetlands_terrain_trigger = yes } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { location = { GH_any_steppe_terrain_trigger = yes } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = {
			location = { GH_any_floodplains_terrain_trigger = yes }
		}
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { location = { GH_any_drylands_terrain_trigger = yes } }
		localization_key = terrain_drylands
	}

	text = {	
		trigger = { location = { GH_any_wasteland_terrain_trigger = yes } }
		localization_key = terrain_deadlands
	}

	text = {
		trigger = { location = { GH_any_underground_terrain_trigger = yes } }
		localization_key = terrain_underground
	}
}

TerrainTypeProvince = {
	type = province

	text = {
		trigger = { GH_any_plains_terrain_trigger = yes }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { GH_any_farmlands_terrain_trigger = yes }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { GH_any_hills_terrain_trigger = yes }
		localization_key = terrain_hills
	}

	text = {	
		trigger = { GH_any_mountains_terrain_trigger = yes }
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { GH_any_desert_terrain_trigger = yes }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { GH_any_oasis_terrain_trigger = yes }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { GH_any_jungle_terrain_trigger = yes }
		localization_key = terrain_jungle
	}

	text = {
		trigger = { GH_any_forest_terrain_trigger = yes }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { GH_any_taiga_terrain_trigger = yes }
		localization_key = terrain_taiga
	}

	text = {
		trigger = { GH_any_wetlands_terrain_trigger = yes }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { GH_any_steppe_terrain_trigger = yes }
		localization_key = terrain_steppe
	}

	text = {
		trigger = { GH_any_floodplains_terrain_trigger = yes }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { GH_any_drylands_terrain_trigger = yes }
		localization_key = terrain_drylands
	}
}

Abortifacient = {
	type = character

	random_valid = yes

	text = {
		localization_key = abortifacient_pennyroyal
		weight_multiplier = {
			base = 3
		}
		#Europe, North Africa, Middle East
		trigger = {
			location = {
				geographical_region = world_greater_aversaria
			}
		}
	}

	text = {
		localization_key = abortifacient_catmint
		#Europe, Asia, Africa
		trigger = { always = yes }
	}

	text = {
		localization_key = abortifacient_thymbra
		#North Africa, Southern Europe, Middle East, Central Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_ga_aversarian_homelands
					geographical_region = world_central_sarradon
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_broadleaf_sage
		#Mediterranean
		trigger = {
			location = {
				OR = {
					geographical_region = world_ga_western_aversaria
					geographical_region = world_ga_imperial_isle
					geographical_region = world_ga_northeast_opakhasia
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_soapwort
		#Europe and Asia
		trigger = {
			location = {
				geographical_region = world_greater_aversaria
			}
		}
	}

	text = {
		localization_key = abortifacient_galingales
		#Africa, Asia
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_bishops_lace
		#Christian only
		#Europe and Southwest Asia
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_wild_carrot
		#Same as Bishop's Lace
		#Europe and Southwest Asia
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_bitter_melon
		#India
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_nutmeg
		#India
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_saffron
		#India
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_vervain
		#Europe
		trigger = { always = no }
	}

	#text = {
	#	localization_key = abortifacient_mugwort
	#	#lesser chance in Europe, rest of Asia
	#}

	text = {
		localization_key = abortifacient_herb_of_grace
		#Christian only
		#Balkans, Anatolia, Mediterranean
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_rue
		#Same as herb-of-grace
		#Balkans, Anatolia, Mediterranean
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_tansy
		#Europe, Mediterranean
		trigger = { always = no }
	}

	text = {
		localization_key = abortifacient_ergot
		weight_multiplier = {
			base = 3
		}
		#Europe
		trigger = {
			location = { geographical_region = world_ga_marcher_kingdoms }
		}
	}
}


#Various Venomous Creatures
VenomousCreature = {
	type = character

	text = {
		localization_key = venomous_creature_rare_spider
		trigger = {
			scope:venomous_creature = flag:rare_spider #Not Northern Europe or the Steppes
		}
	}

	text = {
		localization_key = venomous_creature_deathstalker
		trigger = {
			scope:venomous_creature = flag:deathstalker #North Africa or Middle East
		}
	}

	text = {
		localization_key = venomous_creature_red_scorpion
		trigger = {
			scope:venomous_creature = flag:red_scorpion #India, Nepal
		}
	}

	text = {
		localization_key = venomous_creature_fat_tail
		trigger = {
			scope:venomous_creature = flag:fat_tail #Arabia, Middle East, Egypt
		}
	}

	text = {
		localization_key = venomous_creature_viper
		trigger = {
			scope:venomous_creature = flag:viper #Northern and Eastern Europe
		}
	}

	text = {
		localization_key = venomous_creature_mamba
		trigger = {
			scope:venomous_creature = flag:mamba #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_boomslang
		trigger = {
			scope:venomous_creature = flag:boomslang #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_king_cobra
		trigger = {
			scope:venomous_creature = flag:king_cobra #South-east Asia + India
		}
	}

	text = {
		localization_key = venomous_creature_daboia
		trigger = {
			scope:venomous_creature = flag:daboia #India
		}
	}

	text = {
		localization_key = venomous_creature_saw_scale
		trigger = {
			scope:venomous_creature = flag:saw_scale #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_krait
		trigger = {
			scope:venomous_creature = flag:krait #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_beaked_mammal
		trigger = {
			scope:venomous_creature = flag:beaked_mammal #Australia
		}
	}

	text = {
		localization_key = venomous_creature_snake
		trigger = {
			always = no
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureType = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureTypePlural = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureAttack = {
	type = character

	text = {
		localization_key = venomous_creature_sting
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bite
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

#VenomousCreatureAttackPlural
VenomousCreatureAttackPlural = {
	type = character

	text = {
		localization_key = venomous_creature_stings
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bites
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

VenomousCreatureMovement = {
	type = character

	text = {
		localization_key = venomous_creature_scutter
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_slither
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
	text = {
		localization_key = venomous_creature_scamper
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
}


RandomReligiousTextName = {
	type = character

	text = {
		trigger = {
			scope:religious_book_title = flag:golden_legend
		}
		localization_key = random_religious_text_golden_legend
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:city_of_god
		}
		localization_key = random_religious_text_city_of_god
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:summa_theologica
		}
		localization_key = random_religious_text_summa_theologica
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:sic_et_non
		}
		localization_key = random_religious_text_sic_et_non
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:the_small_book_on_theism
		}
		localization_key = random_religious_text_the_small_book_on_theism
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:modern_philosophy
		}
		localization_key = random_religious_text_modern_philosophy
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:stories_from_holy_book
		}
		localization_key = random_religious_text_stories_from_holy_book
	}
}


RandomEntertainmentTextName = {
	type = character

	text = {
		trigger = {
			scope:entertainment_book_title = flag:mighty_magi_buxom_maiden
		}
		localization_key = random_entertainment_text_mighty_magi_buxom_maiden
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:fifty_shades_of_blood
		}
		localization_key = random_entertainment_text_fifty_shades_of_blood
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:sound_of_air
		}
		localization_key = random_entertainment_text_sound_of_air
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:love_and_death_in_asiupoli
		}
		localization_key = random_entertainment_text_sound_of_air
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_of_saint_katharitos
		}
		localization_key = random_entertainment_text_travels_of_saint_katharitos
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:tale_of_two_cities
		}
		localization_key = random_entertainment_text_tale_of_two_cities
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_worlds_edge
		}
		localization_key = random_entertainment_text_the_worlds_edge
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:dragon_and_the_scorpion
		}
		localization_key = random_entertainment_text_dragon_and_the_scorpion
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_dragon_tale
		}
		localization_key = random_entertainment_text_the_dragon_tale
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:seventy_seven_cities
		}
		localization_key = random_entertainment_text_seventy_seven_cities
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:pocket_guide_to_aversaria
		}
		localization_key = random_entertainment_text_pocket_guide_to_aversaria
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:theryion
		}
		localization_key = random_entertainment_text_theryion
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_age_of_purges
		}
		localization_key = random_entertainment_text_the_age_of_purges
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_bloodtext
		}
		localization_key = random_entertainment_text_the_bloodtext
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:purestifinix
		}
		localization_key = random_entertainment_text_purestifinix
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:compiled_works_of_abael_venodau
		}
		localization_key = random_entertainment_text_compiled_works_of_abael_venodau
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:passionate_knight_and_pleasingly_thick_magi
		}
		localization_key = random_entertainment_text_passionate_knight_and_pleasingly_thick_magi
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_chivalric_code
		}
		localization_key = random_entertainment_text_the_chivalric_code
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_last_hippogriff
		}
		localization_key = random_entertainment_text_the_last_hippogriff
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:griffon_bestiary
		}
		localization_key = random_entertainment_text_griffon_bestiary
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:a_chevalien_knight_in_oraispol
		}
		localization_key = random_entertainment_text_a_chevalien_knight_in_oraispol
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:how_to_read_a_book
		}
		localization_key = random_entertainment_text_how_to_read_a_book
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:tale_of_sir_koeveux
		}
		localization_key = random_entertainment_text_tale_of_sir_koeveux
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:life_of_jacot_den_va_waldisse
		}
		localization_key = random_entertainment_text_life_of_jacot_den_va_waldisse
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_bastionetale
		}
		localization_key = random_entertainment_text_the_bastionetale
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:legends_of_the_seven_justicesaints
		}
		localization_key = random_entertainment_text_legends_of_the_seven_justicesaints
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:velosmyrmyrdarg
		}
		localization_key = random_entertainment_text_velosmyrmyrdarg
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_dragonslayer
		}
		localization_key = random_entertainment_text_the_dragonslayer
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:jarocish
		}
		localization_key = random_entertainment_text_jarocish
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:home_of_the_empire_oraispol
		}
		localization_key = random_entertainment_text_home_of_the_empire_oraispol
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:the_eastern_jewel_asiupoli
		}
		localization_key = random_entertainment_text_the_eastern_jewel_asiupoli
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:peti_gisredde_the_greatest_of_cities
		}
		localization_key = random_entertainment_text_peti_gisredde_the_greatest_of_cities
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:grande_gisredde_a_city
		}
		localization_key = random_entertainment_text_grande_gisredde_a_city
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_the_hellworld
		}
		localization_key = random_entertainment_text_travels_to_the_hellworld
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_the_darkest_realm
		}
		localization_key = random_entertainment_text_travels_to_the_darkest_realm
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:poems_mathilde
		}
		localization_key = random_entertainment_text_poems_mathilde
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:crimson_ode
		}
		localization_key = random_entertainment_text_crimson_ode
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_sarradon
		}
		localization_key = random_entertainment_text_travels_to_sarradon
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:towards_the_sunset
		}
		localization_key = random_entertainment_text_towards_the_sunset
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:liches_heart
		}
		localization_key = random_entertainment_text_liches_heart
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:among_golden_idols
		}
		localization_key = random_entertainment_text_adabyss
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:riddle_poems
		}
		localization_key = random_entertainment_text_riddles_dhacenox
	}
}

#Lonely Note: GHify
RandomInformativeTextName = {
	type = character

	text = {
		trigger = {
			scope:informative_book_title = flag:on_the_judgement_of_the_stars
		}
		localization_key = random_informative_text_on_the_judgement_of_the_stars
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_perfect_state
		}
		localization_key = random_informative_text_the_perfect_state
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:spiritual_medicine
		}
		localization_key = random_informative_text_spiritual_medicine
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:trotula
		}
		localization_key = random_informative_text_trotula
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_improvement_of_the_moral_qualities
		}
		localization_key = random_informative_text_the_improvement_of_the_moral_qualities
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:armes_prydein
		}
		localization_key = random_informative_text_armes_prydein
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:almagest
		}
		localization_key = random_informative_text_almagest
	}
}

#Lonely Note: GHify this soon so we can beat PDX at making this actually do anything and prove we're supreme
MusicalPerformer = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour
	}
}

MusicalPerformerPossessive = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour_possessive
	}
}
#NOTE! All of these nouns should work with "a" (not "an")
RegionalGameObject = {
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards
	}

	text = {
		trigger = {
			location = {
				geographical_region = world_ga_kashirya
			}
		}
		localization_key = pachisi_board #indian
	}

	text = {
		localization_key = chess_set
	}
}

#Lonely Note: This is more in need of GH love than literally any other file ever
CulturalCurse = {
	type = character
	random_valid = yes

	#Fallback (english)
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_curses
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_shit
	}

}

GetOldBook = { # GH TODO: GHify
	type = character
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = old_book_general
	}
}

get_region_dog_type = {
	type = character 
	random_valid = yes

	# Europe
	text = {
		trigger = {
		}
		localization_key = dog_type_molossian # Molossus
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_mastiff # Mastiff
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_vallhund # Vallhund
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_limer # Limer
	}
	# Steppe
	text = {
		trigger = {
			location = {
				OR = {
					geographical_region = world_ga_aversarian_homelands
					geographical_region = world_ga_aironoi
				}
			}
		}
		localization_key = dog_type_alaunt # Alaunt
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_laika # Laika (Samoyed)
	}
	# Africa
	text = {
		trigger = {
		}
		localization_key = dog_type_basenji # Basenji
	}
	# Asia
	text = {
		trigger = {
		}
		localization_key = dog_type_canaan # Canaan
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_saluki # Saluki
	}
	text = {
		trigger = {
		}
		localization_key = dog_type_tazi # Tazi (Afghan)
	}
	# India
	text = {
		trigger = {
		}
		localization_key = dog_type_desi # Desi
	}
	# East
	text = {
		trigger = {
			location = {
				OR = {
					geographical_region = world_ga_kashirya
					geographical_region = world_ga_pirate_coast
				}
			}
		}
		localization_key = dog_type_lion_dog # Lion dog (Chow Chow / Shar Pei)
	}
	# Generic
	text = {
		trigger = { always = yes }
		localization_key = dog_type_hound # Hound
	}
}

get_region_flower_type = {
	type = province
	random_valid = yes

	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_sarradon
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_hibiscus # Hibiscus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_gardenia # Gardenia
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
			}
		}
		localization_key = flower_type_lotus # Lotus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
			}
		}
		localization_key = flower_type_chrysanthemum # Chrysanthemum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_jasmine # Jasmine
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
				geographical_region = world_es_damota
			}
		}
		localization_key = flower_type_delphinium # Delphinium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_violet # Violet/Pansy
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_peony # Peony
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_lavender # Lavender
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
			}
		}
		localization_key = flower_type_lily # Lily
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_geranium # Geranium
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_iris # Iris
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
				geographical_region = world_es_damota
			}
		}
		localization_key = flower_type_foxglove # Foxglove/Digitalis
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_es_damota
			}
		}
		localization_key = flower_type_carnation # Carnation/Dianthus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_es_damota
			}
		}
		localization_key = flower_type_snapdragon # Snapdragon/Antirrhinum
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_es_damota
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_narcissus # Narcissus/Daffodil
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_es_damota
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_crocus # Crocus
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
			}
		}
		localization_key = flower_type_tulip # Tulip
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_es_damota
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_poppy # Poppy
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_rose # Rose
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_orchid # Orchid
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_aster # Aster/Daisy
	}
}

get_region_flower_type_plural = {
	type = province 
	random_valid = yes

	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_sarradon
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_hibiscus_plural # Hibiscuses
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_gardenia_plural # Gardenias
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_lotus_plural # Lotuses
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
				geographical_region = world_ga_pirate_coast
			}
		}
		localization_key = flower_type_chrysanthemum_plural # Chrysanthemums
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_kashirya
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_jasmine # Jasmine
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_delphinium_plural # Delphiniums
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_violet_plural # Violets/Pansies
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_peony_plural # Peonies
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_lavender # Lavender
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
				geographical_region = world_ga_kashirya
			}
		}
		localization_key = flower_type_lily_plural # Lilies
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_central_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_geranium_plural # Geraniums
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_central_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_iris_plural # Irises
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_sarradon
				geographical_region = world_ga_aironoi
				geographical_region = world_es_damota
			}
		}
		localization_key = flower_type_foxglove_plural # Foxgloves/Digitalises
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_central_sarradon
			}
		}
		localization_key = flower_type_carnation_plural # Carnations/Dianthuses
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_central_sarradon
			}
		}
		localization_key = flower_type_snapdragon_plural # Snapdragons/Antirrhinums
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_greater_aversaria
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
			}
		}
		localization_key = flower_type_narcissus_plural # Narcissuses/Daffodils
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_central_sarradon
				geographical_region = world_ga_aironoi
			}
		}
		localization_key = flower_type_crocus_plural # Crocuses
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_aironoi
				geographical_region = world_sarradon
			}
		}
		localization_key = flower_type_tulip_plural # Tulips
	}
	text = {
		trigger = {
			OR = {
				geographical_region = world_ga_western_aversaria
				geographical_region = world_es_damota
				geographical_region = world_ga_aironoi
				geographical_region = world_central_sarradon
			}
		}
		localization_key = flower_type_poppy_plural # Poppies
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_rose_plural # Roses
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_orchid_plural # Orchids
	}
	text = {
		trigger = { always = yes }
		localization_key = flower_type_aster_plural # Asters/Daisies
	}
}

get_carvable_surface = {
	type = province

	text = {
		trigger = {
			is_likely_to_contain_trees_trigger = yes
		}
		localization_key = tree
	}
	text = {
		fallback = yes
		trigger = {
			always = yes
		}
		localization_key = rock
	}
}

RegionalFerociousAnimal = {
	type = character
	random_valid = yes

	#Bear
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:bear
			}
			trigger_else = {
				location = { geographical_region = GH_REPLACE_hunt_animal_bear_region }
			}
		}
		localization_key = animal_type_bear
	}
	#Wolf
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:wolf
			}
			trigger_else = {
				NOT = {
					location = { geographical_region = world_sarradon }
				}
			}
		}
		localization_key = animal_type_wolf
	}
	# Hyena
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:hyena
			}
			trigger_else = {
				location = {
					geographical_region = world_sarradon
				}
			}
		}
		localization_key = animal_type_hyena
	}
	#Boar
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:boar
			}
			trigger_else = {
				location = { geographical_region = GH_REPLACE_hunt_animal_boar_region }
			}
		}
		localization_key = animal_type_boar
	}
	#Tiger
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:tiger
			}
			trigger_else = {
				location = { GH_hunt_animal_tiger_trigger = yes }
			}
		}
		localization_key = animal_type_tiger
	}
	#Leopard
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:leopard
			}
			trigger_else = {
				location = { GH_hunt_animal_leopard_trigger = yes }
			}
		}
		localization_key = animal_type_leopard
	}
	#Lion
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:lion
			}
			trigger_else = {
				location = { GH_hunt_animal_lion_trigger = yes }
			}
		}
		localization_key = animal_type_lion
	}
	#Gorilla
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:animal_type }
				var:animal_type = flag:gorilla
			}
			trigger_else = {
				location = { GH_hunt_animal_gorilla_trigger = yes }
			}
		}
		localization_key = animal_type_gorilla
	}
	#Fallback - Shape
	text = {
		trigger = { always = no }
		localization_key = animal_type_shape
		fallback = yes
	}
}

#this is used with the select_local_farm_animal_effect effect
RegionalFarmAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			var:local_farm_animal = flag:goat
		}
		localization_key = regional_farm_animal_goat
	}

	#Chicken
	text = {
		trigger = {
			var:local_farm_animal = flag:chicken
		}
		localization_key = regional_farm_animal_chicken
	}

	#Cow
	text = {
		trigger = {
			var:local_farm_animal = flag:cow
		}
		localization_key = regional_farm_animal_cow
	}
	
	#Sheep
	text = {
		trigger = {
			var:local_farm_animal = flag:sheep
		}
		localization_key = regional_farm_animal_sheep
	}

	#Pig
	text = {
		trigger = {
			var:local_farm_animal = flag:pig
		}
		localization_key = regional_farm_animal_pig
	}
	
	#Yak
	text = {
		trigger = {
			var:local_farm_animal = flag:yak
		}
		localization_key = regional_farm_animal_yak
	}
}

RegionalFarmAnimalPlural = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:goat
			}
			trigger_else = { always = yes }
			
		}
		localization_key = regional_farm_animal_goat_plural
	}

	#Chicken
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:chicken
			}
			trigger_else = { always = no } # ... "herd of chickens" ain't a thing.
		}
		localization_key = regional_farm_animal_chicken_plural
	}

	#Cow
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:cow
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_cow_plural
	}
	
	#Sheep
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:sheep
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_sheep_plural
	}

	#Pig
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:pig
			}
			trigger_else = { 
				location.faith = {
					faith_shuns_pork_trigger = no
				}
			}
		}
		localization_key = regional_farm_animal_pig_plural
	}
	
	#Yaks
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:yak
			}
			trigger_else = {
				location = {
					OR = {
						geographical_region = GH_REPLACE_world_tibet
					}
				}
			}
			
		}
		localization_key = regional_farm_animal_yak_plural
	}
}

SoundingRegionalFarmAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:goat
			}
			trigger_else = { always = yes }
			
		}
		localization_key = regional_farm_animal_bleating_goat
	}

	#Chicken
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:chicken
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_clucking_chicken
	}

	#Cow
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:cow
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_bellowing_cow
	}
	
	#Sheep
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:sheep
			}
			trigger_else = { always = yes }
		}
		localization_key = regional_farm_animal_bleating_sheep
	}

	#Pig
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:pig
			}
			trigger_else = { 
				location.faith = {
					faith_shuns_pork_trigger = no
				}
			}
		}
		localization_key = regional_farm_animal_snorting_pig
	}
	
	#Yak
	text = {
		trigger = {
			trigger_if = {
				limit = { exists = var:local_farm_animal }
				var:local_farm_animal = flag:yak
			}
			trigger_else = {
				location = {
					OR = {
						geographical_region = GH_REPLACE_world_tibet
					}
				}
			}
			
		}
		localization_key = regional_farm_animal_grunting_yak
	}

	#Camel
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				location = {
					OR = {
						geographical_region = GH_REPLACE_world_middle_east
						geographical_region = GH_REPLACE_world_africa_north
					}
				}
			}
			trigger_else = { always = no }
			
		}
		localization_key = regional_farm_animal_grunting_camel
	}

	#Horse
	text = {
		trigger = {
			#No need to disturb the original implementation
			trigger_if = {
				limit = { 
					NOT = { exists = var:local_farm_animal }
				}
				always = yes
			}
			trigger_else = {
				always = no
			}
			
		}
		localization_key = regional_farm_animal_whinnying_horse
	}
}

RegionalArtilleryType = {
	type = character

	text = {
		trigger = { culture = { has_innovation = innovation_bombard } }
		localization_key = regional_artillery_bombard
	}
	text = {
		trigger = { culture = { has_innovation = innovation_trebuchet } }
		localization_key = regional_artillery_trebuchet
	}
	text = {
		trigger = { culture = { has_innovation = innovation_mangonel } }
		localization_key = regional_artillery_mangonel
	}
	text = {
		trigger = { always = yes }
		localization_key = regional_artillery_onager
	}
}

RegionalArtilleryPlural = {
	type = character

	parent = RegionalArtilleryType
	suffix = "_plural"
}

RegionalShipType = {
	type = character
	random_valid = yes

	text = {
		trigger = { GH_germanic_culture_trigger = yes }
		localization_key = regional_ship_knarr
	}
	text = {
		trigger = { artifact_use_northern_unit_visuals_trigger = yes }
		localization_key = regional_ship_longship
	}
	text = {
		trigger = { culture = { has_graphical_aversarian_culture_group_trigger = yes } }
		localization_key = regional_ship_galley
	}
	text = {
		trigger = { GH_byzantine_culture_trigger = yes }
		localization_key = regional_ship_dromon
	}
	text = {
		trigger = { culture = { GH_unique_unit_gfx_western_culture_trigger = yes } }
		localization_key = regional_ship_cog
	}
	text = {
		trigger = { always = yes }
		localization_key = regional_ship_fallback
	}
}

RegionalShipPlural = {
	type = character

	parent = RegionalShipType
	suffix = "_plural"
}

RegionalPoxAnimal = {
	type = character
	random_valid = yes

	#Goat
	text = {
		localization_key = regional_farm_animal_goat
	}

	#Chicken
	text = {
		localization_key = regional_farm_animal_chicken
	}

	#Cow
	text = {
		localization_key = regional_farm_animal_cow
	}

	#Sheep
	text = {
		localization_key = regional_farm_animal_sheep
	}

	#Pig
	text = {
		trigger = {
			faith = {
				faith_shuns_pork_trigger = no
			}
		}
		localization_key = regional_farm_animal_pig
	}

	#Yak
	text = {
		trigger = {
			capital_province = {
				OR = {
					geographical_region = GH_REPLACE_world_tibet
				}
			}
		}
		localization_key = regional_farm_animal_yak
	}

	#Monkey
	text = {
		trigger = {
			capital_province = {
				OR = {
					geographical_region = GH_REPLACE_world_middle_east
					geographical_region = GH_REPLACE_world_india
					geographical_region = GH_REPLACE_world_africa
					geographical_region = GH_REPLACE_world_burma
				}
			}
		}
		localization_key = animal_monkey
	}
}

WritingInstrument = {
	type = character
	random_valid = yes

	text = { # Quills, European
		trigger = {
			trigger_if = {
				limit = {
					exists = capital_province
				}
				capital_province = {
					geographical_region = GH_REPLACE_world_europe
				}
			}
			trigger_else_if = {
				limit = {
					exists = liege_or_court_owner.capital_province
				}
				liege_or_court_owner.capital_province = {
					geographical_region = GH_REPLACE_world_europe
				}
			}
			trigger_else_if = {
				limit = { exists = location }
				location = { geographical_region = GH_REPLACE_world_europe }
			}
			trigger_else = {
				always = no
			}
		}
		localization_key = quill
	}

	text = { # Pens, non-European. Made from bamboo, reeds, whatever. Just a bit of wood sharpened to a point and dipped in ink.
		localization_key = pen
		fallback = yes
	}
}

GetKnightErrantAnimal = {
	type = character
	
	text = {
		trigger = {
			location = {
				geographical_region = GH_REPLACE_world_europe
			}
		}
		localization_key = GetKnightErrantAnimal_swan
	}
	text = {
		trigger = {
			location = {
				OR = {
					geographical_region = GH_REPLACE_world_india
					geographical_region = GH_REPLACE_world_burma
				}
			}
		}
		localization_key = GetKnightErrantAnimal_tiger
	}
	text = {
		trigger = {
			location = {
				geographical_region = GH_REPLACE_world_africa
			}
		}
		localization_key = GetKnightErrantAnimal_lion
	}
	text = { # Basically everywhere
		localization_key = GetKnightErrantAnimal_hart
		fallback = yes
	}
}
