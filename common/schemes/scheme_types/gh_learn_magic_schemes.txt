learn_magic_school_scheme = {
	
	skill = learning
	desc = learn_magic_school_scheme_desc
	cooldown = { years = 1 }
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_basic = yes
	icon = icon_scheme_convert_to_witchcraft
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 120
	base_maximum_success = 95
	minimum_success = 5
	
	allow = {
		age >= 16
		is_imprisoned = no
	}
	
	valid = {
		is_incapable = no
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
		custom_description = {
			object = scope:target
			text = target_must_know_unknown_school_tooltip
			scope:target = {
				knows_any_magic_school_trigger = yes
				any_in_list = {
					variable = known_magic_school_list
					save_temporary_scope_as = this_magic_school
					NOT = { magic_school_is_known_by_trigger = { MAGI = scope:owner MAGIC_SCHOOL = scope:this_magic_school } }
				}
			}
		}
		custom_description = {
			object = scope:target
			text = target_does_not_have_reason_to_teach_magic_school_tooltip
			scope:target = {
				OR = {
					has_relation_friend = scope:owner
					is_spouse_of = scope:owner
					is_close_family_of = scope:owner
					AND = {
						is_councillor_of = scope:owner
						has_council_position = councillor_court_magi
					}
					is_courtier_of = scope:owner
					AND = {
						has_variable_list = agreed_to_teach_magic_to_list
						is_target_in_variable_list = {
							name = agreed_to_teach_magic_to_list
							target = scope:owner
						}
					}
				}
			}
		}
		custom_description = {
			object = scope:owner
			text = owner_must_be_able_to_learn_more_magic_schools_tooltip
			scope:owner = {
				OR = {
					knows_any_magic_school_trigger = no
					AND = {
						has_trait_with_flag = can_learn_second_school
						character_magic_school_num_value < character_maximum_magic_school_value
					}
				}
			}
		}
	}

	# Prediction (abysmal/low/medium/high/excellent)
	# scope:owner - Character starting the scheme
	# scope:target - Whatever the scheme is targeting
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_arcana_value
		add = odds_learn_magic_scheme_misc_value
		min = 0
	}

	base_success_chance = {
		base = 0
		
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.learning
				multiply = 1
			}
			desc = SCHEME_TARGET_LEARNING_MODIFIER
			scope:target.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.character_arcana_baseline_value
				multiply = 1.5
			}
			desc = SCHEME_TARGET_ARCANA_MODIFIER
			scope:target.character_arcana_baseline_value > 0
		}
		
		modifier = {
			add = {
				value = scope:owner.character_arcana_baseline_value
				multiply = 1.5
			}
			desc = SCHEME_ARCANA_SKILL_MODIFIER
			scope:owner.character_arcana_baseline_value > 0
		}
		
		modifier = {
			desc = LEARN_MAGIC_SCHEME_CULTURAL_SCHOOL_MODIFIER
			exists = scope:owner.var:magic_school_taught_by_scheme
			scope:owner.culture = {
				culture_knows_magic_school = { MAGIC_SCHOOL = scope:owner.var:magic_school_taught_by_scheme }
			}
			add = 10
		}
		
		

		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 15
		}
	}

	on_phase_completed = {
		if = {
			limit = { 
				NOT = { exists = scope:owner.var:magic_school_taught_by_scheme }
			}
			random_in_list = {
				variable = known_magic_school_list
				limit = {
					save_temporary_scope_as = this_magic_school
					NOT = { magic_school_is_known_by_trigger = { MAGI = scope:owner MAGIC_SCHOOL = scope:this_magic_school } }
				}
				save_temporary_scope_as = this_magic_school
				scope:owner = { 
					set_variable = { name = magic_school_taught_by_scheme value = scope:this_magic_school} 
				}
			}
		}
		scope:owner.var:magic_school_taught_by_scheme = { save_scope_as = school_to_learn_scope }
		random = {
			chance = scope:scheme.scheme_success_chance

			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		scope:owner = {
			if = {
				limit = {
					exists = scope:scheme_successful
				}
				trigger_event = learn_magic_outcome.0001 # success event
				
			}
			else = {
				trigger_event = learn_magic_outcome.0002 # failure event
			}
		}
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = learn_magic_school_scheme_invalidated
					custom_tooltip = learn_magic_school_scheme_dead_desc
					left_icon = scope:target
				}
			}
		}

	}

	on_monthly = {
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = {
			save_scope_as = owner
			#trigger_event = { on_action = learn_magic_school_scheme_ongoing }
		}
		if = {
			limit = { NOT = { exists = scope:owner.var:magic_scool_taught_by_scheme } }
			scope:target = {
				random_in_list = {
					variable = known_magic_school_list
					limit = {
						NOT = { magic_school_is_known_by_trigger = { MAGI = scope:owner MAGIC_SCHOOL = prev } }
					}
					save_scope_as = magic_school_taught
				}
			}
			scope:owner = {
				set_variable = {
					name = magic_school_taught_by_scheme
					value = scope:magic_school_taught
				}
			}
		}
	}
	success_desc = "LEARN_MAGIC_SCHOOL_SCHEME_SUCCESS_DESC"
}

learn_magic_spell_scheme = {
	
	skill = learning
	desc = learn_magic_spell_scheme_desc
	cooldown = { years = 1 }
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_basic = yes
	icon = icon_scheme_convert_to_witchcraft

	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 120
	base_maximum_success = 95
	minimum_success = 5
	
	allow = {
		can_access_magic = yes
	}
	
	valid = {
		custom_description = {
			object = scope:target
			text = target_must_know_unknown_spell_tooltip
			scope:target = {
				knows_any_magic_spell_trigger = yes
				any_in_list = {
					variable = known_spell_list
					save_temporary_scope_as = target_magic_spell
					NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:owner SPELL = scope:target_magic_spell } }
				}
			}
		}
	}

	# Prediction (abysmal/low/medium/high/excellent)
	# scope:owner - Character starting the scheme
	# scope:target - Whatever the scheme is targeting
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_arcana_value
		add = odds_learn_magic_scheme_misc_value
		min = 0
	}

	base_success_chance = {
		base = 25
		
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 0.3
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.learning
				multiply = 0.3
			}
			desc = SCHEME_TARGET_LEARNING_MODIFIER
			scope:target.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.character_arcana_baseline_value
				multiply = 2
			}
			desc = SCHEME_TARGET_ARCANA_MODIFIER
			scope:target.character_arcana_baseline_value > 0
		}
		
		modifier = {
			add = {
				value = scope:owner.character_arcana_baseline_value
				multiply = 2
			}
			desc = SCHEME_ARCANA_SKILL_MODIFIER
			scope:owner.character_arcana_baseline_value > 0
		}
		
		modifier = {
			desc = LEARN_MAGIC_SPELL_SCHEME_SCHOOL_SPELL_MODIFIER
			exists = scope:owner.var:spell_to_learn_from_character
			scope:owner = {
				has_variable_list = known_magic_school_list
				any_in_list = {
					list = known_magic_school_list
					is_target_in_variable_list = {
						name = spell_list
						target = scope:owner.var:spell_to_learn_from_character
					}
				}
			}
			add = 15
		}
		
		

		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 15
		}

		# Arcana lifestyle perk
		modifier = {
			desc = "scheme_arcana_theory_modifier"
			scope:owner = { has_perk = arcana_actuation_perk1_tree1 }
			add = 10
		}
	}

	on_phase_completed = {
		if = {
			limit = { 
				NOT = { exists = scope:scheme.var:spell_to_learn_from_character }
			}
			scope:target = {
				random_in_list = {
					variable = known_spell_list
					limit = {
						save_temporary_scope_as = target_magic_spell
						NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:owner SPELL = scope:target_magic_spell } }
					}
					save_temporary_scope_as = target_magic_spell 
					scope:scheme = {
						set_variable = { name = spell_to_learn_from_character value = scope:target_magic_spell }
					}
				}
			}
		}
		scope:owner.var:spell_to_learn_from_character ?= { save_scope_as = spell_to_learn_scheme_scope }
		random = {
			chance = scope:scheme.scheme_success_chance

			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		scope:owner = {
			if = {
				limit = {
					exists = scope:scheme_successful
				}
				trigger_event = learn_magic_outcome.0101 # success event
				
			}
			else = {
				trigger_event = learn_magic_outcome.0102 # failure event
			}
		}
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = learn_magic_spell_scheme_invalidated
					custom_tooltip = learn_magic_spell_scheme_dead_desc
					left_icon = scope:target
				}
			}
		}

	}

	on_monthly = {
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = {
			save_scope_as = owner
			#trigger_event = { on_action = learn_magic_school_scheme_ongoing }
		}
		scope:owner = {
			if = {
				limit = { NOT = { exists = var:spell_to_learn_from_character } }
				scope:target = {
					random_in_list = {
						variable = known_spell_list
						limit = {
							NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:owner SPELL = prev } }
						}
						save_scope_as = magic_spell_taught
					}
				}
				set_variable = {
					name = spell_to_learn_from_character
					value = scope:magic_spell_taught
				}
			}
		}
	}
	success_desc = "LEARN_MAGIC_SPELL_SCHEME_SUCCESS_DESC"
}

teach_magic_spell_scheme = {
	
	skill = learning
	desc = teach_magic_spell_scheme_desc
	cooldown = { years = 1 }
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_basic = yes
	icon = icon_scheme_convert_to_witchcraft

	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 120
	base_maximum_success = 95
	minimum_success = 5
	
	allow = {
		can_access_magic = yes
	}
	
	valid = {
		custom_description = {
			object = scope:target
			text = target_must_know_unknown_spell_tooltip
			scope:owner = {
				knows_any_magic_spell_trigger = yes
				any_in_list = {
					variable = known_spell_list
					save_temporary_scope_as = target_magic_spell
					NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:target SPELL = scope:target_magic_spell } }
				}
			}
		}
	}

	# Prediction (abysmal/low/medium/high/excellent)
	# scope:owner - Character starting the scheme
	# scope:target - Whatever the scheme is targeting
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		add = odds_learn_language_scheme_misc_value
		min = 0
	}

	base_success_chance = {
		base = 25
		
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 0.3
			}
			desc = SCHEME_TEACHING_MODIFIER
			scope:owner.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.learning
				multiply = 0.3
			}
			desc = SCHEME_TARGET_TEACHING_MODIFIER
			scope:target.learning > 0
		}
		
		modifier = {
			add = {
				value = scope:target.character_arcana_baseline_value
				multiply = 2
			}
			desc = SCHEME_TARGET_ARCANA_MODIFIER
			scope:target.character_arcana_baseline_value > 0
		}
		
		modifier = {
			add = {
				value = scope:owner.character_arcana_baseline_value
				multiply = 2
			}
			desc = SCHEME_ARCANA_SKILL_MODIFIER
			scope:owner.character_arcana_baseline_value > 0
		}
		
		modifier = {
			desc = TEACH_MAGIC_SPELL_SCHEME_SCHOOL_SPELL_MODIFIER
			exists = scope:owner.var:spell_to_learn_from_character
			scope:target = {
				has_variable_list = known_magic_school_list
				any_in_list = {
					list = known_magic_school_list
					is_target_in_variable_list = {
						name = spell_list
						target = scope:target.var:spell_to_learn_from_character
					}
				}
			}
			add = 15
		}
		
		

		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}

		# Arcana lifestyle perk
		modifier = {
			desc = "scheme_arcana_theory_modifier"
			scope:target = { has_perk = arcana_actuation_perk1_tree1 }
			add = 10
		}
	}

	on_phase_completed = {
		if = {
			limit = { 
				NOT = { exists = scope:scheme.var:spell_to_learn_from_character }
			}
			scope:owner = {
				random_in_list = {
					variable = known_spell_list
					limit = {
						save_temporary_scope_as = target_magic_spell
						NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:target SPELL = scope:target_magic_spell } }
					}
					save_temporary_scope_as = target_magic_spell 
					scope:scheme = {
						set_variable = { name = spell_to_learn_from_character value = scope:target_magic_spell }
					}
				}
			}
		}
		scope:target.var:spell_to_learn_from_character ?= { save_scope_as = spell_to_learn_scheme_scope }
		random = {
			chance = scope:scheme.scheme_success_chance

			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		scope:target = {
			if = {
				limit = {
					exists = scope:scheme_successful
				}
				trigger_event = learn_magic_outcome.0101 # success event
				
			}
			else = {
				trigger_event = learn_magic_outcome.0102 # failure event
			}
		}
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = teach_magic_spell_scheme_invalidated
					custom_tooltip = teach_magic_spell_scheme_dead
					left_icon = scope:target
				}
			}
		}

	}

	on_monthly = {
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = {
			save_scope_as = owner
			#trigger_event = { on_action = teach_magic_school_scheme_ongoing }
		}
		scope:target = {
			if = {
				limit = { NOT = { exists = var:spell_to_learn_from_character } }
				scope:owner = {
					random_in_list = {
						variable = known_spell_list
						limit = {
							NOT = { magic_spell_is_known_by_trigger = { MAGI = scope:target SPELL = prev } }
						}
						save_scope_as = magic_spell_taught
					}
				}
				set_variable = {
					name = spell_to_learn_from_character
					value = scope:magic_spell_taught
				}
			}
		}
	}
	success_desc = "TEACH_MAGIC_SPELL_SCHEME_SUCCESS_DESC"
}