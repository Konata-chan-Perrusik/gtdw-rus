spawn_historical_characters_effect = {
	# GH_EP3_TODO: Fill with our own chars, left below as an example
	#if = { # Karunakara Tondaiman 
	#	limit = {
	#		current_year >= 1067
	#		current_year <= 1070
	#		NOT = { exists = global_var:hchar_karunakara }
	#	}
	#	set_global_variable = { name = hchar_karunakara value = yes }
	#	title:b_nagapattinam = {
	#		save_scope_as = birth_location
	#		create_character = {
	#			age = 20
	#			name = Karunakara
	#			dynasty_house = house:house_tondaiman
	#			gender_female_chance = 0
	#			random_traits = no
	#			location = scope:birth_location.title_province
	#			faith = faith:vaishnavism
	#			culture = scope:birth_location.title_province.culture
	#			trait = education_martial_4
	#			trait = loyal
	#			random_traits_list = {
	#				count = 3
	#				brave = {}
	#				vengeful = {}
	#				ambitious = {}
	#				wrathful = {}
	#				zealous = {}
	#			}
	#			diplomacy = { min_template_high_skill max_template_high_skill }
	#			martial = { min_template_high_skill max_template_high_skill }
	#			stewardship = { min_template_decent_skill max_template_decent_skill }
	#			intrigue = { min_template_decent_skill max_template_decent_skill }
	#			learning = { min_template_low_skill max_template_low_skill }
	#			prowess = { min_template_high_skill max_template_high_skill }
	#			save_scope_as = historical_character
	#		}
	#		scope:historical_character ?= {
	#			historical_character_finalization_effect = yes
	#			set_variable = karunakara
	#			add_character_flag = ai_will_not_convert
	#		}
	#		if = { limit = { has_variable = karunakara 	 } } # Error suppression
	#		spawn_historical_characters_boilerplate_effect = yes
	#	}
	#}


}

historical_character_finalization_effect = {
	add_trait = historical_character
	house ?= {
		generate_coa = yes
	}
	dynasty ?= {
		set_coa = scope:historical_character.house
	}
	set_variable = {
		name = show_historical_gui
		value = 1
	}
}

spawn_historical_characters_boilerplate_effect = {
	county = { save_scope_as = county_scope }
	county.holder = {
		if = {
			limit = {
				is_ai = no
			}
			trigger_event = historical_char_creation_events.1
		}
		else_if = {
			limit = {
				OR = {
					exists = scope:major
					has_game_rule = all_historical_characters
				}
				any_liege_or_above = {
					is_ai = no
				}
			}
			random_liege_or_above = {
				limit = {
					is_ai = no
				}
				trigger_event = historical_char_creation_events.1
			}
		}
		else_if = {
			limit = {
				exists = scope:county_scope.duchy.holder
			}
			scope:county_scope.duchy.holder = {
				trigger_event = historical_char_creation_events.1
			}
		}
		else = {
			top_liege = {
				trigger_event = historical_char_creation_events.1
			}
		}
	}
}
