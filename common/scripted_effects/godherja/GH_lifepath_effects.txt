lifepaths_effect = {
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_swords BASE_WEIGHT = 14 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_family BASE_WEIGHT = 11 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_coins BASE_WEIGHT = 12 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_crowns BASE_WEIGHT = 24 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_harvests BASE_WEIGHT = 20 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_justice BASE_WEIGHT = 1 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_knowledge BASE_WEIGHT = 10 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_crows BASE_WEIGHT = 8 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_nullification BASE_WEIGHT = 9 }
}

opakhasia_lifepaths_effect = {
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_hunt BASE_WEIGHT = 17 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_sword BASE_WEIGHT = 18 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_stars BASE_WEIGHT = 12 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_shepherd BASE_WEIGHT = 20 }
}

four_steps_lifepaths_effect = {
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_blood BASE_WEIGHT = 20 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_pain BASE_WEIGHT = 18 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_fear BASE_WEIGHT = 12 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_dread BASE_WEIGHT = 15 }
}

tripath_lifepaths_effect = {
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_peace BASE_WEIGHT = 20 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_war BASE_WEIGHT = 18 }
	$MODE$_lifepath = { FAITH_PARAMETER = lifepath_choice LIFEPATH = way_of_death BASE_WEIGHT = 12 }
}

opakhasia_lifepath_trait_effect = {
	$MODE$_lifepath_trait = { LIFEPATH = way_of_hunt TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_hunt TRAIT = ambitious }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_hunt TRAIT = diligent }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_hunt TRAIT = zealous }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_sword TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_sword TRAIT = wrathful }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_sword TRAIT = arrogant }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_sword TRAIT = impatient }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_stars TRAIT = intellect_good_1 }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_stars TRAIT = shrewd }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_stars TRAIT = humble }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_stars TRAIT = patient }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_shepherd TRAIT = content }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_shepherd TRAIT = compassionate }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_shepherd TRAIT = honest }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_shepherd TRAIT = just }

}

four_steps_lifepath_trait_effect = {
	$MODE$_lifepath_trait = { LIFEPATH = way_of_pain TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_pain TRAIT = just }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_pain TRAIT = greedy }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_pain TRAIT = sadistic }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_blood TRAIT = impatient }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_blood TRAIT = wrathful }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_blood TRAIT = arrogant }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_blood TRAIT = sadistic }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_fear TRAIT = craven }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_fear TRAIT = shrewd }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_fear TRAIT = callous }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_fear TRAIT = content }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_dread TRAIT = shy }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_dread TRAIT = paranoid }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_dread TRAIT = callous }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_dread TRAIT = eccentric }
}

tripath_lifepath_trait_effect = {
	$MODE$_lifepath_trait = { LIFEPATH = way_of_war TRAIT = wrathful }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_war TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_war TRAIT = impatient }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_peace TRAIT = diligent }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_peace TRAIT = content }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_peace TRAIT = craven }

	$MODE$_lifepath_trait = { LIFEPATH = way_of_death TRAIT = honest }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_death TRAIT = humble }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_death TRAIT = callous }
}

lifepath_trait_effect = {
	$MODE$_lifepath_trait = { LIFEPATH = way_of_swords TRAIT = wrathful }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_swords TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_swords TRAIT = impatient }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_family TRAIT = patient }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_family TRAIT = compassionate }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_family TRAIT = brave }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_coins TRAIT = greedy }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_coins TRAIT = ambitious }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_coins TRAIT = shrewd }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crowns TRAIT = ambitious }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crowns TRAIT = gregarious }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crowns TRAIT = arrogant }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_harvests TRAIT = diligent }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_harvests TRAIT = content }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_harvests TRAIT = honest }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_justice TRAIT = just }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_justice TRAIT = honest }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_justice TRAIT = compassionate }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_knowledge TRAIT = humble }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_knowledge TRAIT = intellect_good_3 }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_knowledge TRAIT = shrewd }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crows TRAIT = deceitful }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crows TRAIT = ambitious }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_crows TRAIT = callous }
	
	$MODE$_lifepath_trait = { LIFEPATH = way_of_nullification TRAIT = zealous }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_nullification TRAIT = brave }
	$MODE$_lifepath_trait = { LIFEPATH = way_of_nullification TRAIT = just }
}

set_global_lifepath = {
	if = {
		limit = {
			NOT = {
				is_target_in_global_variable_list = {
					name = all_lifepaths
					target = flag:$LIFEPATH$
				}
			}
		}
		random_province = {
			limit = { NOT = { has_variable = already_assigned_lifepath_storage } }
			save_temporary_scope_as = storage_province
			set_variable = already_assigned_lifepath_storage
			add_to_global_variable_list = {
				name = all_lifepaths
				target = scope:storage_province
			}
			title:c_oraispol = {	# For my own sanity
				add_to_variable_list = {
					name = all_lifepaths
					target = scope:storage_province
				}
			}
			set_variable = {
				name = lifepath_name
				value = flag:$LIFEPATH$
			}
			set_variable = {
				name = lifepath_base_weight
				value = $BASE_WEIGHT$
			}
			set_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$	# Error suppression
			remove_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$
		}
	}
}

set_global_opakhasia_lifepath = {
	if = {
		limit = {
			NOT = {
				is_target_in_global_variable_list = {
					name = all_opakhasia_lifepaths
					target = flag:$LIFEPATH$
				}
			}
		}
		random_province = {
			limit = { NOT = { has_variable = already_assigned_lifepath_storage } }
			save_temporary_scope_as = storage_province
			set_variable = already_assigned_lifepath_storage
			add_to_global_variable_list = {
				name = all_opakhasia_lifepaths
				target = scope:storage_province
			}
			title:c_oraispol = {	# For my own sanity
				add_to_variable_list = {
					name = all_opakhasia_lifepaths
					target = scope:storage_province
				}
			}
			set_variable = {
				name = lifepath_name
				value = flag:$LIFEPATH$
			}
			set_variable = {
				name = lifepath_base_weight
				value = $BASE_WEIGHT$
			}
			set_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$	# Error suppression
			remove_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$
		}
	}
}

set_global_four_steps_lifepath = {
	if = {
		limit = {
			NOT = {
				is_target_in_global_variable_list = {
					name = all_four_steps_lifepaths
					target = flag:$LIFEPATH$
				}
			}
		}
		random_province = {
			limit = { NOT = { has_variable = already_assigned_lifepath_storage } }
			save_temporary_scope_as = storage_province
			set_variable = already_assigned_lifepath_storage
			add_to_global_variable_list = {
				name = all_four_steps_lifepaths
				target = scope:storage_province
			}
			title:c_oraispol = {	# For my own sanity
				add_to_variable_list = {
					name = all_four_steps_lifepaths
					target = scope:storage_province
				}
			}
			set_variable = {
				name = lifepath_name
				value = flag:$LIFEPATH$
			}
			set_variable = {
				name = lifepath_base_weight
				value = $BASE_WEIGHT$
			}
			set_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$	# Error suppression
			remove_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$
		}
	}
}

set_global_tripath_lifepath = {
	if = {
		limit = {
			NOT = {
				is_target_in_global_variable_list = {
					name = all_tripath_lifepaths
					target = flag:$LIFEPATH$
				}
			}
		}
		random_province = {
			limit = { NOT = { has_variable = already_assigned_lifepath_storage } }
			save_temporary_scope_as = storage_province
			set_variable = already_assigned_lifepath_storage
			add_to_global_variable_list = {
				name = all_tripath_lifepaths
				target = scope:storage_province
			}
			title:c_oraispol = {	# For my own sanity
				add_to_variable_list = {
					name = all_tripath_lifepaths
					target = scope:storage_province
				}
			}
			set_variable = {
				name = lifepath_name
				value = flag:$LIFEPATH$
			}
			set_variable = {
				name = lifepath_base_weight
				value = $BASE_WEIGHT$
			}
			set_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$	# Error suppression
			remove_variable = tmp_$FAITH_PARAMETER$_$BASE_WEIGHT$
		}
	}
}

set_valid_lifepath = {
	if = {
		limit = {
			has_doctrine_parameter = $FAITH_PARAMETER$
			NOT = { has_variable = lifepath_trait_available_$LIFEPATH$ }
		}
		if = {
			limit = { NOT = { has_variable = number_of_lifepaths } }
			set_variable = {
				name = number_of_lifepaths
				value = 1
			}
		}
		else = {
			change_variable = {
				name = number_of_lifepaths
				add = 1
			}
		}
		set_variable = faith_has_lifepaths
		set_variable = lifepath_trait_available_$LIFEPATH$
		random_in_global_list = {
			variable = all_lifepaths
			limit = { 
				var:lifepath_name = flag:$LIFEPATH$ 
				NOR = {
					var:lifepath_name = flag:way_of_hunt
					var:lifepath_name = flag:way_of_stars
					var:lifepath_name = flag:way_of_sword
					var:lifepath_name = flag:way_of_shepherd
					var:lifepath_name = flag:way_of_blood
					var:lifepath_name = flag:way_of_dread
					var:lifepath_name = flag:way_of_pain
					var:lifepath_name = flag:way_of_fear
					var:lifepath_name = flag:way_of_peace
					var:lifepath_name = flag:way_of_war
					var:lifepath_name = flag:way_of_death
				}
			}
			save_temporary_scope_as = storage_province
			prev = {
				add_to_variable_list = {
					name = valid_lifepaths
					target = scope:storage_province
				}
			}
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

set_valid_opakhasia_lifepath = {
	if = {
		limit = {
			has_doctrine_parameter = $FAITH_PARAMETER$
			NOT = { has_variable = lifepath_trait_available_$LIFEPATH$ }
		}
		if = {
			limit = { NOT = { has_variable = number_of_lifepaths } }
			set_variable = {
				name = number_of_lifepaths
				value = 1
			}
		}
		else = {
			change_variable = {
				name = number_of_lifepaths
				add = 1
			}
		}
		set_variable = faith_has_lifepaths
		set_variable = lifepath_trait_available_$LIFEPATH$
		random_in_global_list = {
			variable = all_opakhasia_lifepaths
			limit = { 
				var:lifepath_name = flag:$LIFEPATH$ 
				NOR = {
					var:lifepath_name = flag:way_of_crowns
					var:lifepath_name = flag:way_of_swords
					var:lifepath_name = flag:way_of_crows
					var:lifepath_name = flag:way_of_coins
					var:lifepath_name = flag:way_of_family
					var:lifepath_name = flag:way_of_harvests
					var:lifepath_name = flag:way_of_knowledge
					var:lifepath_name = flag:way_of_nullification
					var:lifepath_name = flag:way_of_justice
					var:lifepath_name = flag:way_of_blood
					var:lifepath_name = flag:way_of_dread
					var:lifepath_name = flag:way_of_pain
					var:lifepath_name = flag:way_of_fear
					var:lifepath_name = flag:way_of_peace
					var:lifepath_name = flag:way_of_war
					var:lifepath_name = flag:way_of_death
				}
			}
			save_temporary_scope_as = storage_province
			prev = {
				add_to_variable_list = {
					name = valid_lifepaths
					target = scope:storage_province
				}
			}
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

set_valid_four_steps_lifepath = {
	if = {
		limit = {
			has_doctrine_parameter = $FAITH_PARAMETER$
			NOT = { has_variable = lifepath_trait_available_$LIFEPATH$ }
		}
		if = {
			limit = { NOT = { has_variable = number_of_lifepaths } }
			set_variable = {
				name = number_of_lifepaths
				value = 1
			}
		}
		else = {
			change_variable = {
				name = number_of_lifepaths
				add = 1
			}
		}
		set_variable = faith_has_lifepaths
		set_variable = lifepath_trait_available_$LIFEPATH$
		random_in_global_list = {
			variable = all_four_steps_lifepaths
			limit = { 
				var:lifepath_name = flag:$LIFEPATH$ 
				NOR = {
					var:lifepath_name = flag:way_of_crowns
					var:lifepath_name = flag:way_of_swords
					var:lifepath_name = flag:way_of_crows
					var:lifepath_name = flag:way_of_coins
					var:lifepath_name = flag:way_of_family
					var:lifepath_name = flag:way_of_harvests
					var:lifepath_name = flag:way_of_knowledge
					var:lifepath_name = flag:way_of_nullification
					var:lifepath_name = flag:way_of_justice
					var:lifepath_name = flag:way_of_hunt
					var:lifepath_name = flag:way_of_stars
					var:lifepath_name = flag:way_of_sword
					var:lifepath_name = flag:way_of_shepherd
					var:lifepath_name = flag:way_of_peace
					var:lifepath_name = flag:way_of_war
					var:lifepath_name = flag:way_of_death
				}
			}
			save_temporary_scope_as = storage_province
			prev = {
				add_to_variable_list = {
					name = valid_lifepaths
					target = scope:storage_province
				}
			}
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

set_valid_tripath_lifepath = {
	if = {
		limit = {
			has_doctrine_parameter = $FAITH_PARAMETER$
			NOT = { has_variable = lifepath_trait_available_$LIFEPATH$ }
		}
		if = {
			limit = { NOT = { has_variable = number_of_lifepaths } }
			set_variable = {
				name = number_of_lifepaths
				value = 1
			}
		}
		else = {
			change_variable = {
				name = number_of_lifepaths
				add = 1
			}
		}
		set_variable = faith_has_lifepaths
		set_variable = lifepath_trait_available_$LIFEPATH$
		random_in_global_list = {
			variable = all_tripath_lifepaths
			limit = { 
				var:lifepath_name = flag:$LIFEPATH$ 
				NOR = {
					var:lifepath_name = flag:way_of_crowns
					var:lifepath_name = flag:way_of_swords
					var:lifepath_name = flag:way_of_crows
					var:lifepath_name = flag:way_of_coins
					var:lifepath_name = flag:way_of_family
					var:lifepath_name = flag:way_of_harvests
					var:lifepath_name = flag:way_of_knowledge
					var:lifepath_name = flag:way_of_nullification
					var:lifepath_name = flag:way_of_justice
					var:lifepath_name = flag:way_of_hunt
					var:lifepath_name = flag:way_of_stars
					var:lifepath_name = flag:way_of_sword
					var:lifepath_name = flag:way_of_shepherd
					var:lifepath_name = flag:way_of_blood
					var:lifepath_name = flag:way_of_dread
					var:lifepath_name = flag:way_of_pain
					var:lifepath_name = flag:way_of_fear
				}
			}
			save_temporary_scope_as = storage_province
			prev = {
				add_to_variable_list = {
					name = valid_lifepaths
					target = scope:storage_province
				}
			}
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

set_ai_lifepath = {
	if = {
		limit = { faith = { has_doctrine_parameter = $FAITH_PARAMETER$ } }
		save_scope_value_as = {
			name = lifepath_being_checked
			value = flag:$LIFEPATH$
		}
		set_variable = {
			name = tmp_lifepath_trait_bonus
			value = 0
		}
		if = {
			limit = { 
				NOR = { 
					faith = { has_doctrine_parameter = sjalvolki_lifepaths } 
					faith = { has_doctrine_parameter = evil_lifepaths }
					faith = { has_doctrine_parameter = tripath_lifepaths }
				}
			}
			lifepath_trait_effect = { MODE = check_ai }
			random = {
				chance = $BASE_WEIGHT$
				modifier = {
					add = var:tmp_lifepath_trait_bonus
				}
				add_to_variable_list = {
					name = possible_lifepaths
					target = flag:$LIFEPATH$
				}
			}
			remove_variable = tmp_lifepath_trait_bonus
		}
		if = {
			limit = { faith = { has_doctrine_parameter = sjalvolki_lifepaths } }
			opakhasia_lifepath_trait_effect = { MODE = check_ai }
			random = {
				chance = $BASE_WEIGHT$
				modifier = {
					add = var:tmp_lifepath_trait_bonus
				}
				add_to_variable_list = {
					name = possible_opakhasia_lifepaths
					target = flag:$LIFEPATH$
				}
			}
			remove_variable = tmp_lifepath_trait_bonus
		}
		if = {
			limit = { faith = { has_doctrine_parameter = evil_lifepaths } }
			four_steps_lifepath_trait_effect = { MODE = check_ai }
			random = {
				chance = $BASE_WEIGHT$
				modifier = {
					add = var:tmp_lifepath_trait_bonus
				}
				add_to_variable_list = {
					name = possible_four_steps_lifepaths
					target = flag:$LIFEPATH$
				}
			}
			remove_variable = tmp_lifepath_trait_bonus
		}
		if = {
			limit = { faith = { has_doctrine_parameter = tripath_lifepaths } }
			tripath_lifepath_trait_effect = { MODE = check_ai }
			random = {
				chance = $BASE_WEIGHT$
				modifier = {
					add = var:tmp_lifepath_trait_bonus
				}
				add_to_variable_list = {
					name = possible_tripath_lifepaths
					target = flag:$LIFEPATH$
				}
			}
			remove_variable = tmp_lifepath_trait_bonus
		}
	}
}

add_all_lifepath = {
	if = {
		limit = { 
			faith = { has_doctrine_parameter = $FAITH_PARAMETER$ }
			NOT = { faith = faith:conclave_of_opakhasia }
		}
		save_scope_value_as = {
			name = lifepath_being_checked
			value = flag:$LIFEPATH$
		}
		set_variable = {
			name = tmp_lifepath_trait_bonus
			value = 0
		}
		add_to_variable_list = {
			name = possible_lifepaths
			target = flag:$LIFEPATH$
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

add_all_opakhasia_lifepath = {
	if = {
		limit = { faith = { has_doctrine_parameter = $FAITH_PARAMETER$ } }
		save_scope_value_as = {
			name = lifepath_being_checked
			value = flag:$LIFEPATH$
		}
		set_variable = {
			name = tmp_lifepath_trait_bonus
			value = 0
		}
		add_to_variable_list = {
			name = possible_opakhasia_lifepaths
			target = flag:$LIFEPATH$
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

add_all_four_steps_lifepath = {
	if = {
		limit = { faith = { has_doctrine_parameter = $FAITH_PARAMETER$ } }
		save_scope_value_as = {
			name = lifepath_being_checked
			value = flag:$LIFEPATH$
		}
		set_variable = {
			name = tmp_lifepath_trait_bonus
			value = 0
		}
		add_to_variable_list = {
			name = possible_four_steps_lifepaths
			target = flag:$LIFEPATH$
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

add_all_tripath_lifepath = {
	if = {
		limit = { faith = { has_doctrine_parameter = $FAITH_PARAMETER$ } }
		save_scope_value_as = {
			name = lifepath_being_checked
			value = flag:$LIFEPATH$
		}
		set_variable = {
			name = tmp_lifepath_trait_bonus
			value = 0
		}
		add_to_variable_list = {
			name = possible_tripath_lifepaths
			target = flag:$LIFEPATH$
		}
		set_variable = tmp_$BASE_WEIGHT$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$
	}
}

remove_lifepath = {
	if = {
		limit = { has_variable = lifepath_trait_available_$LIFEPATH$ }
		remove_variable = lifepath_trait_available_$LIFEPATH$
		change_variable = {
			name = number_of_lifepaths
			subtract = 1
		}
	}
}

assign_trait_lifepath = {
	if = {
		limit = { 
			trigger_if = {
				limit = { exists = scope:lifepath_to_be_assigned }
				scope:lifepath_to_be_assigned = flag:$LIFEPATH$
			}
			trigger_else = { always = no }
		}
		add_trait = $LIFEPATH$_follower
		set_variable = tmp_$BASE_WEIGHT$_$FAITH_PARAMETER$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$_$FAITH_PARAMETER$
	}
}

check_any_lifepath = {
	if = {
		limit = { 
			has_trait = $LIFEPATH$_follower
		}
		set_variable = lifepath_assigned
		set_variable = tmp_$BASE_WEIGHT$_$FAITH_PARAMETER$ # Error suppression
		remove_variable = tmp_$BASE_WEIGHT$_$FAITH_PARAMETER$
	}
}

set_lifepath_trait = {
	if = {
		limit = {
			any_in_global_list = {
				variable = all_lifepaths
				var:lifepath_name = flag:$LIFEPATH$
			}
		}
		random_in_global_list = {
			variable = all_lifepaths
			limit = { var:lifepath_name = flag:$LIFEPATH$ }
			add_to_variable_list = {
				name = aligned_traits
				target = flag:$TRAIT$
			}
		}
	}
	if = {
		limit = {
			any_in_global_list = {
				variable = all_opakhasia_lifepaths
				var:lifepath_name = flag:$LIFEPATH$
			}
		}
		random_in_global_list = {
			variable = all_opakhasia_lifepaths
			limit = { var:lifepath_name = flag:$LIFEPATH$ }
			add_to_variable_list = {
				name = aligned_traits
				target = flag:$TRAIT$
			}
		}
	}
	if = {
		limit = {
			any_in_global_list = {
				variable = all_four_steps_lifepaths
				var:lifepath_name = flag:$LIFEPATH$
			}
		}
		random_in_global_list = {
			variable = all_four_steps_lifepaths
			limit = { var:lifepath_name = flag:$LIFEPATH$ }
			add_to_variable_list = {
				name = aligned_traits
				target = flag:$TRAIT$
			}
		}
	}
	if = {
		limit = {
			any_in_global_list = {
				variable = all_tripath_lifepaths
				var:lifepath_name = flag:$LIFEPATH$
			}
		}
		random_in_global_list = {
			variable = all_tripath_lifepaths
			limit = { var:lifepath_name = flag:$LIFEPATH$ }
			add_to_variable_list = {
				name = aligned_traits
				target = flag:$TRAIT$
			}
		}
	}
}

check_ai_lifepath_trait = {
	if = {
		limit = {
			trigger_if = {
				limit = { exists = scope:lifepath_being_checked }
				scope:lifepath_being_checked = flag:$LIFEPATH$
			}
			trigger_else = { always = no }
		}
		if = {
			limit = { has_trait = $TRAIT$ }
			change_variable = {
				name = tmp_lifepath_trait_bonus
				add = 10
			}
		}
	}
}

initialize_valid_lifepaths_for_faiths = {
	lifepaths_effect = { MODE = set_global }
	lifepath_trait_effect = { MODE = set }
	opakhasia_lifepaths_effect = { MODE = set_global_opakhasia }
	opakhasia_lifepath_trait_effect = { MODE = set }
	four_steps_lifepaths_effect = { MODE = set_global_four_steps }
	four_steps_lifepath_trait_effect = { MODE = set }
	tripath_lifepaths_effect = { MODE = set_global_tripath }
	tripath_lifepath_trait_effect = { MODE = set }
	every_religion_global = {
		every_faith = {
			limit = {
				has_doctrine_parameter = evil_lifepaths
			}
			four_steps_lifepaths_effect = { MODE = set_valid_four_steps }
		}
	}
	every_religion_global = {
		every_faith = {
			limit = {
				has_doctrine_parameter = sjalvolki_lifepaths
			}
			opakhasia_lifepaths_effect = { MODE = set_valid_opakhasia }
		}
	}
	
	every_religion_global = {
		every_faith = {
			limit = {
				has_doctrine_parameter = tripath_lifepaths
			}
			tripath_lifepaths_effect = { MODE = set_valid_opakhasia }
		}
	}
	every_religion_global = {
		every_faith = {
			limit = {
				NOT = { this = faith:conclave_of_opakhasia }
				has_doctrine_parameter = lifepath_choice 
			}
			lifepaths_effect = { MODE = set_valid }
		}
	}
}

add_valid_lifepath_traits = {
	lifepaths_effect = { MODE = set_ai }
	if = {
		limit = { NOT = { has_variable_list = possible_lifepaths } }
		lifepaths_effect = { MODE = add_all }
	}
	random_in_list = {
		variable = possible_lifepaths
		save_scope_as = lifepath_to_be_assigned
	}
	lifepaths_effect = { MODE = assign_trait }
	clear_variable_list = lifepath_to_be_assigned
}

add_valid_opakhasia_lifepath_traits = {
	opakhasia_lifepaths_effect = { MODE = set_ai }
	if = {
		limit = { NOT = { has_variable_list = possible_opakhasia_lifepaths } }
		opakhasia_lifepaths_effect = { MODE = add_all_opakhasia }
	}
	random_in_list = {
		variable = possible_opakhasia_lifepaths
		save_scope_as = lifepath_to_be_assigned
	}
	opakhasia_lifepaths_effect = { MODE = assign_trait }
	clear_variable_list = lifepath_to_be_assigned
}

add_valid_four_steps_lifepath_traits = {
	four_steps_lifepaths_effect = { MODE = set_ai }
	if = {
		limit = { NOT = { has_variable_list = possible_four_steps_lifepaths } }
		four_steps_lifepaths_effect = { MODE = add_all_four_steps }
	}
	random_in_list = {
		variable = possible_four_steps_lifepaths
		save_scope_as = lifepath_to_be_assigned
	}
	four_steps_lifepaths_effect = { MODE = assign_trait }
	clear_variable_list = lifepath_to_be_assigned
}

add_valid_tripath_lifepath_traits = {
	tripath_lifepaths_effect = { MODE = set_ai }
	if = {
		limit = { NOT = { has_variable_list = possible_tripath_lifepaths } }
		tripath_lifepaths_effect = { MODE = add_all_tripath }
	}
	random_in_list = {
		variable = possible_tripath_lifepaths
		save_scope_as = lifepath_to_be_assigned
	}
	tripath_lifepaths_effect = { MODE = assign_trait }
	clear_variable_list = lifepath_to_be_assigned
}

assign_all_lifepath_trait = {
	if = {
		limit = {
			has_faith = faith:conclave_of_opakhasia
		}
		opakhasia_lifepaths_effect = { MODE = check_any }
	}
	if = {
		limit = {
			has_faith = faith:four_steps_of_salvation
		}
		four_steps_lifepaths_effect = { MODE = check_any }
	}
	if = {
		limit = {
			has_faith = faith:darrallianism
		}
		tripath_lifepaths_effect = { MODE = check_any }
	}
	if = {
		limit = {
			OR = {
				NOT = { has_faith = faith:conclave_of_opakhasia }
				NOT = { has_faith = faith:four_steps_of_salvation }
				NOT = { has_faith = faith:darrallianism }
			}
		}
		lifepaths_effect = { MODE = check_any }
	}
	
	assign_lifepath_trait = yes
}

assign_lifepath_trait = {
	if = {
		limit = {
			faith = { has_variable = faith_has_lifepaths }
			is_adult = yes
		}
		if = {
			limit = { 
				faith = { has_doctrine_parameter = sjalvolki_lifepaths }
			}
			add_valid_opakhasia_lifepath_traits = yes
		}
		if = {
			limit = { 
				faith = { has_doctrine_parameter = tripath_lifepaths }
			}
			add_valid_tripath_lifepath_traits = yes
		}
		else_if = {
			limit = {
				faith = { has_doctrine_parameter = evil_lifepaths }
			}
			add_valid_four_steps_lifepath_traits = yes
		}
		else = { 
			add_valid_lifepath_traits = yes
		}
	}
}

# Lifepath Dedication

intialize_lifepath_relevance_variable = {
	every_religion_global = {
		every_faith = {
			limit = {
				has_doctrine_parameter = lifepath_choice
			}
			set_variable = {
				name = lifepath_relevance_measure
				value = 0.5
			}
		}
	}
}

dedication_impact = {
	if = {
		limit = {
			faith = {
				has_doctrine_parameter = lifepath_choice
			}
		}
		faith = {
			change_variable = {
				name = lifepath_relevance_measure
				add = $AMOUNT$_dedication_$NATURE$
			}
		}
		custom_tooltip = dedication_$AMOUNT$_$NATURE$.tt
	}
}

# Usage example :
# lifepath_impact = {
#	WAY = coins
#	NATURE = positive
#	AMOUNT = major
#}
lifepath_impact = {
	if = {
		limit = {
			has_trait = way_of_$WAY$_follower
		}
		custom_tooltip = lifepath_impact_$WAY$.tt
		lifepath_constituent_$NATURE$ = {
			AMOUNTX = $AMOUNT$
		}
		custom_tooltip = lifepath_impact_end.tt
	}
}

lifepath_constituent_negative = {
	add_piety = $AMOUNTX$_piety_loss_lifepath
	stress_impact = {
		zealous = $AMOUNTX$_stress_impact_gain
	}
}

lifepath_constituent_positive = {
	add_piety = $AMOUNTX$_piety_gain_lifepath
	stress_impact = {
		zealous = $AMOUNTX$_stress_impact_loss
	}
}


#####################################
#
#    OUTDATED LIFEPATH EFFECTS.
#	 Should be removed when new (above) are fully implemented.
#####################################
lifepath_adherence_impact_tooltip = { # Produces the right tooltip for whether or not the Marcher is zealous or not. For use in options with random outcomes.
    if = {
        limit = {
            has_trait = way_of_$LP_NAME$_follower
			NOT = {
				has_trait = zealous
			}
        }
        custom_tooltip = lifepath_adherence_notification.tt
    }
	else_if = {
		limit = {
			AND = {
				has_trait = way_of_$LP_NAME$_follower
				has_trait = zealous
			}
		}
		custom_tooltip = lifepath_adherence_zealous.tt
	}
}

lifepath_adherence_impact = { # Produces the right effect, for use in random outcomes.
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		add_piety = $PIETY_AMOUNT$_piety_gain_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_loss
		}
	}
}

lifepath_option_adherence = { # Produces the right effects and tooltips, for use in event options without random outcomes.
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		if = {
			limit = {
				has_trait = zealous
			}
			custom_tooltip = lifepath_adherence_zealous.tt
		}
		else = {
			custom_tooltip = lifepath_adherence_notification.tt
		}
		add_piety = $PIETY_AMOUNT$_piety_gain_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_loss
		}
	}
}

lifepath_adherence_variant = { # For use in result events, localisation is more past-tense.
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		if = {
			limit = {
				has_trait = zealous
			}
			custom_tooltip = lifepath_adherence_variantzealous.tt
		}
		else = {
			custom_tooltip = lifepath_adherence_variant.tt
		}
		add_piety = $PIETY_AMOUNT$_piety_gain_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_loss
		}
	}
}

lifepath_option_disadherence = { # Produces the right effects and tooltips, for use in event options without random outcomes.
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		if = {
			limit = {
				has_trait = zealous
			}
			custom_tooltip = lifepath_adherence_zealousbad.tt
		}
		else = {
			custom_tooltip = lifepath_adherence_bad.tt
		}
		add_piety = $PIETY_AMOUNT$_piety_loss_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_gain
		}
	}
}

lifepath_disadherence_variant = { # Same as adherence_variant but for failing
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		if = {
			limit = {
				has_trait = zealous
			}
			custom_tooltip = lifepath_disadherence_variantzealous.tt
		}
		else = {
			custom_tooltip = lifepath_disadherence_variant.tt
		}
		add_piety = $PIETY_AMOUNT$_piety_loss_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_gain
		}
	}
}

##################
#
# Not satisfied with below clandestine effects for crows. They should have something else IMO, but this will be implemented for now.
#
##################

crow_clandestine_impact = { # Produces effect for failed clandestine operations for followers of the Way of Crows. For use in negative randomized outcomes.
	if = {
		limit = {
			has_trait = way_of_crows_follower
		}
		add_piety = $PIETY_AMOUNT$_piety_loss_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_gain
		}
	}
}

crow_zealous_clandestine_impact = { # Produces stress loss for succesful clandestine operations for zealous followers of the Way of Crows. For use in positive randomized outcomes.
	if = {
		limit = {
			AND = {
				has_trait = way_of_crows_follower
				has_trait = zealous
			}
		}
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_loss
		}
	}
}

crow_zealous_withtooltip = { # For use in event options with no randomized outcomes. Produces tooltip and effects.
	if = {
		limit = {
			AND = {
				has_trait = way_of_crows_follower
				has_trait = zealous
			}
		}
		custom_tooltip = lifepath_crow_adherence_zealous.tt
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_loss
		}
	}
}

crow_clandestine_impact_tooltip = { # Produces the correct tooltips for crows performing clandestine actions. For use in options.
	if = {
		limit = {
			has_trait = way_of_crows_follower
		}
		custom_tooltip = lifepath_crow_adherence_staysneaky.tt
	}
	if = {
		limit = {
			AND = {
				has_trait = way_of_crows_follower
				has_trait = zealous
			}
		}
		custom_tooltip = lifepath_crow_adherence_zealous.tt
	}
}

lifepath_disadherence_impact = { # Produces the correct tooltips and effects for choosing non-lifepath adhering decisions. For use in options with random outcomes.
	if = {
		limit = {
			has_trait = way_of_$LP_NAME$_follower
		}
		add_piety = $PIETY_AMOUNT$_piety_loss_lifepath
		stress_impact = {
			zealous = $STRESS_AMOUNT$_stress_impact_gain
		}
		if = {
			limit = {
				has_trait = zealous
				custom_tooltip = lifepath_adherence_zealousbad.tt
			}
		}
		else = {
			custom_tooltip = lifepath_adherence_bad.tt
		}
	}
}

upgrade_to_wayfather = {
	if = {
		limit = { has_trait = way_of_swords_follower }
		change_trait_rank = {
			trait = way_of_swords
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_family_follower }
		change_trait_rank = {
			trait = way_of_family
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_coins_follower }
		change_trait_rank = {
			trait = way_of_coins
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_crowns_follower }
		change_trait_rank = {
			trait = way_of_crowns
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_harvests_follower }
		change_trait_rank = {
			trait = way_of_harvests
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_justice_follower }
		change_trait_rank = {
			trait = way_of_justice
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_knowledge_follower }
		change_trait_rank = {
			trait = way_of_knowledge
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_crows_follower }
		change_trait_rank = {
			trait = way_of_crows
			rank = 1
			max = 2
		}
	}
	else_if = {
		limit = { has_trait = way_of_nullification_follower }
		change_trait_rank = {
			trait = way_of_nullification
			rank = 1
			max = 2
		}
	}
	else = {
		add_prestige = 1 #shouldnt get this, good job
	}
}

populate_with_wayfathers = {
	if = {
		limit = {
			is_ruler = yes
			faith = { has_variable = faith_has_lifepaths }
			NOR = {
				any_courtier_or_guest = { is_wayfollower_trigger = yes }
				any_vassal = { is_wayfollower_trigger = yes }
			}
		}
		save_temporary_scope_as = court_owner
		random_list = {
			10 = {
				create_character = {
					template = way_of_swords_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_family_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_coins_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_crowns_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_harvests_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_justice_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_knowledge_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_crows_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
			10 = {
				create_character = {
					template = way_of_nullification_father_template
					faith = court_owner.faith
					culture = court_owner.culture
					employer = court_owner
					save_scope_as = generated_wayfather
				}
			}
		}
		scope:generated_wayfather = {
			set_variable = wayfather
		}
	}
}

generate_wayfather_swords = {
	create_character = {
		template = way_of_swords_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_family = {
	create_character = {
		template = way_of_family_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_coins = {
	create_character = {
		template = way_of_coins_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_crowns = {
	create_character = {
		template = way_of_crowns_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_harvests = {
	create_character = {
		template = way_of_harvests_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_justice = {
	create_character = {
		template = way_of_justice_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_knowledge = {
	create_character = {
		template = way_of_knowledge_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}

generate_wayfather_crows = {
	create_character = {
		template = way_of_crows_father_template
		faith = root.faith
		culture = root.culture
		employer = root
	}
}

generate_wayfather_nullification = {
	create_character = {
		template = way_of_nullification_father_template
		faith = root.faith
		culture = root.culture
		dynasty = none
		employer = root
	}
}