create_artifact_gh_helmet_black_sun_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = gh_helmet_black_sun_name
		description = gh_helmet_black_sun_description
		type = helmet
		visuals = gh_helmet_black_sun_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = gh_helmet_black_sun_template
		history = {
			type = created
			date = 1251.1.1
			actor = character:apokiakas_aversarinas_aagiokratia_23
			recipient = character:apokiakas_aversarinas_aagiokratia_23 # Nicanoneus
			location = province:3249	# Dethiclos
		}
		modifier = artifact_blacksunmask_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		equip_artifact_to_owner = yes
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = gh_helmet_black_sun
			value = yes
		}
		save_scope_as = epic
	}
}

create_artifact_gh_armor_black_sun_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = gh_armor_black_sun_name
		description = gh_armor_black_sun_description
		type = armor_plate
		visuals = gh_armor_black_sun_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = gh_armor_black_sun_template
		history = {
			type = created
			date = 1251.1.1
			actor = character:apokiakas_aversarinas_aagiokratia_23
			recipient = character:apokiakas_aversarinas_aagiokratia_23 # Nicanoneus
			location = province:3249	# Dethiclos
		}
		modifier = artifact_blacksunmask_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		equip_artifact_to_owner = yes
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = gh_armor_black_sun
			value = yes
		}
		save_scope_as = epic
	}
}

create_artifact_gh_helmet_skull_helmet_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = gh_helmet_skull_helmet_name
		description = gh_helmet_skull_helmet_description
		type = helmet
		visuals = gh_helmet_skull_helmet_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = gh_helmet_skull_helmet_template
		history = {
			type = created
			date = 1245.1.1
			actor = character:southernimperial_aversarian_gorassos_1
			recipient = character:southernimperial_aversarian_gorassos_1 # Gorassos
			location = province:4156 # Tylai
		}
		modifier = artifact_blacksunmask_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = gh_helmet_skull_helmet
			value = yes
		}
		save_scope_as = epic
	}
}

# Chevalie Crown
create_artifact_broken_crown_effect_1 = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = broken_crown_name
		description = broken_crown_description
		type = miscellaneous
		visuals = gh_broken_crown_1_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1253.8.12
			recipient = character:voyagen_lifepath_7
			location = province:1346
			actor = character:voyagen_lifepath_1
		}
		modifier = artifact_brokencrown_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
	scope:newly_created_artifact = {
		save_scope_as = broken_crown_1
		set_variable = broken_crown_piece
		set_variable = broken_crown_1
	}
}

create_artifact_broken_crown_effect_2 = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = broken_crown_name
		description = broken_crown_description
		type = miscellaneous
		visuals = gh_broken_crown_2_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1253.8.12
			recipient = character:voyagen_lifepath_8
			location = province:1346
			actor = character:voyagen_lifepath_1
		}
		modifier = artifact_brokencrown_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
	scope:newly_created_artifact = {
		save_scope_as = broken_crown_2
		set_variable = broken_crown_piece
		set_variable = broken_crown_2
	}
}

create_artifact_broken_crown_effect_3 = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = broken_crown_name
		description = broken_crown_description
		type = miscellaneous
		visuals = gh_broken_crown_3_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1253.8.12
			recipient = character:voyagen_lifepath_9
			location = province:1346
			actor = character:voyagen_lifepath_1
		}
		modifier = artifact_brokencrown_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
	scope:newly_created_artifact = {
		save_scope_as = broken_crown_3
		set_variable = broken_crown_piece
		set_variable = broken_crown_3
	}
}

create_artifact_broken_crown_effect_4 = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = broken_crown_name
		description = broken_crown_description
		type = miscellaneous
		visuals = gh_broken_crown_4_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1253.8.12
			recipient = character:salisians_lifepath_1
			location = province:1346
			actor = character:voyagen_lifepath_1
		}
		modifier = artifact_brokencrown_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
	scope:newly_created_artifact = {
		save_scope_as = broken_crown_4
		set_variable = broken_crown_piece
		set_variable = broken_crown_4
	}
}

create_crown_of_chevalie_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = crown_of_chevalie
		description = crown_of_chevalie_description
		type = helmet
		visuals = crown
		wealth = scope:wealth
		quality = scope:quality
		modifier = artifact_chevalie_crown_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}
	scope:newly_created_artifact = {
		save_scope_as = crown_of_chevalie
		set_variable = crown_of_chevalie
		set_variable = { name = historical_unique_artifact value = yes }
	}
}

# Weapons

# Den va Seignon Family Sword
create_artifact_seignon_family_sword_effect = {
    $OWNER$ = { save_scope_as = owner }

    set_artifact_rarity_famed = yes

    create_artifact = {
        name = artifact_seignonsword_name
        description = artifact_seignonsword_desc
        type = sword
        visuals = gh_aelfir_sword_crossguard_visuals
        wealth = scope:wealth
        quality = scope:quality
		history = {
			type = created_before_history
		}
        #history = {
        #	type = created
        #	date = 1253.8.12
        #	recipient = character:voyagen_lifepath_8
        #	location = province:1346
        #	actor = character:voyagen_lifepath_1
        #}
        decaying = no
        template = gh_seignon_family_sword_template
        modifier = artifact_prowess_8_modifier
        modifier = artifact_knight_effectiveness_9_modifier
        modifier = artifact_monthly_minor_prestige_2_modifier
        modifier = artifact_dynasty_opinion_4_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
		equip_artifact_to_owner = yes
    	save_scope_as = seignon_family_sword
    	set_variable = { name = historical_unique_artifact value = yes }
		add_artifact_history = {
			type = discovered
			date = 900.1.1
			location = province:1346
			recipient = character:voyagen_lifepath_45
			actor = character:voyagen_lifepath_45 #Credon
		}
		add_artifact_history = {
			type = inherited
			date = 924.12.4
			recipient = character:voyagen_lifepath_39 #Gardfrei (the first)
		}
		add_artifact_history = {
			type = inherited
			date = 934.5.6
			recipient = character:voyagen_lifepath_40 #Rodald
		}
		add_artifact_history = {
			type = inherited
			date = 962.4.12
			recipient = character:voyagen_lifepath_52 #Jaqaume
		}
		add_artifact_history = {
			type = inherited
			date = 1000.12.23
			recipient = character:voyagen_lifepath_54 #Budouil
		}
		add_artifact_history = {
			type = inherited
			date = 1060.2.15
			recipient = character:voyagen_lifepath_55 #Ludoin
		}
		add_artifact_history = {
			type = inherited
			date = 1080.7.20
			recipient = character:voyagen_lifepath_56 #Leuhard
		}
		add_artifact_history = {
			type = inherited
			date = 1095.2.28
			recipient = character:voyagen_lifepath_25 #Averd
		}
		add_artifact_history = {
			type = inherited
			date = 1140.3.25
			recipient = character:voyagen_lifepath_24 #Kierre
		}
		add_artifact_history = {
			type = inherited
			date = 1166.7.21
			recipient = character:voyagen_lifepath_23 #Chrysé
		}
		add_artifact_history = {
			type = inherited
			date = 1199.9.26
			recipient = character:voyagen_lifepath_22 #Dendon
		}
		add_artifact_history = {
			type = inherited
			date = 1217.4.12
			recipient = character:voyagen_lifepath_1 #Gardfrei
		}
		add_artifact_history = {
			type = given
			date = 1253.11.12
			recipient = character:voyagen_lifepath_8 #Réné
		}
    }
}

# Sword of Eos
create_artifact_sword_of_eos_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_swordofeos_name
		description = artifact_swordofeos_desc
		type = sword
        visuals = gh_marcher_sword_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1088.8.3
			recipient = character:centralimperial_aversarinas_aagiokrata_60
			location = province:877
		}
		decaying = no
		template = gh_sword_of_eos_template
		modifier = artifact_prowess_7_modifier
		modifier = artifact_knight_effectiveness_8_modifier
		modifier = artifact_same_faith_opinion_4_modifier
		modifier = artifact_monthly_piety_2_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sword_of_eos
		set_variable = {
			name = prominent_wielder
			value = character:centralimperial_aversarinas_aagiokrata_60 # Saint Eos
		}
		set_variable = {
			name = prominent_foe
			value = character:lich_culture_rejection_8 # Wethynod Wethydoltek
		}
		set_artifact_description = artifact_swordofeos_battle_desc
		#add_artifact_history = {
		#	type = inherited
		#	date = 1185.7.13
		#	recipient = character:makryenis_eos_2
		#}
		#add_artifact_history = {
		#	type = inherited
		#	date = 1253.12.27
		#	recipient = character:makryenis_eos_1
		#}
		save_scope_as = epic
	}
}

# Maria Den va Theydia's Blade
create_artifact_marias_blade_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_marias_blade_name
		description = artifact_marias_blade_desc
		type = sword
		visuals = sword
		history = {
			type = created
			date = 1160.6.18
			actor = character:voyagen_lifepath_59
			recipient = character:voyagen_lifepath_58
			location = province:1363 # Mirecourt
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_marias_blade_template
		modifier = artifact_prowess_6_modifier
		modifier = artifact_monthly_prestige_5_modifier
		modifier = artifact_attraction_opinion_3_modifier
		modifier = artifact_dread_gain_mult_2_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = marias_blade
		set_variable = {
			name = prominent_wielder
			value = character:voyagen_lifepath_58
		}
		set_variable = {
			name = prominent_foe
			value = character:lich_culture_rejection_11
		}
		set_artifact_description = artifact_marias_blade_battle_desc
		save_scope_as = epic
	}
}

# Peytons Bonecracker
create_artifact_peytons_bonecracker_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_peytonsbonecracker_name
		description = artifact_peytonsbonecracker_desc
		type = mace
		visuals = mace
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_peytons_bonecracker_template
		modifier = artifact_prowess_4_modifier
		modifier = martial_per_piety_from_tradition_modifier
		modifier = artifact_monthly_piety_5_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = peytons_bonecracker
		set_variable = {
			name = prominent_wielder
			value = character:carsavisians_lifepath_36
		}
		set_variable = {
			name = prominent_foe
			value = character:lich_culture_rejection_13
		}
		set_artifact_description = artifact_peytonsbonecracker_battle_desc
		save_scope_as = epic
	}
}

# Sword of Soter
create_artifact_sword_of_soter_effect = {
    $OWNER$ = { save_scope_as = owner }
	if = {
		limit = { NOT = { exists = scope:location } }
		scope:owner ?= { location = { save_scope_as = location } }
	}

    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_sword_of_soter_name
        description = artifact_sword_of_soter_desc
        type = sword
        visuals = gh_aelfir_sword_gold_visuals
        wealth = scope:wealth
        quality = scope:quality
		history = {
			type = discovered
			actor = scope:owner
			recipient = scope:owner
			location = scope:location
		}
        decaying = no
        template = gh_sword_of_soter_template
        modifier = artifact_prowess_8_modifier
        modifier = artifact_monthly_prestige_5_modifier
		modifier = artifact_monthly_prestige_gain_per_dread_add_4_modifier
		modifier = artifact_monthly_piety_4_modifier
		modifier = ep3_consolidated_rule_modifier	# GH TODO: Implement a proper artifact-specific modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
    	save_scope_as = sword_of_soter
    	set_variable = { name = historical_unique_artifact value = yes }
		add_artifact_aspect_modifier_effect = { NAME = light VALUE = 2 }
		add_artifact_aspect_modifier_effect = { NAME = fire VALUE = 2 }
		add_artifact_history = {
			type = inherited
			date = 253.1.2
			recipient = character:westernimperial_aversarinas_aagiokrata_119 #Maklea
		}
		# GH TODO: Fill in history between these two dates
		add_artifact_history = {
			type = inherited
			date = 347.7.13
			recipient = character:westernimperial_aversarinas_aagiokrata_111 #Pathos
		}
		# GH TODO: Fill in history between these two dates
		add_artifact_history = {
			type = inherited
			date = 439.5.4
			recipient = character:westernimperial_aversarinas_aagiokrata_500 #Aeliadias
		}
		add_artifact_history = {
			type = inherited
			date = 599.10.25
			recipient = character:southernimperial_aversarinas_aagiokrata_133 #Aeladaxos 'the Child Aautokratir'
		}
		add_artifact_history = {
			type = inherited
			date = 618.4.17
			recipient = character:centralimperial_aversarinas_aagiokrata_33 #Kethemodes
		}
		add_artifact_history = {
			type = inherited
			date = 618.4.17
			recipient = character:centralimperial_aversarinas_aagiokrata_33 #Kethemodes
		}
		add_artifact_history = {
			type = taken_in_battle
			date = 645.6.26
			actor = character:centralimperial_aversarinas_aagiokrata_33
			recipient = character:unsorted_48	# Last Imperator
			location = province:3572
		}
		add_artifact_history = {
			type = discovered
			date = 793.1.2
			actor = character:southernimperial_aversarinas_aagiokrata_1
			recipient = character:southernimperial_aversarinas_aagiokrata_1	# Theyssia
			location = province:6132
		}
		add_artifact_history = {
			type = inherited
			date = 892.3.17
			recipient = character:northernimperial_aversarinas_aagiokrata_2 #Mythix
		}
		add_artifact_history = {
			type = inherited
			date = 901.1.12
			recipient = character:westernimperial_aversarinas_aagiokrata_84 #Nothyx
		}
		add_artifact_history = {
			type = inherited
			date = 949.7.17
			recipient = character:westernimperial_aversarinas_aagiokrata_116 #Oliatos
		}
		add_artifact_history = {
			type = inherited
			date = 952.4.3
			recipient = character:westernimperial_aversarinas_aagiokrata_115 #Clytomedes
		}
		add_artifact_history = {
			type = inherited
			date = 954.4.3
			recipient = character:westernimperial_aversarinas_aagiokrata_114 #Alcandrea
		}
		add_artifact_history = {
			type = inherited
			date = 987.4.3
			recipient = character:westernimperial_aversarinas_aagiokrata_113 #Isocrates
		}
		add_artifact_history = {
			type = inherited
			date = 1025.5.5
			recipient = character:northernimperial_aversarinas_aagiokrata_41 #Exaduis
		}
		add_artifact_history = {
			type = inherited
			date = 1076.7.13
			recipient = character:westernimperial_aversarinas_aagiokrata_82 #Phancis
		}
		add_artifact_history = {
			type = inherited
			date = 1099.3.14
			recipient = character:westernimperial_aversarinas_aagiokrata_81 #Biton
		}
		add_artifact_history = {
			type = inherited
			date = 1117.2.12
			recipient = character:westernimperial_aversarinas_aagiokrata_80 #Maeonias
		}
		add_artifact_history = {
			type = inherited
			date = 1120.3.14
			recipient = character:westernimperial_aversarinas_aagiokrata_79 #Maeonias
		}
		# GH TODO: Fill in history between these two dates
		add_artifact_history = {
			type = inherited
			date = 1181.4.14
			recipient = character:centralimperial_aversarinas_aagiokrata_45 #Anesimasios
		}
		add_artifact_history = {
			type = inherited
			date = 1186.2.14
			recipient = character:easternimperial_aversarian_axiaotheaism_1 #Axiaothea
		}
    }
}

# Misc Objects

# The Black Horn
create_artifact_blackhorn_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_blackhorn_name
		description = artifact_blackhorn_desc
		type = pedestal
		visuals = gh_blackhorn_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		decaying = no
		template = gh_blackhorn_template
		modifier = artifact_blackhorn_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		save_scope_as = blackhorn
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = blackhorn
	}
}

# Court Arms

# Sir Theyvns Breastplate
create_artifact_theyvns_breastplate_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_sirtheyvnsbreastplate_name
		description = artifact_sirtheyvnsbreastplate_desc
		type = pedestal
		visuals = pedestal_alexander_armor
		wealth = scope:wealth
		quality = scope:quality
		template = gh_theyvns_breastplate_template
		history = {
			type = created_before_history
		}
		modifier = artifact_sirtheyvnsbreastplate_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = theyvns_breastplate
		save_scope_as = epic
	}
}

# Talavara
create_artifact_talavara_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = talavara_name
		description = talavara_description
		type = pedestal
		visuals = talavara_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = talavara_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = {
			name = artifact_succession_title
			value = title:k_kafasali
		}
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = talavara
		add_artifact_history = {
			type = inherited
			date = 1194.4.16
			recipient = character:rahikaya_vidvaookeyatra_1
		}
		add_artifact_history = {
			type = inherited
			date = 1226.6.9
			recipient = character:rahikaya_vidvaookeyatra_7
		}
		add_artifact_history = {
			type = inherited
			date = 1230.1.9
			recipient = character:rahikaya_vidvaookeyatra_11
		}
		add_artifact_history = {
			type = stolen
			date = 1231.4.6
			recipient = character:xokola_vidvaookeyatra_2
		}

		save_scope_as = talavara
	}
}



# Magic Jewelry

# Panicked Eye
create_artifact_panicked_eye_amulet_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_panickedeye_name
		description = artifact_panickedeye_desc
		type = necklace
		visuals = necklace
		wealth = scope:wealth
		quality = scope:quality
		template = gh_panicked_eye_template
		modifier = artifact_panickedeye_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = panicked_eye_amulet
		save_scope_as = epic
	}
}

# Fell Charm
create_artifact_fell_charm_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_fellcharm_name
		description = artifact_fellcharm_desc
		type = necklace
		visuals = necklace
		wealth = scope:wealth
		quality = scope:quality
		template = gh_fell_charm_template
		modifier = artifact_fellcharm_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = fell_charm
		save_scope_as = epic
	}
}

# Lich King
create_artifact_ring_lich_king_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_ringofthelich_name
		description = artifact_ringofthelich_desc
		type = regalia
		visuals = ring
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		decaying = no
		template = gh_ring_lich_king_template
		modifier = artifact_ringofthelich_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = lich_king_ring
		save_scope_as = epic
	}
}

# Waysaints Ring
create_artifact_ring_waysaint_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_ringofwaysaints_name
		description = artifact_ringofwaysaints_desc
		type = regalia
		visuals = ring
		wealth = scope:wealth
		quality = scope:quality
		template = gh_ring_waysaints_template
		modifier = artifact_ringofwaysaints_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = ring_waysaint
		save_scope_as = epic
	}
}

# Greed Necklace
create_artifact_greed_necklace_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_greednecklace_name
		description = artifact_greednecklace_desc
		type = necklace
		visuals = necklace
		wealth = scope:wealth
		quality = scope:quality
		template = gh_greed_necklace_template
		modifier = artifact_greednecklace_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = greed_necklace
		save_scope_as = epic
	}
}


# Skulls

create_artifact_skull_of_axiaothea_effect = {
	$OWNER$ = { save_scope_as = owner }
	character:easternimperial_aversarian_axiaotheaism_1 = { save_scope_as = axiaothea }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_skullofaxiaothea_name
		description = artifact_skullofaxiaothea_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1204.4.5
			actor = character:southernimperial_aversarian_gorassos_1
			recipient = character:southernimperial_aversarian_gorassos_1
			location = province:4467

		}
		template = gh_skull_axiaothea_template
		modifier = artifact_skullofaxiaothea_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_axiaothea
		save_scope_as = skull_axiaothea
	}
}

create_artifact_skull_delenel_effect = {
	$OWNER$ = { save_scope_as = owner }
	character:centralimperial_aeschraes_aagiokrata_1 = { save_scope_as = delenel }
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = artifact_karthynskull_name
		description = artifact_karthynskull_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1229.12.12
			actor = character:centralimperial_aeschraes_aagiokrata_1
			recipient = character:southernimperial_aversarian_gorassos_1
			location = province:4467

		}
		template = gh_skull_delenel_template
		modifier = artifact_karthynskull_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_delenel
		save_scope_as = skull_delenel
	}
}

create_artifact_talking_skull_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_strangetalkingskull_name
		description = artifact_strangetalkingskull_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = gh_talking_skull_template
		modifier = artifact_strangetalkingskull_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = talking_skull
		save_scope_as = epic
	}
}

create_artifact_whispering_skull_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_whisperingskull_name
		description = artifact_whisperingskull_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = gh_whispering_skull_template
		modifier = artifact_whisperingskull_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		save_scope_as = epic
	}
}

create_artifact_ancient_skull_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_skullofanancient_name
		description = artifact_skullofanancient_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		template = gh_ancient_skull_template
		modifier = artifact_skullofanancient_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		save_scope_as = epic
	}
}

create_artifact_skullofpridni_effect = {
	$OWNER$ = { save_scope_as = owner }
	character:southernimperial_aeschraes_aagiokrata_1 = { save_scope_as = pridni }
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = artifact_skullofpridni_name
		description = artifact_skullofpridni_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1230.10.27
			actor = character:southernimperial_aversarian_gorassos_1
			recipient = character:southernimperial_aversarian_gorassos_1
			location = province:4053

		}
		template = gh_skullofpridni_template
		modifier = artifact_skullofpridni_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skullofpridni
		save_scope_as = skullofpridni
	}
}

create_artifact_skullofduvaken_effect = {
	$OWNER$ = { save_scope_as = owner }
	character:karzarads_kakarataki_5 = { save_scope_as = duvaken }
	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = artifact_skullofduvaken_name
		description = artifact_skullofduvaken_desc
		type = skull
		visuals = skull_visuals
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 1230.10.27
			actor = character:southernimperial_aversarian_gorassos_1
			recipient = character:southernimperial_aversarian_gorassos_1
			location = province:4053

		}
		template = gh_skullofduvaken_template
		modifier = artifact_skullofduvaken_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skullofduvaken
		save_scope_as = skullofduvaken
	}
}

create_artifact_fire_arbalest_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes
	set_variable = {
		name = model_number
		value = {
			integer_range = {
				min = 1
				max = 50
			}
		}
	}
	create_artifact = {
		name = artifact_adabyssianfirearbalest_name
		description = artifact_adabyssianfirearbalest_desc
		type = fire_arbalest
		visuals = fire_arbalest
		wealth = scope:wealth
		quality = scope:quality
		template = gh_fire_arbalest_template
		modifier = artifact_prowess_5_modifier
		modifier = artifact_dread_baseline_add_4_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		save_scope_as = fire_arbalest_weapon
		set_variable = fire_arbalest
		set_variable = { name = historical_unique_artifact value = yes }
	}
	remove_variable = model_number # not needed anymore
}

# Crowns

# Aversarian Crown

create_artifact_aversarian_crown_base_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
	    name = artifact_aversarian_crown_base_name
	    description = artifact_aversarian_crown_base_desc
	    type = helmet
	    visuals = crown
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    history = {
	    	type = created
	    	date = 45.1.1
	    	actor = character:aelarvisian_aerasodiax_1
	    	recipient = character:aelarvisian_aerasodiax_1 
	    	location = province:1791
	    }
	    template = gh_aversarian_base_crown_template
	    modifier = artifact_monthly_prestige_5_modifier
	    modifier = artifact_domain_tax_same_faith_mult_2_modifier
	    save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
	    set_variable = { name = historical_unique_artifact value = yes }
		set_variable = broken_aversarian_crown_piece
		set_variable = aversarian_crown_base
	    save_scope_as = aversarian_crown_1

	    #add_artifact_history = {
	    #     type = inherited
	    #     date = 0.1.1
	    #     recipient = character:aelarvisian_aerasodiax_1
	    # }
	    add_artifact_history = {
	        type = inherited
	        date = 64.11.12
	        recipient = character:aelarvisian_aerasodiax_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 86.3.1
	        recipient = character:aelarvisian_aerasodiax_4
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 93.11.14
	        recipient = character:aelarvisian_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 132.7.11
	        recipient = character:aelarvisian_aerasodiax_5
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 151.2.1
	        recipient = character:aeviaxian_aerasodiax_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 170.7.11
	        recipient = character:aelarvisian_aversarinas_aagiokrata_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 188.4.21
	        recipient = character:westernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 210.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_118
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 243.3.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_119
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 348.7.13
	        recipient = character:westernimperial_aversarinas_aagiokrata_111
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 439.5.4
	        recipient = character:westernimperial_aversarinas_aagiokrata_500
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 610.12.1
	        recipient = character:centralimperial_aversarinas_aagiokrata_33
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 725.5.29
	        recipient = character:centralimperial_aversarinas_aagiokrata_64
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 756.10.3
	        recipient = character:southernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 892.3.17
	        recipient = character:northernimperial_aversarinas_aagiokrata_2
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 901.1.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_84
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 949.7.17
	        recipient = character:westernimperial_aversarinas_aagiokrata_116
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 952.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_115
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 954.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_114
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 987.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_113
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1001.4.3
	        recipient = character:northernimperial_aversarinas_aagiokrata_41
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1025.5.5
	        recipient = character:westernimperial_aversarinas_aagiokrata_82
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1099.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_81
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1117.2.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_80
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1120.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_79
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1172.3.14
	        recipient = character:apokiakas_aversarinas_aagiokratia_22
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1175.11.28
	        recipient = character:easternimperial_aversarinas_aagiokrata_89
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1177.7.17
	        recipient = character:westernimperial_aversarinas_aagiokrata_78
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1179.1.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_77
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1181.4.14
	        recipient = character:centralimperial_aversarinas_aagiokrata_45
	    }
	    add_artifact_history = {
	    	type = inherited
	    	date = 1186.2.14
	    	actor = character:centralimperial_aversarinas_aagiokrata_45
	    	recipient = character:westernimperial_aeschraes_aagiokrata_1
	    }
	    add_artifact_history = {
	    	type = stolen
	    	date = 1229.12.12
	    	recipient = character:westernimperial_aversarinas_aagiokrata_250
	    }
	}
	set_global_variable = {
		name = aversarian_crown_base_link
		value = scope:newly_created_artifact
	}
}

create_artifact_aversarian_crown_jewels_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
	    name = artifact_aversarian_crown_jewels_name
	    description = artifact_aversarian_crown_jewels_desc
	    type = gemstone
	    visuals = diamond
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    template = gh_aversarian_crown_jewels_template
	    modifier = artifact_monthly_prestige_5_modifier
	    modifier = artifact_domain_tax_same_faith_mult_2_modifier
	    save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
	    set_variable = { name = historical_unique_artifact value = yes }
	    set_variable = broken_aversarian_crown_piece
		set_variable = aversarian_crown_jewels
	    save_scope_as = aversarian_crown_2
	}

	set_global_variable = {
		name = aversarian_crown_jewels_link
		value = scope:newly_created_artifact
	}
}

create_artifact_aversarian_crown_dragonveil_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
	    name = artifact_aversarian_crown_dragonveil_name
	    description = artifact_aversarian_crown_dragonveil_desc
	    type = miscellaneous
	    visuals = pocket_fancy_case
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    template = gh_aversarian_crown_dragonveil__template
	    modifier = artifact_monthly_prestige_5_modifier
	    modifier = artifact_domain_tax_same_faith_mult_2_modifier
	    save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
	    set_variable = { name = historical_unique_artifact value = yes }
	    set_variable = broken_aversarian_crown_piece
		set_variable = aversarian_crown_dragonveil
	    save_scope_as = aversarian_crown_3

	    add_artifact_history = {
	        type = inherited
	        date = 64.11.12
	        recipient = character:aelarvisian_aerasodiax_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 86.3.1
	        recipient = character:aelarvisian_aerasodiax_4
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 93.11.14
	        recipient = character:aelarvisian_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 132.7.11
	        recipient = character:aelarvisian_aerasodiax_5
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 151.2.1
	        recipient = character:aeviaxian_aerasodiax_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 170.7.11
	        recipient = character:aelarvisian_aversarinas_aagiokrata_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 188.4.21
	        recipient = character:westernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 210.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_118
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 243.3.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_119
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 348.7.13
	        recipient = character:westernimperial_aversarinas_aagiokrata_111
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 439.5.4
	        recipient = character:westernimperial_aversarinas_aagiokrata_500
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 610.12.1
	        recipient = character:centralimperial_aversarinas_aagiokrata_33
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 725.5.29
	        recipient = character:centralimperial_aversarinas_aagiokrata_64
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 756.10.3
	        recipient = character:southernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 892.3.17
	        recipient = character:northernimperial_aversarinas_aagiokrata_2
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 901.1.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_84
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 949.7.17
	        recipient = character:westernimperial_aversarinas_aagiokrata_116
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 952.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_115
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 954.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_114
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 987.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_113
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1001.4.3
	        recipient = character:northernimperial_aversarinas_aagiokrata_41
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1025.5.5
	        recipient = character:westernimperial_aversarinas_aagiokrata_82
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1099.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_81
	    } 
	}

	set_global_variable = {
		name = aversarian_crown_veil_link
		value = scope:newly_created_artifact
	}
}

create_artifact_aversarian_crown_chain_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
	    name = artifact_aversarian_crown_chain_name
	    description = artifact_aversarian_crown_chain_desc
	    type = miscellaneous
	    visuals = pocket_pouch
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    template = gh_aversarian_crown_chain__template
	    modifier = artifact_monthly_prestige_5_modifier
	    modifier = artifact_domain_tax_same_faith_mult_2_modifier
	    save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
	    set_variable = { name = historical_unique_artifact value = yes }
	    set_variable = broken_aversarian_crown_piece
		set_variable = aversarian_crown_chain
	    save_scope_as = aversarian_crown_4
	}

	set_global_variable = {
		name = aversarian_crown_chain_link
		value = scope:newly_created_artifact
	}
}

create_artifact_aversarian_crown_diamond_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
	    name = artifact_aversarian_crown_diamond_name
	    description = artifact_aversarian_crown_diamond_desc
	    type = gemstone
	    visuals = diamond
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    template = gh_aversarian_crown_diamond__template
	    modifier = artifact_monthly_prestige_5_modifier
	    modifier = artifact_domain_tax_same_faith_mult_2_modifier
	    save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
	    set_variable = { name = historical_unique_artifact value = yes }
	    set_variable = broken_aversarian_crown_piece
		set_variable = aversarian_crown_diamond
	    save_scope_as = aversarian_crown_5

	    add_artifact_history = {
	        type = inherited
	        date = 64.11.12
	        recipient = character:aelarvisian_aerasodiax_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 86.3.1
	        recipient = character:aelarvisian_aerasodiax_4
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 93.11.14
	        recipient = character:aelarvisian_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 132.7.11
	        recipient = character:aelarvisian_aerasodiax_5
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 151.2.1
	        recipient = character:aeviaxian_aerasodiax_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 170.7.11
	        recipient = character:aelarvisian_aversarinas_aagiokrata_3
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 188.4.21
	        recipient = character:westernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 210.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_118
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 243.3.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_119
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 348.7.13
	        recipient = character:westernimperial_aversarinas_aagiokrata_111
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 439.5.4
	        recipient = character:westernimperial_aversarinas_aagiokrata_500
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 610.12.1
	        recipient = character:centralimperial_aversarinas_aagiokrata_33
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 725.5.29
	        recipient = character:centralimperial_aversarinas_aagiokrata_64
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 756.10.3
	        recipient = character:southernimperial_aversarinas_aagiokrata_1
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 892.3.17
	        recipient = character:northernimperial_aversarinas_aagiokrata_2
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 901.1.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_84
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 949.7.17
	        recipient = character:westernimperial_aversarinas_aagiokrata_116
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 952.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_115
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 954.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_114
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 987.4.3
	        recipient = character:westernimperial_aversarinas_aagiokrata_113
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1001.4.3
	        recipient = character:northernimperial_aversarinas_aagiokrata_41
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1025.5.5
	        recipient = character:westernimperial_aversarinas_aagiokrata_82
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1099.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_81
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1117.2.12
	        recipient = character:westernimperial_aversarinas_aagiokrata_80
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1120.3.14
	        recipient = character:westernimperial_aversarinas_aagiokrata_79
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 1172.3.14
	        recipient = character:apokiakas_aversarinas_aagiokratia_22
	    }	    
	}

	set_global_variable = {
		name = aversarian_crown_diamond_link
		value = scope:newly_created_artifact
	}
}

create_artifact_aversarian_crown_effect = {
    $OWNER$ = { save_scope_as = owner }

    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_aversariacrown_name
        description = artifact_aversariacrown_desc
        type = helmet
        visuals = pedestal_justinian
        wealth = scope:wealth
        quality = scope:quality
        decaying = no
        template = gh_aversarian_crown_template
        modifier = artifact_aversarian_crown_modifier
        modifier = artifact_vassal_limit_8_modifier
        modifier = artifact_monthly_prestige_8_modifier
        modifier = artifact_domain_tax_same_faith_mult_4_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = aversarian_crown
        add_artifact_modifier = artifact_emperors_crown_artifact_modifier
        save_scope_as = this_artifact
        set_artifact_name = artifact_emperors_crown_name
        set_artifact_description = artifact_emperors_crown_desc

        add_artifact_history = {
            type = inherited
            date = 64.11.12
            recipient = character:aelarvisian_aerasodiax_3
        }
        add_artifact_history = {
            type = inherited
            date = 86.3.1
            recipient = character:aelarvisian_aerasodiax_4
        }
        add_artifact_history = {
            type = inherited
            date = 93.11.14
            recipient = character:aelarvisian_aversarinas_aagiokrata_1
        }
        add_artifact_history = {
            type = inherited
            date = 132.7.11
            recipient = character:aelarvisian_aerasodiax_5
        }
        add_artifact_history = {
            type = inherited
            date = 151.2.1
            recipient = character:aeviaxian_aerasodiax_1
        }
        add_artifact_history = {
            type = inherited
            date = 170.7.11
            recipient = character:aelarvisian_aversarinas_aagiokrata_3
        }
        add_artifact_history = {
            type = inherited
            date = 188.4.21
            recipient = character:westernimperial_aversarinas_aagiokrata_1
        }
        add_artifact_history = {
            type = inherited
            date = 210.3.14
            recipient = character:westernimperial_aversarinas_aagiokrata_118
        }
        add_artifact_history = {
            type = inherited
            date = 243.3.3
            recipient = character:westernimperial_aversarinas_aagiokrata_119
        }
        add_artifact_history = {
            type = inherited
            date = 348.7.13
            recipient = character:westernimperial_aversarinas_aagiokrata_111
        }
	    add_artifact_history = {
	        type = inherited
	        date = 439.5.4
	        recipient = character:westernimperial_aversarinas_aagiokrata_500
	    }
	    add_artifact_history = {
	        type = inherited
	        date = 610.12.1
	        recipient = character:centralimperial_aversarinas_aagiokrata_33
	    }
        add_artifact_history = {
            type = inherited
            date = 725.5.29
            recipient = character:centralimperial_aversarinas_aagiokrata_64
        }
        add_artifact_history = {
            type = inherited
            date = 756.10.3
            recipient = character:southernimperial_aversarinas_aagiokrata_1
        }
        add_artifact_history = {
            type = inherited
            date = 892.3.17
            recipient = character:northernimperial_aversarinas_aagiokrata_2
        }
        add_artifact_history = {
            type = inherited
            date = 901.1.12
            recipient = character:westernimperial_aversarinas_aagiokrata_84
        }
        add_artifact_history = {
            type = inherited
            date = 949.7.17
            recipient = character:westernimperial_aversarinas_aagiokrata_116
        }
        add_artifact_history = {
            type = inherited
            date = 952.4.3
            recipient = character:westernimperial_aversarinas_aagiokrata_115
        }
        add_artifact_history = {
            type = inherited
            date = 954.4.3
            recipient = character:westernimperial_aversarinas_aagiokrata_114
        }
        add_artifact_history = {
            type = inherited
            date = 987.4.3
            recipient = character:westernimperial_aversarinas_aagiokrata_113
        }
        add_artifact_history = {
            type = inherited
            date = 1001.4.3
            recipient = character:northernimperial_aversarinas_aagiokrata_41
        }
        add_artifact_history = {
            type = inherited
            date = 1025.5.5
            recipient = character:westernimperial_aversarinas_aagiokrata_82
        }
        add_artifact_history = {
            type = inherited
            date = 1099.3.14
            recipient = character:westernimperial_aversarinas_aagiokrata_81
        }
    }
}

# Crown of Prawladsyl
create_crown_of_prawladsyl_artifact_effect = {
    $OWNER$ = { save_scope_as = owner }

    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_crownofprawladsyl_name
        description = artifact_crownofprawladsyl_desc
        type = helmet
        visuals = pedestal_crown_iron
        wealth = scope:wealth
        quality = scope:quality
        decaying = no
        template = gh_crown_of_prawlsadsyl_template
        #modifier = essen_crown_modifier # GH URGENT: Give a unique GH modifier
        modifier = artifact_court_grandeur_baseline_add_3_modifier
        modifier = artifact_knight_effectiveness_3_modifier
        modifier = artifact_stress_gain_2_modifier
        modifier = artifact_short_reign_duration_mult_4_modifier
        modifier = artifact_court_grandeur_baseline_add_4_modifier
        modifier = artifact_dynasty_opinion_3_modifier
        modifier = artifact_glory_hound_vassal_opinion_3_modifier
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = prawladsyl_crown
        save_scope_as = epic
    }
}

create_crown_of_iyrossi_artifact_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
	    name = artifact_theiyrossicrown_name
	    description = artifact_theiyrossicrown_desc
	    type = helmet
	    visuals = pedestal_crown_iron
	    wealth = scope:wealth
	    quality = scope:quality
	    decaying = no
	    template = gh_crown_of_prawlsadsyl_template # GH TODO: Generic crown template
	    modifier = artifact_iyrossi_crown_modifier
	}

	scope:newly_created_artifact = {
	    save_scope_as = epic
	    set_variable = { name = historical_unique_artifact value = yes }
	    set_variable = iyrossi_crown
	}
}


# Staffs

create_artifact_wizard_king_staff_effect = {
	# Get the character the artifact is for
	$OWNER$ = { save_scope_as = owner }
	$LOCATION$ = { save_scope_as = location }

	hidden_effect_new_object = {
		set_artifact_rarity_illustrious = yes

		scope:owner = {
			create_artifact = {
				name = artifact_staffofthewizardking_name
				description = placeholder #will be re-generated
				visuals = staff
				type = staff
				modifier = artifact_staffofthewizardking_modifier
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = newly_created_artifact
				history = {
					type = created_before_history
				}
			}
		}
		set_variable = {
			name = artifact_origin_location
			value = scope:location
		}

		scope:newly_created_artifact = {
			set_artifact_description = artifact_staffofthewizardking_desc
			set_variable = { name = historical_unique_artifact value = yes }
			set_variable = wizard_king_staff
			add_scaled_artifact_modifier_prowess_effect = yes
			add_spell_to_artifact_effect = {
				SPELL = global_var:firestorm
				ACQUISITION_TYPE = equipped
			}
			

			# Save the quality and wealth of this artifact in case we need to 	reference it later. 
			set_variable = {
				name = quality
				value = scope:quality
			}
			set_variable = {
				name = wealth
				value = scope:wealth
			}
		}
	}
	remove_variable = artifact_origin_location
}

create_artifact_staffofkatharitos_staff_effect = {
	# Get the character the artifact is for
	$OWNER$ = { save_scope_as = owner }
	$LOCATION$ = { save_scope_as = location }

	hidden_effect_new_object = {
		set_artifact_rarity_illustrious = yes
		get_artifact_wealth_effect = yes

		scope:owner = {
			create_artifact = {
				name = artifact_staffofkatharitos_name
				description = placeholder #will be re-generated
				visuals = staff
				type = staff
				modifier = artifact_staffofkatharitos_modifier
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = newly_created_artifact
				history = {
					type = created_before_history
				}
			}
		}
		set_variable = {
			name = artifact_origin_location
			value = scope:location
		}

		scope:newly_created_artifact = {
			set_artifact_description = artifact_staffofkatharitos_desc
			set_variable = { name = historical_unique_artifact value = yes }
			set_variable = staffofkatharitos
			add_spell_to_artifact_effect = {
				SPELL = global_var:mending
				ACQUISITION_TYPE = equipped
			}
			add_spell_to_artifact_effect = {
				SPELL = global_var:arcane_meditation
				ACQUISITION_TYPE = equipped
			}
			

			add_scaled_artifact_modifier_prowess_effect = yes
			

			# Save the quality and wealth of this artifact in case we need to 	reference it later. 
			set_variable = {
				name = quality
				value = scope:quality
			}
			set_variable = {
				name = wealth
				value = scope:wealth
			}
		}
	}
	remove_variable = artifact_origin_location
}

create_artifact_aersanonstaff1_staff_effect = {
	# Get the character the artifact is for
	$OWNER$ = { save_scope_as = owner }
	$LOCATION$ = { save_scope_as = location }

	hidden_effect_new_object = {
		set_artifact_rarity_illustrious = yes
		get_artifact_wealth_effect = yes

		scope:owner = {
			create_artifact = {
				name = artifact_aersanonstaff1_name
				description = placeholder #will be re-generated
				visuals = staff
				type = staff
				modifier = artifact_aersanonstaff1_modifier
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = newly_created_artifact
				history = {
					type = created_before_history
				}
			}
		}
		set_variable = {
			name = artifact_origin_location
			value = scope:location
		}

		scope:newly_created_artifact = {
			set_artifact_description = artifact_aersanonstaff1_desc
			set_variable = { name = historical_unique_artifact value = yes }
			set_variable = aersanonstaff1
			add_scaled_artifact_modifier_prowess_effect = yes
			

			# Save the quality and wealth of this artifact in case we need to 	reference it later. 
			set_variable = {
				name = quality
				value = scope:quality
			}
			set_variable = {
				name = wealth
				value = scope:wealth
			}
		}
	}
	remove_variable = artifact_origin_location
}

create_artifact_aersanonstaff2_staff_effect = {
	# Get the character the artifact is for
	$OWNER$ = { save_scope_as = owner }
	$LOCATION$ = { save_scope_as = location }

	hidden_effect_new_object = {
		set_artifact_rarity_illustrious = yes
		get_artifact_wealth_effect = yes

		scope:owner = {
			create_artifact = {
				name = artifact_aersanonstaff2_name
				description = placeholder #will be re-generated
				visuals = staff
				type = staff
				modifier = artifact_aersanonstaff2_modifier
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = newly_created_artifact
				history = {
					type = created_before_history
				}
			}
		}
		set_variable = {
			name = artifact_origin_location
			value = scope:location
		}

		scope:newly_created_artifact = {
			set_artifact_description = artifact_aersanonstaff2_desc
			set_variable = { name = historical_unique_artifact value = yes }
			set_variable = aersanonstaff2
			
			add_scaled_artifact_modifier_prowess_effect = yes
			
			# Save the quality and wealth of this artifact in case we need to 	reference it later. 
			set_variable = {
				name = quality
				value = scope:quality
			}
			set_variable = {
				name = wealth
				value = scope:wealth
			}
		}
	}
	remove_variable = artifact_origin_location
}

create_artifact_sculpture_mask_of_ankepy_ix_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_sculpture_mask_of_ankepy_ix_name
		description = artifact_sculpture_mask_of_ankepy_ix_description
		type = sculpture
		template = gh_burial_mask_of_ankepy_ix_template
		visuals = reliquary
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_burial_mask_of_ankepy_ix_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = burial_mask_of_ankepy_ix
		save_scope_as = epic
		save_scope_value_as = {
			name = burial_mask_of_ankepy_ix
			value = yes
		}
	}
}

create_artifact_rehdyia_uddayir_spear_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_rehdyia_uddayir_spear_name
		description = artifact_rehdyia_uddayir_spear_description
		type = pedestal
		visuals = spear_court
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_rehdyia_uddayir_spear_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = rehdyia_uddayir_spear
		save_scope_as = epic
	}
}

create_artifact_necklace_of_the_baarilka_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_necklace_of_the_baarilka_name
		description = artifact_necklace_of_the_baarilka_description
		visuals = necklace
		type = necklace
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_necklace_of_the_baarilka_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = necklace_of_the_baarilka
		save_scope_as = epic
		add_artifact_history = {
			type = inherited
			date = 1251.3.14
			recipient = character:kawoch_mogowai_9
		}
	}
}

create_artifact_spear_of_eshwo_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_spear_of_eshwo_name
		description = artifact_spear_of_eshwo_description
		visuals = spear_court
		type = pedestal
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_spear_of_eshwo_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = spear_of_eshwo
		save_scope_as = epic
	}
}

create_artifact_skull_of_kayoba_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_skull_of_kayoba_name
		description = artifact_skull_of_kayoba_description
		visuals = skull_visuals
		type = pedestal
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_skull_of_kayoba_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skull_of_kayoba
		save_scope_as = epic
	}
}

create_artifact_olani_seal_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_olani_seal_name
		description = artifact_olani_seal_description
		visuals = small_box
		type = pedestal
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_olani_seal_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = olani_seal
		save_scope_as = epic
	}
}

create_artifact_belar_seal_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_belar_seal_name
		description = artifact_belar_seal_description
		visuals = small_box
		type = box
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_belar_seal_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = belar_seal
		save_scope_as = epic
	}
}

create_artifact_zalreb_seal_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_zalreb_seal_name
		description = artifact_zalreb_seal_description
		visuals = small_box
		type = pedestal
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_zalreb_seal_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = zalreb_seal
		save_scope_as = epic
	}
}

create_artifact_mesir_seal_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_mesir_seal_name
		description = artifact_mesir_seal_description
		visuals = small_box
		type = pedestal
		template = general_unique_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history #Placeholder
		}
		modifier = artifact_mesir_seal_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = mesir_seal
		save_scope_as = epic
	}
}

#create_artifact_dragonskull_effect = { # Now handled through the vanilla create_artifact_wall_skull effect
#    $OWNER$ = { save_scope_as = owner }
#    set_artifact_rarity_illustrious = yes
#
#    create_artifact = {
#        name = artifact_dragonskull_name
#        description = artifact_dragonskull_desc
#        type = animal_skull
#        visuals = animal_trophy
#        wealth = scope:wealth
#        quality = scope:quality
#        modifier = artifact_dragonskull_modifier
#        save_scope_as = newly_created_artifact
#    }
#    scope:newly_created_artifact = {
#        set_variable = { name = historical_unique_artifact value = yes }
#        save_scope_as = epic
#    }
#}


create_artifact_boneoftheworldeater_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_boneoftheworldeater_name
        description = artifact_boneoftheworldeater_desc
        type = chest
        visuals = chest
        wealth = scope:wealth
        quality = scope:quality
        decaying = no
        template = general_unique_template
        modifier = artifact_boneoftheworldeater_modifier
        save_scope_as = newly_created_artifact
    }
    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        save_scope_as = epic
    }
}

create_artifact_crimsonseal_effect = {
	$OWNER$ = { save_scope_as = owner }
	create_artifact = {
        name = artifact_crimsonseal_name
        description = artifact_crimsonseal_description
        type = miscellaneous
        visuals = pocket_fancy_case
        wealth = scope:wealth
        quality = scope:quality
        decaying = no
        template = gh_crimson_seal_template
        modifier = artifact_crimsonseal_modifier
        history = {
			type = created_before_history
		}
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = crimsonseal
        save_scope_as = epic

        add_artifact_aspect_modifier_effect = { NAME = dark VALUE = 2 }
    }
}

create_artifact_kartharaddiman_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_kartharaddimanautomata_name
        description = artifact_kartharaddimanautomata_desc
        type = sculpture
        visuals = statue
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_kartharaddimanautomata_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        save_scope_as = epic
    }
}

create_artifact_kartharaddi_musicautomata_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_kartharaddimusicautomata_name
        description = artifact_kartharaddimusicautomata_desc
        type = sculpture
        visuals = statue
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_kartharaddimusicautomata_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        save_scope_as = epic
    }
}

create_artifact_kartharaddi_dancingautomata_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_kartharaddidancingautomata_name
        description = artifact_kartharaddidancingautomata_desc
        type = sculpture
        visuals = statue
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_kartharaddidancingautomata_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = { name = dancing_automata value = yes }
        save_scope_as = epic
    }
}

create_artifact_kartharaddi_deadlydancingautomata_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_deadlykartharaddimusicautomata_name
        description = artifact_deadlykartharaddimusicautomata_desc
        type = sculpture
        visuals = statue
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_deadlykartharaddimusicautomata_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        set_variable = { name = dancing_automata value = yes }
        save_scope_as = epic
    }
}

create_artifact_automaticgemlion_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_automaticgemlion_name
        description = artifact_automaticgemlion_desc
        type = cabinet
        visuals = sculpture_cabinet_pentapyrgion
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_automaticgemlion_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        save_scope_as = epic
    }
}

create_artifact_brokenavianautomata_effect = {
    $OWNER$ = { save_scope_as = owner }
    set_artifact_rarity_illustrious = yes

    create_artifact = {
        name = artifact_brokenavianautomata_name
        description = artifact_brokenavianautomata_desc
        type = pedestal
        visuals = riches
        wealth = scope:wealth
        quality = scope:quality
        template = general_unique_template
        modifier = artifact_brokenavianautomata_modifier
        save_scope_as = newly_created_artifact
    }

    scope:newly_created_artifact = {
        set_variable = { name = historical_unique_artifact value = yes }
        save_scope_as = epic
    }
}

# Relics

create_artifact_pedestal_wardenite_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = wardenism_seal
					}
				}
			}
			save_scope_value_as = {
				name = wardenism_relic_name
				value = flag:seal
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = wardenism_banner
					}
				}
			}
			save_scope_value_as = {
				name = wardenism_relic_name
				value = flag:banner
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = wardenism_crown
					}
				}
			}
			save_scope_value_as = {
				name = wardenism_relic_name
				value = flag:crown
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = wardenism_sword
					}
				}
			}
			save_scope_value_as = {
				name = wardenism_relic_name
				value = flag:sword
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:wardenism_relic_name
			scope:wardenism_relic_name = flag:banner
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_banner_wardenism_name
			description = artifact_banner_wardenism_description
			type = wall_big
			template = gh_wardenism_artifact_template
			visuals = banner_islam
			visuals_source = title:e_central_mamuramat
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:wardenism_relic_name
			scope:wardenism_relic_name = flag:seal
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_seal_wardenism_name
			description = artifact_seal_wardenism_description
			type = pedestal
			template = gh_wardenism_artifact_template
			visuals = pedestal_wardenite_relic
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}	
	else_if = {
		limit = {
			exists = scope:wardenism_relic_name
			scope:wardenism_relic_name = flag:crown
		}
		create_artifact = {	
			name = artifact_crown_wardenism_name
			description = artifact_crown_wardenism_description
			type = pedestal
			template = gh_wardenism_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:wardenism_relic_name
			scope:wardenism_relic_name = flag:sword
		}
		create_artifact = {	
			name = artifact_wall_sword_wardenism_name
			description = artifact_wall_sword_wardenism_description
			type = pedestal
			visuals = wall_sarradonian_sword
			wealth = scope:wealth
			quality = scope:quality
			template = gh_wall_sword_wardenism_template
			history = {
				type = created_before_history
			}
			modifier = artifact_wall_sword_wardenism_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:wardenite
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		if = {
			limit = {
				exists = scope:wardenism_relic_name
				scope:wardenism_relic_name = flag:seal
			}
			set_variable = wardenism_seal
		}
		else_if = {
			limit = {
				exists = scope:wardenism_relic_name
				scope:wardenism_relic_name = flag:banner
			}
			set_variable = wardenism_banner
		}
		else_if = {
			limit = {
				exists = scope:wardenism_relic_name
				scope:wardenism_relic_name = flag:crown
			}
			set_variable = wardenism_crown
		}
		else_if = {
			limit = {
				exists = scope:wardenism_relic_name
				scope:wardenism_relic_name = flag:sword
			}
			set_variable = wardenism_sword
		}
		add_scaled_artifact_modifier_devotion_effect = yes
		save_scope_as = epic
	}
}

create_artifact_pedestal_amsari_relic_effect_hist = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	get_artifact_quality_effect = yes
	get_artifact_wealth_effect = yes

	# Identify which relic it is
	random_list = {
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = amsari_staff
					}
				}
			}
			save_scope_value_as = {
				name = amsari_relic_name
				value = flag:staff
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = amsari_sandals
					}
				}
			}
			save_scope_value_as = {
				name = amsari_relic_name
				value = flag:sandals
			}
		}
		10 = {
			trigger = {
				NOT = {
					any_artifact = {
						has_variable = amsari_cloak
					}
				}
			}
			save_scope_value_as = {
				name = amsari_relic_name
				value = flag:cloak
			}
		}
		1 = {
			# Fallback
			trigger = {
				any_artifact = { has_variable = amsari_staff }
				any_artifact = { has_variable = amsari_sandals }
				any_artifact = { has_variable = amsari_cloak }
			}
			save_scope_value_as = {
				name = amsari_relic_name
				value = flag:ante_apocalyptic_prophecy
			}
		}
	}

	# Create the artifact
	if = {
		limit = {
			exists = scope:amsari_relic_name
			scope:amsari_relic_name = flag:staff
		}
		set_artifact_rarity_illustrious = yes
		create_artifact = {	
			name = artifact_staff_amsari_name
			description = artifact_staff_amsari_description
			type = pedestal
			template = gh_amsari_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:amsari_relic_name
			scope:amsari_relic_name = flag:sandals
		}
		set_artifact_rarity_famed = yes
		create_artifact = {	
			name = artifact_sandals_amsari_name
			description = artifact_sandals_amsari_description
			type = pedestal
			template = gh_amsari_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else_if = {
		limit = {
			exists = scope:amsari_relic_name
			scope:amsari_relic_name = flag:cloak
		}
		set_artifact_rarity_famed = yes
		create_artifact = {	
			name = artifact_cloak_amsari_name
			description = artifact_cloak_amsari_description
			type = pedestal
			template = gh_amsari_artifact_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}
	else = {
		random_list = {
			15 = {
				set_artifact_rarity_masterwork = yes 
			}
			10 = {
				set_artifact_rarity_famed = yes
			}
			5 = {
				set_artifact_rarity_illustrious = yes
			}
		}
		create_artifact = {	
			name = artifact_ante_apocalyptic_prophecy_amsari_name
			description = artifact_ante_apocalyptic_prophecy_amsari_description
			type = pedestal
			template = gh_amsari_artifact_nonunique_template
			visuals = reliquary
			wealth = scope:wealth
			quality = scope:quality
			history = {
				type = created_before_history
			}
			modifier = artifact_placeholder_modifier
			save_scope_as = newly_created_artifact
		}
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = relic
			value = flag:amsari
		}
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		add_artifact_modifier = artifact_monthly_prestige_penalty_modifier #overwrite default creation modifier
		if = {
			limit = {
				exists = scope:staff
				scope:amsari_relic_name = flag:seal
			}
			set_variable = wardenism_seal
		}
		else_if = {
			limit = {
				exists = scope:amsari_relic_name
				scope:amsari_relic_name = flag:sandals
			}
			set_variable = wardenism_banner
		}
		else_if = {
			limit = {
				exists = scope:amsari_relic_name
				scope:amsari_relic_name = flag:cloak
			}
			set_variable = wardenism_crown
		}
		else_if = {
			limit = {
				exists = scope:amsari_relic_name
				scope:amsari_relic_name = flag:ante_apocalyptic_prophecy
			}
			set_variable = wardenism_sword
		}
		add_scaled_artifact_modifier_devotion_effect = yes
		save_scope_as = epic
	}
}

create_artifact_pedestal_branch_relic_general_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = branch_name
		value = flag:general
	}

	# Create the artifact
	create_artifact = {	
		name = artifact_pedestal_branch_name
		description = artifact_pedestal_branch_description
		type = pedestal
		template = branch_general_template
		visuals = pedestal_branch_relic_hinduism
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = {	#This is needed to determine what religion the branch will work for.
			name = relic_religion
			value = $RELIGION$
		}
		set_variable = { name = historical_unique_artifact value = yes }
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_2_scaled_artifact_modifier_devotion_effect = yes
			
		}
		else = {
			add_scaled_artifact_modifier_devotion_effect = yes
		}
		save_scope_as = epic
	}
}

create_artifact_spear_thaxaon_spear_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_spear_thaxaon_name
		description = placeholder
		visuals = gh_thaxaon_spear_visuals
		type = spear 
		modifier = artifact_placeholder_modifier
		history = {
			type = created
			date = 1067.7.11
			actor = character:westernimperial_aversarinas_aagiokrata_8
			recipient = character:westernimperial_aversarinas_aagiokrata_8
		}
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = spear_thaxaon
		set_artifact_feature = shaft_wood_ebony
		set_artifact_feature = head_metal_wrought_iron
		set_artifact_feature = decoration_material_inlay_electrum
		set_artifact_feature = head_decoration_religious_motifs
		add_scaled_artifact_modifier_prowess_effect = yes
		add_scaled_artifact_modifier_prestige_effect = yes
		set_variable = {
			name = prominent_wielder
			value = character:westernimperial_aversarinas_aagiokrata_16
		}
		set_artifact_description = artifact_spear_thaxaon_jaxor_desc
		add_artifact_history = {
			type = inherited
			date = 1183.9.24
			recipient = character:westernimperial_aversarinas_aagiokrata_14
		}
		add_artifact_history = {
			type = inherited
			date = 1200.3.1
			recipient = character:westernimperial_aversarinas_aagiokrata_16
		}
		add_artifact_history = {
			type = conquest
			date = 1211.1.6
			recipient = character:centralimperial_aeschraes_aagiokrata_1
		}
		add_artifact_history = {
			type = stolen
			date = 1229.12.12
			recipient = character:southernimperial_aversarian_gorassos_1
		}
		save_scope_as = epic
	}
}

create_artifact_glass_sword_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_glass_sword_name
		description = artifact_glass_sword_desc
		visuals = gh_glass_sword_visuals
		type = sword
		history = {
			type = created
			date = 1177.9.30
			actor = character:zelkavani_sunarwei_aagiokrata_1
			recipient = character:zelkavani_sunarwei_aagiokrata_1
			location = province:687
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_glass_sword_template
		modifier = artifact_prowess_8_modifier
		modifier = artifact_enemy_hard_casualty_modifier_4_modifier
		modifier = artifact_monthly_prestige_3_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = glass_sword
		set_variable = {
			name = prominent_creator
			value = character:zelkavani_sunarwei_aagiokrata_1
		}
		set_variable = {
			name = prominent_wielder
			value = character:easternimperial_aironoian_aagiokrata_27
		}
		set_artifact_description = artifact_glass_sword_xipheos_desc
		add_artifact_history = {
			type = conquest
			date = 1199.8.26
			recipient = character:easternimperial_aironoian_aagiokrata_27
		}
		add_artifact_history = {
			type = inherited
			date = 1200.2.27
			recipient = character:easternimperial_aironoian_aagiokrata_15
		}
		add_artifact_history = {
			type = inherited
			date = 1244.10.12
			recipient = character:easternimperial_aironoian_aagiokrata_3
		}
		save_scope_as = glass_sword
	}
}

create_artifact_jajak_mask_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_jajak_mask_name
		description = artifact_jajak_mask_desc
		visuals = gh_jajak_mask_visuals
		type = helmet
		history = {
			type = created
			date = 1191.10.7
			actor = character:kuridorig_iek_otached_1
			recipient = character:kuridorig_iek_otached_1
			location = province:1310 # Nugovi
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_jajak_mask_template
		modifier = artifact_jajak_mask_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = jajak_mask
		set_artifact_description = artifact_jajak_mask_lost_desc
		save_scope_as = epic
	}
}

create_artifact_dagun_mask_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_dagun_mask_name
		description = artifact_dagun_mask_desc
		visuals = gh_dagun_mask_visuals
		type = helmet
		history = {
			type = created
			date = 1176.1.1
			actor = character:kuridorig_iek_otached_5
			recipient = character:kuridorig_iek_otached_5
			location = province:3257 # Tahligay
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = yes
		template = gh_dagun_mask_template
		modifier = artifact_dagun_mask_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = dagun_mask
		set_variable = {
			name = prominent_wielder
			value = character:kuridorig_iek_otached_5
		}
		set_artifact_description = artifact_dagun_mask_fall_desc
		add_artifact_history = {
			type = inherited
			date = 1199.11.23
			recipient = character:kuridorig_iek_otached_7
		}
		add_artifact_history = {
			type = conquest
			date = 1212.7.27
			recipient = character:easternimperial_aeschraes_aagiokrata_1
		}
		save_scope_as = epic
	}
}

create_artifact_sun_piercer_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_sun_piercer_name
		description = artifact_sun_piercer_desc
		visuals = gh_sun_piercer_visuals
		type = spear
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_sun_piercer_template
		modifier = artifact_sun_piercer_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sun_piercer
		set_variable = {
			name = prominent_wielder
			value = character:carsavisians_lifepath_11
		}
		set_variable = {
			name = prominent_foe
			value = character:lich_culture_rejection_5
		}
		set_artifact_description = artifact_sun_piercer_battle_desc
		add_artifact_history = {
			type = inherited
			date = 339.3.21
			recipient = character:carsavisians_lifepath_11
		}
		add_artifact_history = {
			type = inherited
			date = 1153.9.5
			recipient = character:carsavisians_lifepath_2
		}
		add_artifact_history = {
			type = inherited
			date = 1200.3.1
			recipient = character:carsavisians_lifepath_3
		}
		add_artifact_history = {
			type = inherited
			date = 1233.12.25
			recipient = character:carsavisians_lifepath_4
		}
		add_artifact_history = {
			type = inherited
			date = 1245.12.25
			recipient = character:carsavisians_lifepath_6
		}
		add_artifact_history = {
			type = conquest
			date = 1251.10.13
			recipient = character:voluntic_partic_10
		}
		save_scope_as = sun_piercer
	}
}

create_artifact_skymothers_tear_effect = { # Skymother's Tear
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_skymothers_tear_name
		description = artifact_skymothers_tear_desc
		visuals = gh_skymothers_tear_visuals
		type = thumb_ring
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_skymothers_tear_template
		modifier = artifact_skymothers_tear_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = skymothers_tear
		set_variable = {
			name = prominent_wielder
			value = character:sarminians_salacad_3
		}
		set_artifact_description = artifact_skymothers_tear_rezpendia_desc
		add_artifact_history = { # Rezpendia's mother
			type = inherited
			date = 1214.4.16
			recipient = character:sarminians_salacad_4
		}
		add_artifact_history = { # Rezpendia
			type = inherited
			date = 1238.11.8
			recipient = character:sarminians_salacad_3
		}
		add_artifact_history = { # Arite
			type = given
			date = 1252.2.3
			recipient = character:sarminians_salacad_2
		}
		save_scope_as = skymothers_tear
	}

	set_global_variable = {
		name = skymothers_tear_link
		value = scope:newly_created_artifact
	}
}

create_artifact_consopite_effigy_effect = { # Consopite Effigy
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_consopite_effigy_name
		description = artifact_consopite_effigy_desc
		visuals = gh_consopite_effigy_visuals
		type = effigy
		history = { type = created_before_history }
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_consopite_effigy_template
		modifier = artifact_consopite_effigy_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = consopite_effigy
		if = {
			limit = { scope:owner = { has_character_flag = has_mayikprolollan_loot } }
			add_artifact_history = {
				type = taken_in_siege
				date = 1244.5.28
				recipient = scope:owner
				location = province:4322
			}
		}
	}
}

create_artifact_achromatic_mirror_effect = { # Achromatic Mirror
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_achromatic_mirror_name
		description = artifact_achromatic_mirror_desc
		visuals = gh_achromatic_mirror_visuals
		type = mirror
		history = { type = created_before_history }
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_achromatic_mirror_template
		modifier = artifact_achromatic_mirror_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = achromatic_mirror
		if = {
			limit = { scope:owner = { has_character_flag = has_mayikprolollan_loot } }
			add_artifact_history = {
				type = taken_in_siege
				date = 1244.5.28
				recipient = scope:owner
				location = province:4322
			}
		}
	}
}

create_artifact_vorpal_blade_effect = { # Vorpal Blade
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = artifact_vorpal_blade_name
		description = artifact_vorpal_blade_desc
		visuals = gh_vorpal_blade_visuals
		type = useless_sword
		history = { type = created_before_history }
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_vorpal_blade_template
		modifier = artifact_vorpal_blade_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = vorpal_blade
		if = {
			limit = { scope:owner = { has_character_flag = has_mayikprolollan_loot } }
			add_artifact_history = {
				type = taken_in_siege
				date = 1244.5.28
				recipient = scope:owner
				location = province:4322
			}
		}
	}
}

create_artifact_black_legion_standard_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_black_legion_standard_name
		description = artifact_black_legion_standard_desc
		visuals = gh_black_legion_standard_visuals
		type = wall_big
		history = {
			type = created
			date = 1226.5.15
			recipient = character:apokiakas_aversarinas_aagiokratia_34
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = yes
		template = gh_black_legion_standard_template
		modifier = artifact_black_legion_standard_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_legion_standard
		set_variable = {
			name = governor_ioldon
			value = character:apokiakas_aversarinas_aagiokratia_32
		}
		set_variable = {
			name = black_sun
			value = character:apokiakas_aversarinas_aagiokratia_23
		}
		set_artifact_description = artifact_black_legion_standard_battle_desc
		add_artifact_history = {
			type = inherited
			date = 1251.10.11
			recipient = character:apokiakas_aversarinas_aagiokratia_35
		}
		save_scope_as = black_legion_standard
	}
}

create_artifact_staff_of_the_high_seer_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_staff_of_the_high_seer_name
		description = artifact_staff_of_the_high_seer_desc
		visuals = gh_staff_of_the_high_seer_visuals
		type = staff
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_staff_of_the_high_seer_template
		modifier = artifact_staff_of_the_high_seer_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_of_the_high_seer

		add_spell_to_artifact_effect = {
			SPELL = global_var:wall_of_twisted_thorns
			ACQUISITION_TYPE = equipped
		}

		add_artifact_history = {
			type = inherited
			date = 1225.6.23
			recipient = character:voluntic_partic_7
		}
		save_scope_as = epic
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = blood VALUE = 2 }
		add_artifact_aspect_modifier_effect = { NAME = ethereal VALUE = 1 }
	}
}

create_artifact_bane_star_ring_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_bane_star_ring_name
		description = artifact_bane_star_ring_desc
		visuals = gh_bane_star_ring_visuals
		type = regalia
		history = {
			type = created
			date = 1200.3.1
			recipient = character:sarridians_aversarinas_aagiokrata_2
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_bane_star_ring_template
		modifier = artifact_bane_star_ring_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = bane_star_ring
		set_variable = {
			name = ring_bearer
			value = character:sarridians_aversarinas_aagiokrata_2
		}
		set_artifact_description = artifact_bane_star_ring_battle_desc
		add_artifact_history = {
			type = inherited
			date = 1247.9.3
			recipient = character:apokiakas_aversarinas_aagiokratia_35
		}
		save_scope_as = bane_star_ring
		add_artifact_aspect_modifier_effect = { NAME = death VALUE = 1 }
		add_artifact_aspect_modifier_effect = { NAME = stone VALUE = 1 }
	}
}

create_artifact_black_gold_standard_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_black_gold_standard_name
		description = artifact_black_gold_standard_desc
		visuals = gh_black_gold_standard_visuals
		type = wall_big
		history = {
			type = created
			date = 1218.1.11
			recipient = character:salisians_lifepath_15
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = yes
		template = gh_black_gold_standard_template
		modifier = artifact_black_gold_standard_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = black_gold_standard
		set_variable = {
			name = high_king_dendon
			value = character:voyagen_lifepath_22
		}
		set_variable = {
			name = teryn_valadec
			value = character:salisians_lifepath_2
		}
		set_artifact_description = artifact_black_gold_standard_battle_desc
		add_artifact_history = {
			type = inherited
			date = 1221.6.1
			recipient = character:salisians_lifepath_16
		}
		add_artifact_history = {
			type = inherited
			date = 1227.10.19
			recipient = character:salisians_lifepath_4
		}
		save_scope_as = black_gold_standard
	}
}

create_artifact_atracorde_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_atracorde_name
		description = artifact_atracorde_desc
		visuals = gh_atracorde_visuals
		type = sword
		history = {
			type = created
			date = 1218.1.11
			recipient = character:salisians_lifepath_2
			location = province:1666 # Deleceu
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_atracorde_template
		modifier = artifact_atracorde_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = atracorde
		set_variable = {
			name = prominent_wielder
			value = character:salisians_lifepath_2
		}

		set_artifact_description = artifact_atracorde_battle_desc

		save_scope_as = atracorde
	}
}

create_artifact_abyssal_prism_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_abyssal_prism_name
		description = artifact_abyssal_prism_cultist_desc
		visuals = gh_abyssal_prism_visuals
		type = prism
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_abyssal_prism_template
		modifier = artifact_abyssal_prism_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = abyssal_prism
		add_artifact_history = {
			type = inherited
			date = 1240.2.6
			recipient = character:redlander_flame_eternal_1
		}
		add_artifact_history = {
			type = stolen
			date = 1253.8.9
			recipient = character:tretosai_aversarinas_aagiokrata_2
		}

		set_artifact_description = artifact_abyssal_prism_noncultist_desc

		save_scope_as = abyssal_prism
		
		add_artifact_aspect_modifier_effect = { NAME = dark VALUE = 6 } ## Currently starting with a non-redlander, so setting it at the non-redlander value.
		set_variable = {
			name = mana_capacity
			value = -1
		}
		set_variable = {
			name = stored_mana
			value = 2125	# Already has a crapton stored from historical use
		}
	}
}

create_artifact_gh_tarfals_staff_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	# Create the artifact
	create_artifact = {
		name = artifact_gh_tarfals_staff_name
		description = artifact_gh_tarfals_staff_description
		visuals = gh_tarfals_staff_visuals
		type = regalia
		rarity = illustrious
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		template = gh_tarfals_staff_template
		modifier = artifact_gh_tarfals_staff_modifier
		save_scope_as = newly_created_artifact
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = staff_of_tarfal
		add_artifact_history = {
			type = discovered
			date = 34.1.1
			recipient = character:nathanalmic_nattanan_6
		}
	
		add_artifact_history = {
			type = discovered
			date = 534.3.9
			recipient = character:nathanalmic_nattanan_13
		}
		
		add_artifact_history = {
			type = inherited
			date = 588.7.18
			recipient = character:nathanalmic_nattanan_14
		}
		
		add_artifact_history = {
			type = inherited
			date = 642.9.16
			recipient = character:nathanalmic_nattanan_15
		}
		
		add_artifact_history = {
			type = inherited
			date = 694.4.2
			recipient = character:nathanalmic_nattanan_16
		}
		
		add_artifact_history = {
			type = inherited
			date = 746.11.20
			recipient = character:nathanalmic_nattanan_17
		}
		
		add_artifact_history = {
			type = inherited
			date = 799.6.7
			recipient = character:nathanalmic_nattanan_18
		}
		
		add_artifact_history = {
			type = inherited
			date = 851.8.14
			recipient = character:nathanalmic_nattanan_19
		}
		
		add_artifact_history = {
			type = inherited
			date = 904.10.1
			recipient = character:nathanalmic_nattanan_20
		}
		
		add_artifact_history = {
			type = inherited
			date = 958.3.23
			recipient = character:nathanalmic_nattanan_21
		}
		
		add_artifact_history = {
			type = inherited
			date = 1011.7.9
			recipient = character:nathanalmic_nattanan_22
		}
		
		add_artifact_history = {
			type = inherited
			date = 1065.12.15
			recipient = character:nathanalmic_nattanan_23
		}
		
		add_artifact_history = {
			type = inherited
			date = 1119.5.30
			recipient = character:nathanalmic_nattanan_24
		}
		
		add_artifact_history = {
			type = inherited
			date = 1172.9.11
			recipient = character:nathanalmic_nattanan_25
		}
			
		add_artifact_history = {
			type = inherited
			date = 1217.10.1
			recipient = character:nathanalmic_nattanan_3
			location = province:8406 #Yaza Zin
		}
		
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 10 }
		add_artifact_aspect_modifier_effect = { NAME = stone VALUE = 5 }
		set_variable = {
			name = mana_capacity
			value = -1
		}
		set_variable = {
			name = stored_mana
			value = 1500    # Tarfal imbued the staff with a lot of power
		}
	}
}

create_artifact_gh_jerniems_bow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	# Create the artifact
	create_artifact = {
		name = artifact_gh_jerniems_bow_name
		description = artifact_gh_jerniems_bow_description
		visuals = gh_jerniems_bow_visuals
		type = bow
		rarity = illustrious
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		template = gh_jerniems_bow_template
		modifier = artifact_gh_jerniems_bow_modifier
		save_scope_as = newly_created_artifact
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		add_artifact_history = {
			type = inherited
			date = 1217.10.1
			recipient = character:katharnalmic_kyawkan_4
			location = province:6555
		}
		
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 10 }
		add_artifact_aspect_modifier_effect = { NAME = stone VALUE = 5 }
	}
}


create_artifact_gh_spear_of_korlacu_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	# Create the artifact
	create_artifact = {
		name = artifact_gh_spear_of_korlacu_name
		description = artifact_gh_spear_of_korlacu_description
		visuals = gh_spear_of_korlacu_visuals
		type = spear
		rarity = illustrious
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		template = gh_spear_of_korlacu_template
		modifier = artifact_gh_spear_of_korlacu_modifier
		save_scope_as = newly_created_artifact
	}
	scope:newly_created_artifact = {
		set_variable = spear_of_korlacu
		add_artifact_history = {
			type = discovered
			date = 1230.1.1
			recipient = character:korlenalmic_korlacan_1
		}
		
		add_artifact_history = {
			type = inherited
			date = 1252.1.1
			recipient = character:korlenalmic_korlacan_4
			location = province:8876
		}
		
		add_artifact_aspect_modifier_effect = { NAME = fire VALUE = 10 }
		add_artifact_aspect_modifier_effect = { NAME = metal VALUE = 5 }
		set_variable = {
			name = mana_capacity
			value = -1
		}
		set_variable = {
			name = stored_mana
			value = 1000    # Korlacu imbued the spear with a lot of power
		}
	}
}

create_artifact_adekaday_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_adekaday_name
		description = artifact_adekaday_desc
		visuals = gh_adekaday_visuals
		type = sword
		history = {
			type = created
			date = 1237.5.6
			actor = character:lihakan_dahala_1 # Dahasay
			recipient = character:banwagul_dahala_1 # Nalaykan
			location = province:6650 # Ilanila
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_adekaday_template
		modifier = artifact_adekaday_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = adekaday
		set_variable = {
			name = prominent_wielder
			value = character:banwagul_dahala_1
		}
		set_variable = {
			name = blade_forger
			value = character:lihakan_dahala_1
		}
		set_variable = {
			name = current_bearer
			value = character:banwagul_dahala_16
		}	
		set_artifact_description = artifact_adekaday_battle_desc
		add_artifact_history = {
			type = inherited
			date = 1242.12.21
			recipient = character:banwagul_dahala_16
		}
		save_scope_as = adekaday
	}
}

create_artifact_kenaranek_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_kenaranek_name
		description = artifact_kenaranek_desc
		visuals = gh_kenaranek_visuals
		type = spear
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_kenaranek_template
		modifier = artifact_kenaranek_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = kenaranek
		set_variable = {
			name = prominent_wielder
			value = character:dayarka_dahala_1
		}
		set_artifact_description = artifact_kenaranek_battle_desc

		add_artifact_history = {
			type = inherited
			date = 1246.1.6
			recipient = character:dayarka_dahala_2
		}
		save_scope_as = kenaranek
	}
}

create_artifact_kedatals_talon_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = artifact_kedatals_talon_name
		description = artifact_kedatals_talon_desc
		visuals = gh_kedatals_talon_visuals
		type = miscellaneous
		history = {
			type = created
			date = 1244.12.13
			actor = character:kedari_saldakas_1 # Habwi
			recipient = character:kedari_saldakas_1 # Habwi
			location = province:7378 # Purtam
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_kedatals_talon_template
		modifier = artifact_kedatals_talon_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = kedatals_talon
		set_variable = {
			name = prominent_wielder
			value = character:kedari_saldakas_1
		}
		set_artifact_description = artifact_kedatals_talon_battle_desc

		save_scope_as = kedatals_talon
		add_artifact_aspect_modifier_effect = { NAME = dark VALUE = 1 }
		add_artifact_aspect_modifier_effect = { NAME = blood VALUE = 1 }
	}
}

create_artifact_wave_breaker_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_wave_breaker_name
		description = artifact_wave_breaker_desc
		visuals = gh_wave_breaker_visuals
		type = sword
		history = {
			type = created
			date = 1036.3.11
			actor = character:lakoeng_fourteen_heavenly_methods_23
			recipient = character:lakoeng_fourteen_heavenly_methods_23
			location = province:6903 # Bronzeport
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_wave_breaker_template
		modifier = artifact_wave_breaker_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = wave_breaker
		set_variable = {
			name = prominent_wielder
			value = character:lakoeng_fourteen_heavenly_methods_23
		}
		set_artifact_description = artifact_wave_breaker_battle_desc

		add_artifact_history = {
			type = inherited
			date = 1054.4.14
			recipient = character:lakoeng_fourteen_heavenly_methods_22
		}		
		add_artifact_history = {
			type = inherited
			date = 1091.7.3
			recipient = character:lakoeng_fourteen_heavenly_methods_20
		}
		add_artifact_history = {
			type = inherited
			date = 1094.5.11
			recipient = character:lakoeng_fourteen_heavenly_methods_19
		}
		add_artifact_history = {
			type = inherited
			date = 1149.10.21
			recipient = character:lakoeng_fourteen_heavenly_methods_18
		}
		add_artifact_history = {
			type = inherited
			date = 1162.3.1
			recipient = character:lakoeng_fourteen_heavenly_methods_17
		}
		add_artifact_history = {
			type = inherited
			date = 1182.7.2
			recipient = character:lakoeng_fourteen_heavenly_methods_16
		}
		add_artifact_history = {
			type = inherited
			date = 1195.8.27
			recipient = character:lakoeng_fourteen_heavenly_methods_15
		}
		add_artifact_history = {
			type = inherited
			date = 1245.3.7
			recipient = character:lakoeng_fourteen_heavenly_methods_2
		}		
		save_scope_as = wave_breaker
		add_artifact_aspect_modifier_effect = { NAME = water VALUE = 3 }
	}
}

create_artifact_thunderhoofs_roar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_thunderhoofs_roar_name
		description = artifact_thunderhoofs_roar_desc
		visuals = gh_thunderhoofs_roar_visuals
		type = spear
		history = {
			type = created
			date = 1094.5.11 #took from pirate
			actor = character:lakoeng_fourteen_heavenly_methods_30
			recipient = character:lakoeng_fourteen_heavenly_methods_30
			location = province:6903 # Bronzeport
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_thunderhoofs_roar_template
		modifier = artifact_thunderhoofs_roar_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = thunderhoofs_roar
		set_variable = {
			name = prominent_wielder
			value = character:lakoeng_fourteen_heavenly_methods_30
		}
		set_variable = {
			name = original_wielder
			value = character:lakoeng_fourteen_heavenly_methods_20
		}
		set_artifact_description = artifact_thunderhoofs_roar_battle_desc

		add_artifact_history = {
			type = inherited
			date = 1125.5.1
			recipient = character:lakoeng_fourteen_heavenly_methods_24
		}		
		add_artifact_history = {
			type = inherited
			date = 1159.1.1
			recipient = character:lakoeng_fourteen_heavenly_methods_25
		}
		add_artifact_history = {
			type = inherited
			date = 1169.7.13
			recipient = character:lakoeng_fourteen_heavenly_methods_26
		}
		add_artifact_history = {
			type = inherited
			date = 1185.11.26
			recipient = character:lakoeng_fourteen_heavenly_methods_27
		}
		add_artifact_history = {
			type = inherited
			date = 1240.3.8
			recipient = character:lakoeng_fourteen_heavenly_methods_28
		}	
		save_scope_as = thunderhoofs_roar
		add_artifact_aspect_modifier_effect = { NAME = air VALUE = 1 }
		add_artifact_aspect_modifier_effect = { NAME = light VALUE = 1 }
	}
}

create_artifact_fireclaw_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_fireclaw_name
		description = artifact_fireclaw_desc
		visuals = gh_fireclaw_visuals
		type = gauntlet
		history = {
			type = created
			date = 1036.3.11
			actor = character:lakoeng_fourteen_heavenly_methods_23
			recipient = character:lakoeng_fourteen_heavenly_methods_23
			location = province:6903 # Bronzeport
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_fireclaw_template
		modifier = artifact_fireclaw_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = fireclaw
		set_variable = {
			name = prominent_wielder
			value = character:lakoeng_fourteen_heavenly_methods_13
		}
		set_variable = {
			name = bestower
			value = character:lakoeng_fourteen_heavenly_methods_22
		}
		set_variable = {
			name = second_wielder
			value = character:lakoeng_fourteen_heavenly_methods_10
		}
		set_artifact_description = artifact_fireclaw_battle_desc

		add_artifact_history = {
			type = inherited
			date = 1054.4.14
			recipient = character:lakoeng_fourteen_heavenly_methods_22
		}		
		add_artifact_history = {
			type = inherited
			date = 1090.4.24  # Awarded by High Minister Ziajao Paiyi for his service
			recipient = character:lakoeng_fourteen_heavenly_methods_13
		}
		add_artifact_history = {
			type = inherited
			date = 1135.4.3
			recipient = character:lakoeng_fourteen_heavenly_methods_12
		}
		add_artifact_history = {
			type = inherited
			date = 1166.9.6
			recipient = character:lakoeng_fourteen_heavenly_methods_11
		}
		add_artifact_history = {
			type = inherited
			date = 1177.3.17
			recipient = character:lakoeng_fourteen_heavenly_methods_10
		}
		add_artifact_history = {
			type = inherited
			date = 1230.7.28
			recipient = character:lakoeng_fourteen_heavenly_methods_1
		}
		save_scope_as = fireclaw
		add_artifact_aspect_modifier_effect = { NAME = fire VALUE = 2 }
	}
}

create_artifact_myrnish_map_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_myrnish_map_name
		description = artifact_myrnish_map_desc
		visuals = gh_myrnish_map_visuals
		type = miscellaneous
		history = {
			type = created
			date = 1190.6.12
			recipient = character:talareg_sjalvolki_1
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = yes
		template = gh_myrnish_map_template
		modifier = artifact_myrnish_map_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = myrnish_map
		set_artifact_description = artifact_myrnish_map_battle_desc

		add_artifact_history = {
			type = inherited
			date = 1244.3.2
			recipient = character:talareg_sjalvolki_1
		}
		save_scope_as = myrnish_map
	}
}

create_artifact_acolytes_confidant_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_acolytes_confidant_name
		description = artifact_acolytes_confidant_desc
		visuals = gh_acolytes_confidant_visuals
		type = regalia
		history = {
			type = created
			date = 1190.6.12
			actor = scope:owner
			recipient = scope:owner
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_acolytes_confidant_template
		modifier = artifact_acolytes_confidant_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = acolytes_confidant
		set_variable = {
			name = ring_bearer
			value = character:sarridians_aversarinas_aagiokrata_2
		}
		set_artifact_description = artifact_acolytes_confidant_battle_desc
		add_artifact_history = {
			type = inherited
			date = 1244.3.2
			recipient = character:talareg_sjalvolki_1
		}
		save_scope_as = acolytes_confidant
		add_artifact_aspect_modifier_effect = { NAME = celestial VALUE = 1 }
		add_artifact_aspect_modifier_effect = { NAME = blood VALUE = 1 }
		random_artifact_magic_resistance_modifier_effect = yes
	}
}

## REGIONAL: KALATHIPSOMI

create_artifact_tarthailar_sceptre_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_tarthailar_sceptre_name
		description = artifact_tarthailar_sceptre_desc
		visuals = regalia
		type = regalia
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		modifier = artifact_court_grandeur_baseline_add_4_modifier
		modifier = artifact_legitimacy_gain_mult_3_modifier
		modifier = artifact_monthly_prestige_2_modifier
		modifier = artifact_character_capital_county_monthly_development_growth_add_8_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = tarthailar_sceptre
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 4 }
	}
	# GH TODO: Add the long history of this thing, starting with it being owned by the queens of k_cornucopia, then the Etrandexi kings of Bastonport, and finally early Aversarian governors of Megos Kalathipsomi
}

create_artifact_fidhasil_cabinet_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	random_list = {
		3 = { set_artifact_rarity_masterwork = yes }
		1 = { set_artifact_rarity_famed = yes }
	}

	# Create the artifact
	create_artifact = {
		name = placeholder
		description = placeholder
		visuals = cabinet
		type = cabinet
		history = {
			type = created
			date = 642.1.31	# This was when the Fidhasil was destroyed; while the furniture might not have literally been made on that date, it was probably not too long after
			actor = character:northernimperial_aversarinas_aagiokrata_64
			recipient = character:northernimperial_aversarinas_aagiokrata_64
			location = province:3256	# Grandbeech location
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		get_artifact_feature_references_effect = yes
		set_variable = { name = historical_tree value = flag:fidhasil }
		set_artifact_feature = GH_generic_material_wood_beech
		set_artifact_name = GH_artifact_cabinet_historical_tree_name
		set_artifact_description = artifact_cabinet_description
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		add_scaled_artifact_modifier_piety_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_scaled_artifact_modifier_dynasty_prestige_effect = yes
		}
		remove_artifact_modifier = artifact_placeholder_modifier
		
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 1 }
		set_artifact_description = artifact_magically_infusion_description # Intentional that we set the description twice, this is so that we properly get the infusion description
		set_variable = {
			name = magical_artifact
			value = yes
		}
	}
}

create_artifact_fidhasil_table_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	random_list = {
		3 = { set_artifact_rarity_masterwork = yes }
		1 = { set_artifact_rarity_famed = yes }
	}

	# Create the artifact
	create_artifact = {
		name = placeholder
		description = placeholder
		visuals = table
		type = cabinet
		history = {
			type = created
			date = 642.1.31	# This was when the Fidhasil was destroyed; while the furniture might not have literally been made on that date, it was probably not too long after
			actor = character:northernimperial_aversarinas_aagiokrata_64
			recipient = character:northernimperial_aversarinas_aagiokrata_64
			location = province:3256	# Grandbeech location
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		get_artifact_feature_references_effect = yes
		set_variable = { name = historical_tree value = flag:fidhasil }
		set_artifact_feature = GH_generic_material_wood_beech
		set_artifact_name = GH_artifact_table_historical_tree_name
		set_artifact_description = artifact_table_description
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		add_scaled_artifact_modifier_piety_effect = yes
		if = {
			limit = {
				OR = {
					rarity = famed
					rarity = illustrious
				}
			}
			add_scaled_artifact_modifier_dynasty_prestige_effect = yes
		}
		remove_artifact_modifier = artifact_placeholder_modifier
		
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 1 }
		set_artifact_description = artifact_magically_infusion_description # Intentional that we set the description twice, this is so that we properly get the infusion description
		set_variable = {
			name = magical_artifact
			value = yes
		}
	}
}

create_artifact_honey_orb_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_honey_orb_name
		description = artifact_honey_orb_desc
		visuals = gh_golden_orb
		type = pedestal
		history = { type = created_before_history }
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		modifier = artifact_monthly_arcana_lifestyle_xp_3_modifier
		modifier = artifact_monthly_learning_lifestyle_xp_3_modifier
		modifier = artifact_court_grandeur_baseline_add_4_modifier
		modifier = artifact_monthly_prestige_2_modifier
		modifier = artifact_stress_gain_3_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = honey_orb
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = light VALUE = 1 }
	}
}

create_artifact_beekeepers_wand_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_beekeepers_wand_name
		description = artifact_beekeepers_wand_desc
		visuals = gh_staff_of_the_high_seer_visuals
		type = staff
		history = {
			type = created_before_history
		}
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		modifier = artifact_prowess_6_modifier
		modifier = artifact_farmlands_advantage_4_modifier
		modifier = artifact_plains_advantage_3_modifier
		modifier = artifact_forest_advantage_3_modifier
		modifier = artifact_stewardship_2_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = beekeepers_wand

		add_spell_to_artifact_effect = {
			SPELL = global_var:verdant_growth
			ACQUISITION_TYPE = equipped
		}
		add_spell_to_artifact_effect = {
			SPELL = global_var:nature_wrath
			ACQUISITION_TYPE = equipped
		}

		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 4 }
	}
}

create_artifact_maethroxian_water_mirror_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = artifact_maethroxian_water_mirror_name
		description = artifact_maethroxian_water_mirror_desc
		visuals = gh_achromatic_mirror_visuals
		type = mirror
		history = { type = created_before_history }
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		template = gh_achromatic_mirror_template
		modifier = artifact_court_grandeur_baseline_add_2_modifier
		modifier = artifact_monthly_piety_4_modifier
		modifier = artifact_diplomacy_per_prestige_level_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = maethroxian_water_mirror
		
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 1 }
		add_artifact_aspect_modifier_effect = { NAME = water VALUE = 1 }
	}
}

create_artifact_fur_tuft_old_cubozoid = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes
	
	create_artifact = {	
		name = artifact_fur_tuft_old_cubozoid_name
		description = artifact_fur_tuft_old_cubozoid_desc
		visuals = pocket_basic_case
		type = animal_trinket
		modifier = artifact_placeholder_modifier
		
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}
	
	scope:newly_created_artifact = {
		add_scaled_artifact_modifier_minor_prestige_effect = yes
		add_scaled_artifact_modifier_stress_gain_effect = yes
		add_scaled_artifact_modifier_majesty_effect = yes
		remove_artifact_modifier = artifact_placeholder_modifier
		
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 4 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 1 }
	}
}

create_artifact_cloak_wilderking_shedding_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = placeholder	# Set after picking the cloak type
		description = placeholder
		visuals = pelt
		type = animal_trinket
		modifier = artifact_placeholder_modifier
		
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}
	
	scope:newly_created_artifact = {
		# Identify what type of shedding it is
		random_list = {
			10 = {
				set_variable = {
					name = wilderking_shedding_type
					value = flag:stag
				}
			}
			10 = {
				set_variable = {
					name = wilderking_shedding_type
					value = flag:bear
				}
			}
			10 = {
				set_variable = {
					name = wilderking_shedding_type
					value = flag:boar
				}
			}
			10 = {
				set_variable = {
					name = wilderking_shedding_type
					value = flag:wolf
				}
			}
			#10 = {
			#	set_variable = {
			#		name = wilderking_shedding_type
			#		value = flag:troll
			#	}
			#}
			#10 = {
			#	set_variable = {
			#		name = wilderking_shedding_type
			#		value = flag:raven
			#	}
			#}
			10 = {
				set_variable = {
					name = wilderking_shedding_type
					value = flag:hare
				}
			}
			#10 = {
			#	set_variable = {
			#		name = wilderking_shedding_type
			#		value = flag:eagle
			#	}
			#}
		}
	
		set_artifact_name = artifact_cloak_wilderking_shedding_name
		set_artifact_description = artifact_cloak_wilderking_shedding_desc
	
		remove_artifact_modifier = artifact_placeholder_modifier
		
		if = {
			limit = { var:wilderking_shedding_type ?= flag:stag }
			add_scaled_artifact_modifier_prestige_effect = yes
			add_2_scaled_artifact_modifier_majesty_effect = yes
			add_scaled_artifact_modifier_attractiveness_effect = yes
		}
		else_if = {
			limit = { var:wilderking_shedding_type ?= flag:bear }
			add_scaled_artifact_modifier_prowess_effect = yes
			add_scaled_artifact_modifier_majesty_effect = yes
			add_2_scaled_artifact_modifier_rulership_effect = yes	# The bear is the king of the forest in Clanlander mythos
		}
		else_if = {
			limit = { var:wilderking_shedding_type ?= flag:boar }
			add_scaled_artifact_modifier_prowess_effect = yes
			add_scaled_artifact_modifier_combat_effect = yes
			add_scaled_artifact_modifier_attractiveness_effect = yes
		}
		else_if = {
			limit = { var:wilderking_shedding_type ?= flag:wolf }
			add_scaled_artifact_modifier_prowess_effect = yes
			add_scaled_artifact_modifier_combat_effect = yes
			add_2_scaled_artifact_modifier_intrigue_effect = yes
		}
		else_if = {
			limit = { var:wilderking_shedding_type ?= flag:hare }
			add_scaled_artifact_modifier_minor_prestige_effect = yes
			add_scaled_artifact_modifier_grandeur_small_effect = yes
			add_scaled_artifact_modifier_devotion_effect = yes
			add_scaled_artifact_modifier_scholarship_effect = yes
		}
		
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
	}
}

create_artifact_cloak_wilderking_true_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_cloak_wilderking_true_name
		description = artifact_cloak_wilderking_true_desc
		visuals = pelt
		type = animal_trinket
		modifier = artifact_placeholder_modifier
		
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = wilderking_cloak_true
	
		remove_artifact_modifier = artifact_placeholder_modifier
		
		add_scaled_artifact_modifier_prestige_effect = yes
		add_scaled_artifact_modifier_majesty_effect = yes
		add_scaled_artifact_modifier_rulership_effect = yes
		add_scaled_artifact_modifier_attractiveness_effect = yes
		add_scaled_artifact_modifier_prowess_effect = yes
		add_scaled_artifact_modifier_combat_effect = yes
		add_scaled_artifact_modifier_intrigue_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		add_artifact_modifier = artifact_health_penalty_3_modifier
		add_artifact_modifier = artifact_stress_gain_1_penalty_modifier
		
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 5 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 5 }
	}
}

create_artifact_rose_of_themetea_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_rose_of_themetea_name
		description = artifact_rose_of_themetea_desc
		visuals = flowers
		type = pedestal
		modifier = artifact_court_grandeur_baseline_add_6_modifier
		
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = rose_of_themetea
		
		add_artifact_aspect_modifier_effect = { NAME = death VALUE = 5 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 5 }
	}
}

create_artifact_fairyqueen_lantern_extinguished_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {	
		name = artifact_fairyqueen_lantern_extinguished_name
		description = artifact_fairyqueen_lantern_extinguished_desc
		visuals = reliquary
		type = pedestal
		modifier = artifact_monthly_arcana_lifestyle_xp_2_modifier
		modifier = artifact_court_grandeur_baseline_add_2_modifier
		
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = fairyqueen_lantern
		
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 5 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 5 }
		add_artifact_aspect_modifier_effect = { NAME = ethereal VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = death VALUE = 3 }
	}
}

create_artifact_aedean_amulet_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = artifact_aedean_amulet_name
		description = artifact_aedean_amulet_desc
		type = necklace
		visuals = necklace
		wealth = scope:wealth
		quality = scope:quality
		modifier = artifact_monthly_arcana_lifestyle_xp_2_modifier
		modifier = artifact_court_grandeur_baseline_add_2_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = aedean_amulet
		
		add_spell_to_artifact_effect = {
			SPELL = global_var:raise_skeletal_host
			ACQUISITION_TYPE = equipped
		}
		add_spell_to_artifact_effect = {
			SPELL = global_var:necrotic_boon
			ACQUISITION_TYPE = equipped
		}
		
		add_artifact_aspect_modifier_effect = { NAME = death VALUE = 5 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 3 }
	}
}

create_artifact_sword_pathos_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_sword_pathos_name
		description = artifact_sword_pathos_desc
		type = pedestal
		visuals = sword_court
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_court_grandeur_baseline_add_2_modifier
		modifier = artifact_monthly_dynasty_prestige_2_modifier
		modifier = artifact_monthly_prestige_4_modifier
		modifier = artifact_plains_advantage_3_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sword_pathos
	}
}

create_artifact_sword_marcomer_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_sword_marcomer_name
		description = artifact_sword_marcomer_desc
		type = pedestal
		visuals = sword_court
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_court_grandeur_baseline_add_1_modifier
		modifier = artifact_monthly_dynasty_prestige_1_modifier
		modifier = artifact_monthly_prestige_2_modifier
		modifier = artifact_forest_advantage_4_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sword_marcomer
		
		add_artifact_aspect_modifier_effect = { NAME = water VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 2 }
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 1 }
	}
}

create_artifact_sword_mornegeu_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = artifact_sword_mornegeu_name
		description = artifact_sword_mornegeu_desc
		type = pedestal
		visuals = sword_court
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 76.4.27
			actor = character:dailennir_kathanouxiac_18
			recipient = character:dailennir_kathanouxiac_19
		}
		modifier = artifact_court_grandeur_baseline_add_1_modifier
		modifier = artifact_spouse_opinion_add_2_modifier
		modifier = artifact_monthly_intrigue_lifestyle_xp_2_modifier
		modifier = artifact_forest_advantage_4_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = sword_mornegeu
		
		add_artifact_aspect_modifier_effect = { NAME = dream VALUE = 3 }
		add_artifact_aspect_modifier_effect = { NAME = nature VALUE = 2 }
		add_artifact_aspect_modifier_effect = { NAME = blood VALUE = 1 }
	}
}

create_artifact_spear_malkhandor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_spear_malkhandor_name
		description = artifact_spear_malkhandor_desc
		type = spear
		visuals = spear
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = artifact_prowess_8_modifier
		modifier = artifact_monthly_prestige_4_modifier
		modifier = artifact_dread_baseline_add_3_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = spear_malkhandor
		
		add_artifact_aspect_modifier_effect = { NAME = stone VALUE = 9 }
		add_artifact_aspect_modifier_effect = { NAME = dark VALUE = 9 }
	}
}