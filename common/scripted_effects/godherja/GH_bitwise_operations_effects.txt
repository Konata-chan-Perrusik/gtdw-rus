# THIS IS A GENERATED FILE.
#
# Source template:
# added_folders/templates/common/scripted_effects/godherja/GH_bitwise_operations_effects.txt.jinja
#
# Please avoid manually editing this file: your changes WILL be overwritten when it gets regenerated.
# Instead, edit the source template and/or variables, then run render_templates.bat .

# Extracts the bit at BIT_INDEX position from the integer given as MASK
# and saves it as either 0 or 1 into a temporary scope named as specified by SAVE_AS_SCOPE.
#
# Scope:     Any
# MASK:      int - integer whose bit to extract
# BIT_INDEX: int - bit position, 0 to 15 incl.; 0 means least significant bit
# SAVE_AS_SCOPE  - temporary scope to be set to the bit's value (to either 0 or 1)
gh_extract_bit_from_mask_effect = {
	# Workaround to support literals as MASK
	save_temporary_scope_value_as = {
		name = gh_temp_mask
		value = $MASK$
	}

	save_temporary_scope_value_as = {
		name = $SAVE_AS_SCOPE$
		value = scope:gh_temp_mask.gh_bitwise_shift_right_by_$BIT_INDEX$.gh_rightmost_bit
	}

	clear_saved_scope = gh_temp_mask
}

# Modifies in-place the bit at BIT_INDEX position of the integer global variable identified by MASK_NAME,
# automatically (and silently!) creating it with an assumed initial value of 0 if it doesn't yet exist,
# and automatically removing it if after modification its value becomes 0.
#
# Scope:     Any
# MASK_NAME      - name of an integer global variable to be modified
# BIT_INDEX: int - bit position, 0 to 15 incl.; 0 means least significant bit
# BIT_VALUE: int - 0 or 1 - the new bit value
gh_set_automatic_global_mask_bit_effect = {
	if = {
		limit = { NOT = { has_global_variable = $MASK_NAME$ } }

		set_global_variable = {
			name  = $MASK_NAME$
			value = 0
		}
	}

	gh_set_global_mask_bit_effect = {
		MASK_NAME = $MASK_NAME$
		BIT_INDEX = $BIT_INDEX$
		BIT_VALUE = $BIT_VALUE$
	}

	if = {
		limit = { global_var:$MASK_NAME$ = 0 }

		remove_global_variable = $MASK_NAME$
	}
}

# Modifies in-place the bit at BIT_INDEX position of an existing integer global variable identified by MASK_NAME.
# Assumes the variable already exists, will neither create nor remove it.
# If you want mask variable existence to be managed automatically, use gh_set_automatic_global_mask_bit_effect instead.
#
# Scope:     Any
# MASK_NAME      - name of an integer global variable to be modified
# BIT_INDEX: int - bit position, 0 to 15 incl.; 0 means least significant bit
# BIT_VALUE: int - 0 or 1 - the new bit value
gh_set_global_mask_bit_effect = {
	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = 0
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 15 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_15
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_15.gh_rightmost_bit.gh_bitwise_shift_left_by_15
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 14 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_14
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_14.gh_rightmost_bit.gh_bitwise_shift_left_by_14
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 13 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_13
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_13.gh_rightmost_bit.gh_bitwise_shift_left_by_13
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 12 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_12
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_12.gh_rightmost_bit.gh_bitwise_shift_left_by_12
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 11 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_11
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_11.gh_rightmost_bit.gh_bitwise_shift_left_by_11
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 10 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_10
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_10.gh_rightmost_bit.gh_bitwise_shift_left_by_10
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 9 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_9
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_9.gh_rightmost_bit.gh_bitwise_shift_left_by_9
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 8 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_8
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_8.gh_rightmost_bit.gh_bitwise_shift_left_by_8
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 7 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_7
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_7.gh_rightmost_bit.gh_bitwise_shift_left_by_7
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 6 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_6
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_6.gh_rightmost_bit.gh_bitwise_shift_left_by_6
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 5 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_5
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_5.gh_rightmost_bit.gh_bitwise_shift_left_by_5
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 4 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_4
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_4.gh_rightmost_bit.gh_bitwise_shift_left_by_4
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 3 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_3
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_3.gh_rightmost_bit.gh_bitwise_shift_left_by_3
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 2 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_2
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_2.gh_rightmost_bit.gh_bitwise_shift_left_by_2
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 1 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_1
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_1.gh_rightmost_bit.gh_bitwise_shift_left_by_1
			}
		}
	}

	save_temporary_scope_value_as = {
		name  = gh_temp_mask
		value = {
			value = scope:gh_temp_mask

			if = {
				limit = { $BIT_INDEX$ = 0 }

				if = {
					limit = { $BIT_VALUE$ != 0 }

					add = gh_two_to_power_0
				}
			}
			else = {
				add = global_var:$MASK_NAME$.gh_bitwise_shift_right_by_0.gh_rightmost_bit.gh_bitwise_shift_left_by_0
			}
		}
	}

	set_global_variable = {
		name = $MASK_NAME$
		value = scope:gh_temp_mask
	}

	clear_saved_scope = gh_temp_mask
}