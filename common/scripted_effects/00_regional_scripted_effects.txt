#For use with HornedMythicalCreature / call this effect (set_up_horned_mythical_creature_effect = yes) in the line before creating the artifact 
#Use this in the artifact's name/description in the loc-file [ROOT.Char.Custom('HornedMythicalCreature')]
#Remember to clear the var:horned_mythical_creature in your after = { ... }
set_up_horned_mythical_creature_effect = {
	random_list = {
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:tarasque
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:indrik
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:ophiotaurus
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:monocerus
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:centicore
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:erchitu
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:hadhayosh
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:bulgu
			}
		}
		50 = {
			set_variable = {
				name = horned_mythical_creature
				value = flag:catoblepas
			}
		}
		# Lonely Note: GHify
		#5 = {
		#	trigger = { 
		#		location = { geographical_region = custom_iceland }
		#	}
		#	set_variable = {
		#		name = horned_mythical_creature
		#		value = flag:keewakw
		#	}
		#}

	}
}

# GH URGENT: Should this be commented out?
#For use with RegionalMythicalCreature / call this effect (set_up_regional_mythical_creature_effect = yes) in the line before creating the artifact 
#Use this in the artifact's name/description in the loc-file [ROOT.Char.Custom('RegionalMythicalCreature')] /and/ [ROOT.Char.Custom('RegionalMythicalCreatureLower')]
#Remember to clear the var:regional_mythical_creature_trinket in your after = { ... }
set_up_regional_mythical_creature_effect = {
	#if = {
	#	#Britannia
	#	limit = {
	#		location = { geographical_region = world_europe_west_britannia }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:water_leper
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:fomorian
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:fachan
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#West Europe
	#	limit = {
	#		location = { geographical_region = world_europe_west }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:cockatrice
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:lou_carcolh
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:myrmecoleon
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#North Europe
	#	limit = {
	#		location = { geographical_region = world_europe_north }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:antero_vipunen
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:tjelvar
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:fin
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#South Europe
	#	limit = {
	#		location = { geographical_region = world_europe_south }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:basilisk
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:lhombri
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:argus_panoptes
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#East Europe
	#	limit = {
	#		location = { geographical_region = world_europe_east }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:baba_yaga
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:psoglav
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:sirin
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#West Africa
	#	limit = {
	#		location = { geographical_region = world_africa_west }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:mami_wata
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:dodo
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:utelif
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#East Africa
	#	limit = {
	#		location = { geographical_region = world_africa_east }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:liqimsa
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:bulgu
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:opimachus
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#Middle East
	#	limit = {
	#		location = { geographical_region = GH_REPLACE_world_middle_east }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:manticore
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:behemoth
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:humbaba
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#India
	#	limit = {
	#		location = { geographical_region = GH_REPLACE_world_india }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:makara
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:yali
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:rakshasha
	#			}
	#		}
	#	}
	#}
	#else_if = {
	#	#East Asia
	#	limit = {
	#		location = { geographical_region = GH_REPLACE_world_tibet }
	#		NOT = { exists = var:regional_mythical_creature_trinket }
	#	}
	#	random_list = {
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:manaul
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:bashee
	#			}
	#		}
	#		50 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:camphruch
	#			}
	#		}
	#	}
	#}
	#Fallback
	#else = {
	#	random_list = {
	#		100 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:dragon
	#			}
	#		}
	#		5 = {
	#			set_variable = {
	#				name = regional_mythical_creature_trinket
	#				value = flag:cipactli
	#			}
	#		}
	#	}
	#}	
	set_variable = {
		name = regional_mythical_creature_trinket
		value = flag:dragon
	}
}

select_local_farm_animal_effect = {
	random_list = {
		50 = {
			set_variable = {
				name = local_farm_animal
				value = flag:goat
			}
		}
		50 = {
			set_variable = {
				name = local_farm_animal
				value = flag:chicken
			}
		}
		50 = {
			set_variable = {
				name = local_farm_animal
				value = flag:cow
			}
		}
		50 = {
			set_variable = {
				name = local_farm_animal
				value = flag:sheep
			}
		}
		50 = {
			modifier = {
				factor = 0
				always = no # GH TODO: Generic trigger
			}
			set_variable = {
				name = local_farm_animal
				value = flag:pig
			}
		}
		50 = {
			modifier = {
				factor = 0
				always = no # GH TODO: Generic trigger
			}
			set_variable = {
				name = local_farm_animal
				value = flag:yak
			}
		}
	}
}

# Plague effect, get a regionally appropriate faith for people to scapegoat
select_scapegoat_faith_effect = { # GH_COMPATCH_TODO: Update for Aeras
	random_list = {
		100 = { # Courtier in your realm with hostile faith
			trigger = {
				any_courtier_or_guest = {
					save_temporary_scope_as = courtier_to_check
					root.faith = {
						faith_hostility_level = {
							target = scope:courtier_to_check.faith
							value >= faith_hostile_level
						}
					}
				}
			}
			random_courtier_or_guest = {
				limit = {
					save_temporary_scope_as = courtier_to_check
					root.faith = {
						faith_hostility_level = {
							target = scope:courtier_to_check.faith
							value >= faith_hostile_level
						}
					}
				}
				faith = { save_scope_as = faith_to_blame }
			}
		}
		100 = { # Vassal in your realm with hostile faith
			trigger = {
				top_liege ?= {
					any_vassal_or_below = {
						save_temporary_scope_as = courtier_to_check
						root.faith = {
							faith_hostility_level = {
								target = scope:courtier_to_check.faith
								value >= faith_hostile_level
							}
						}
					}
				}
			}
			top_liege = {
				random_vassal_or_below = {
					limit = {
						save_temporary_scope_as = courtier_to_check
						root.faith = {
							faith_hostility_level = {
								target = scope:courtier_to_check.faith
								value >= faith_hostile_level
							}
						}
					}
					faith = { save_scope_as = faith_to_blame }
				}
			}
		}
		100 = { # Neighbouring hostile faith
			trigger = {
				any_neighboring_and_across_water_top_liege_realm_owner = {
					any_sub_realm_county = {
						save_temporary_scope_as = county_to_check
						root.faith = {
							faith_hostility_level = {
								target = scope:county_to_check.faith
								value >= faith_hostile_level
							}
						}
					}
				}
			}
			random_neighboring_and_across_water_top_liege_realm_owner = {
				limit = {
					any_sub_realm_county = {
						save_temporary_scope_as = county_to_check
						root.faith = {
							faith_hostility_level = {
								target = scope:county_to_check.faith
								value >= faith_hostile_level
							}
						}
					}
				}
				random_sub_realm_county = {
					limit = {
						save_temporary_scope_as = county_to_check
						root.faith = {
							faith_hostility_level = {
								target = scope:county_to_check.faith
								value >= faith_hostile_level
							}
						}
					}
					faith = { save_scope_as = faith_to_blame }
				}
			}
		}
		# GH_COMPATCH_TODO: Update for GH Regions, removed vanilla references
#		10 = { # Regional, fallback
#		}
	}
}
