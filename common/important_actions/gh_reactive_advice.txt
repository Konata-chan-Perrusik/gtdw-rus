#GH-specific Reactive Advice

action_reactive_advice_hunting = {
	type = tutorial
	icon = generic_godherja_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"

	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_hunting }
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_hunting
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_hunting
	}
}

action_reactive_advice_magic = {
	type = tutorial
	icon = generic_godherja_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"

	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_magic }
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_magic
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_magic
	}
}

action_reactive_advice_pirates = {
	type = tutorial
	icon = generic_godherja_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"

	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_pirates }
				government_has_flag = government_is_pirate
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_pirates
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_pirates
	}
}

action_too_many_children = {
	type = alert
	icon = generic_godherja_advice
	priority = 1000
	check_create_action = {
		if = {
			limit = {
				culture = { has_cultural_pillar = heritage_redlander }
				any_courtier = {
					is_available_child = yes
				}
			}
			try_create_important_action = {
				important_action_type = action_too_many_children
			}
		}
	}

	effect = {
		random_courtier = {
			limit = { is_available_child = yes }
			save_scope_as = child_too_many
		}
		open_interaction_window = {
			interaction = send_children_to_pit_interaction
			actor = root
			recipient = scope:child_too_many
		}
	}
}