# THIS IS A GENERATED FILE.
#
# Source template:
# added_folders/templates/common/script_values/GH_magic_ai_value_list.txt.jinja
#
# Please avoid manually editing this file: your changes WILL be overwritten when it gets regenerated.
# Instead, edit the source template and/or variables, then run render_templates.bat .

 spell_effect_ai_weight_value_0 = {}	# GH TODO: Remove this from the binary list
 add_character_modifier_magic_health_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_1 }
 spell_effect_ai_weight_value_1 = {	# add_character_modifier_magic_health_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_health_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_health_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_2 }
 spell_effect_ai_weight_value_2 = {	# add_character_modifier_magic_health_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_health_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 0.5
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_health_resistance_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_health_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_3 }
 spell_effect_ai_weight_value_3 = {	# add_character_modifier_magic_health_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_health_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_health_loss_minor_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_4 }
 spell_effect_ai_weight_value_4 = {	# add_character_modifier_magic_health_loss_minor_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_health_loss_minor_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stress_negative_ai_weight_value = { value = spell_effect_ai_weight_value_5 }
 spell_effect_ai_weight_value_5 = {	# add_character_modifier_magic_stress_negative
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stress_negative }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_negative_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stress_positive_ai_weight_value = { value = spell_effect_ai_weight_value_6 }
 spell_effect_ai_weight_value_6 = {	# add_character_modifier_magic_stress_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stress_positive }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_positive_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stress_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_7 }
 spell_effect_ai_weight_value_7 = {	# add_character_modifier_magic_stress_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stress_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_gain_mult_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stress_loss_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_8 }
 spell_effect_ai_weight_value_8 = {	# add_character_modifier_magic_stress_loss_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stress_loss_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stress_loss_mult_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_virility_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_9 }
 spell_effect_ai_weight_value_9 = {	# add_character_modifier_magic_virility_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_virility_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_virility_opinion_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_viagra_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_10 }
 spell_effect_ai_weight_value_10 = {	# add_character_modifier_magic_viagra_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_viagra_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_general_boost_ai_weight_value = { value = spell_effect_ai_weight_value_11 }
 spell_effect_ai_weight_value_11 = {	# add_character_modifier_magic_general_boost
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_general_boost }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_diplomacy_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_12 }
 spell_effect_ai_weight_value_12 = {	# add_character_modifier_magic_diplomacy_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_diplomacy_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_diplomacy_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_diplomacy_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_13 }
 spell_effect_ai_weight_value_13 = {	# add_character_modifier_magic_diplomacy_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_diplomacy_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_diplomacy_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_14 }
 spell_effect_ai_weight_value_14 = {	# add_character_modifier_magic_diplomacy_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_diplomacy_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_diplomacy_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_diplomacy_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_15 }
 spell_effect_ai_weight_value_15 = {	# add_character_modifier_magic_diplomacy_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_diplomacy_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_diplomacy_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_martial_animal_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_16 }
 spell_effect_ai_weight_value_16 = {	# add_character_modifier_magic_martial_animal_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_animal_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_animal_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_martial_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_17 }
 spell_effect_ai_weight_value_17 = {	# add_character_modifier_magic_martial_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_martial_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_18 }
 spell_effect_ai_weight_value_18 = {	# add_character_modifier_magic_martial_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_martial_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_19 }
 spell_effect_ai_weight_value_19 = {	# add_character_modifier_magic_martial_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_martial_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_martial_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_20 }
 spell_effect_ai_weight_value_20 = {	# add_character_modifier_magic_martial_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_21 }
 spell_effect_ai_weight_value_21 = {	# add_character_modifier_magic_stewardship_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stewardship_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_22 }
 spell_effect_ai_weight_value_22 = {	# add_character_modifier_magic_stewardship_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_23 }
 spell_effect_ai_weight_value_23 = {	# add_character_modifier_magic_stewardship_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stewardship_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_24 }
 spell_effect_ai_weight_value_24 = {	# add_character_modifier_magic_stewardship_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stewardship_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_animal_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_25 }
 spell_effect_ai_weight_value_25 = {	# add_character_modifier_magic_intrigue_animal_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_animal_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_animal_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_26 }
 spell_effect_ai_weight_value_26 = {	# add_character_modifier_magic_intrigue_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_27 }
 spell_effect_ai_weight_value_27 = {	# add_character_modifier_magic_intrigue_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_28 }
 spell_effect_ai_weight_value_28 = {	# add_character_modifier_magic_intrigue_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_intrigue_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_29 }
 spell_effect_ai_weight_value_29 = {	# add_character_modifier_magic_intrigue_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_learning_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_30 }
 spell_effect_ai_weight_value_30 = {	# add_character_modifier_magic_learning_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_learning_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_learning_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_learning_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_31 }
 spell_effect_ai_weight_value_31 = {	# add_character_modifier_magic_learning_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_learning_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_learning_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_32 }
 spell_effect_ai_weight_value_32 = {	# add_character_modifier_magic_learning_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_learning_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_learning_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_learning_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_33 }
 spell_effect_ai_weight_value_33 = {	# add_character_modifier_magic_learning_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_learning_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_learning_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_prowess_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_34 }
 spell_effect_ai_weight_value_34 = {	# add_character_modifier_magic_prowess_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_prowess_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 3
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_prowess_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_prowess_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_35 }
 spell_effect_ai_weight_value_35 = {	# add_character_modifier_magic_prowess_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_prowess_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_prowess_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_36 }
 spell_effect_ai_weight_value_36 = {	# add_character_modifier_magic_prowess_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_prowess_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = -3
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_prowess_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_prowess_gain_per_piety_level_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_37 }
 spell_effect_ai_weight_value_37 = {	# add_character_modifier_magic_prowess_gain_per_piety_level_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_prowess_gain_per_piety_level_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				multiply = piety_level

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_prowess_gain_per_piety_level_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_attraction_opinion_physical_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_38 }
 spell_effect_ai_weight_value_38 = {	# add_character_modifier_magic_attraction_opinion_physical_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_attraction_opinion_physical_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_attraction_opinion_physical_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_attraction_opinion_social_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_39 }
 spell_effect_ai_weight_value_39 = {	# add_character_modifier_magic_attraction_opinion_social_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_attraction_opinion_social_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_attraction_opinion_social_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_close_relative_opinion_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_40 }
 spell_effect_ai_weight_value_40 = {	# add_character_modifier_magic_close_relative_opinion_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_close_relative_opinion_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_child_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_41 }
 spell_effect_ai_weight_value_41 = {	# add_character_modifier_magic_child_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_child_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_spouse_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_42 }
 spell_effect_ai_weight_value_42 = {	# add_character_modifier_magic_spouse_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_spouse_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_house_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_43 }
 spell_effect_ai_weight_value_43 = {	# add_character_modifier_magic_house_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_house_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_dynasty_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_44 }
 spell_effect_ai_weight_value_44 = {	# add_character_modifier_magic_dynasty_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_dynasty_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_general_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_45 }
 spell_effect_ai_weight_value_45 = {	# add_character_modifier_magic_general_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_general_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_opinion_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_realm_opinion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_46 }
 spell_effect_ai_weight_value_46 = {	# add_character_modifier_magic_realm_opinion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_realm_opinion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must not be a top liege
					limit = { is_independent_ruler = no }
					add = {
						value = 5
						multiply = 0.65
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_realm_opinion_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_internal_strife_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_47 }
 spell_effect_ai_weight_value_47 = {	# add_character_modifier_magic_internal_strife_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_internal_strife_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_internal_strife_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must not be a top liege
					limit = { is_independent_ruler = no }
					add = {
						value = -5
						multiply = 0.65
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_internal_strife_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_external_condemnation_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_48 }
 spell_effect_ai_weight_value_48 = {	# add_character_modifier_magic_external_condemnation_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_external_condemnation_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -5
				multiply = 0.3
				if = {
					limit = { has_trait = ambitious }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.15
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.45
				}
				if = {
					limit = {
						OR = {
							has_trait = stubborn
							has_trait = fickle
						}
					}
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = eccentric }
					multiply = 0.45
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.35
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_external_condemnation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_diplomacy_magic_modifier_seduction_positive_ai_weight_value = { value = spell_effect_ai_weight_value_49 }
 spell_effect_ai_weight_value_49 = {	# add_character_modifier_diplomacy_magic_modifier_seduction_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = diplomacy_magic_modifier_seduction_positive }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_seduction_positive_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_diplomacy_magic_modifier_seduction_negative_ai_weight_value = { value = spell_effect_ai_weight_value_50 }
 spell_effect_ai_weight_value_50 = {	# add_character_modifier_diplomacy_magic_modifier_seduction_negative
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = diplomacy_magic_modifier_seduction_negative }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_seduction_negative_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_diplomacy_magic_modifier_vassal_opinion_positive_ai_weight_value = { value = spell_effect_ai_weight_value_51 }
 spell_effect_ai_weight_value_51 = {	# add_character_modifier_diplomacy_magic_modifier_vassal_opinion_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = diplomacy_magic_modifier_vassal_opinion_positive }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_vassal_opinion_positive_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_religious_fanaticism_ai_weight_value = { value = spell_effect_ai_weight_value_52 }
 spell_effect_ai_weight_value_52 = {	# add_character_modifier_religious_fanaticism
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = religious_fanaticism }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.religious_fanaticism_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_melodious_voice_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_53 }
 spell_effect_ai_weight_value_53 = {	# add_character_modifier_melodious_voice_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = melodious_voice_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.melodious_voice_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.melodious_voice_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_glassinger_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_54 }
 spell_effect_ai_weight_value_54 = {	# add_character_modifier_glassinger_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = glassinger_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.glassinger_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.glassinger_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_character_county_opinion_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_55 }
 spell_effect_ai_weight_value_55 = {	# add_character_modifier_character_county_opinion_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = character_county_opinion_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_short_reign_duration_mult_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_56 }
 spell_effect_ai_weight_value_56 = {	# add_character_modifier_short_reign_duration_mult_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = short_reign_duration_mult_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_court_grandeur_baseline_add_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_57 }
 spell_effect_ai_weight_value_57 = {	# add_character_modifier_court_grandeur_baseline_add_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = court_grandeur_baseline_add_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_character_travel_safety_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_58 }
 spell_effect_ai_weight_value_58 = {	# add_character_modifier_magic_character_travel_safety_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_travel_safety_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_character_travel_safety_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_59 }
 spell_effect_ai_weight_value_59 = {	# add_character_modifier_magic_character_travel_safety_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_travel_safety_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_character_travel_speed_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_60 }
 spell_effect_ai_weight_value_60 = {	# add_character_modifier_magic_character_travel_speed_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_travel_speed_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_travel_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_61 }
 spell_effect_ai_weight_value_61 = {	# add_character_modifier_travel_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = travel_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_travel_disadvantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_62 }
 spell_effect_ai_weight_value_62 = {	# add_character_modifier_travel_disadvantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = travel_disadvantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_pane_of_passage_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_63 }
 spell_effect_ai_weight_value_63 = {	# add_character_modifier_pane_of_passage_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = pane_of_passage_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_county_travel_danger_advantage_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_64 }
 spell_effect_ai_weight_value_64 = {	# add_county_modifier_magic_county_travel_danger_advantage_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_county_travel_danger_advantage_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_county_travel_danger_disadvantage_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_65 }
 spell_effect_ai_weight_value_65 = {	# add_county_modifier_magic_county_travel_danger_disadvantage_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_county_travel_danger_disadvantage_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_murder_scheme_power_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_66 }
 spell_effect_ai_weight_value_66 = {	# add_character_modifier_magic_murder_scheme_power_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_murder_scheme_power_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_seduce_scheme_power_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_67 }
 spell_effect_ai_weight_value_67 = {	# add_character_modifier_magic_seduce_scheme_power_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_seduce_scheme_power_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_hostile_scheme_discovery_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_68 }
 spell_effect_ai_weight_value_68 = {	# add_character_modifier_magic_hostile_scheme_discovery_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_hostile_scheme_discovery_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_hostile_scheme_discovery_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_vengeance_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_69 }
 spell_effect_ai_weight_value_69 = {	# add_character_modifier_magic_vengeance_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_vengeance_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_haunting_power_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_70 }
 spell_effect_ai_weight_value_70 = {	# add_character_modifier_haunting_power_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = haunting_power_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_brave_ai_weight_value = { value = spell_effect_ai_weight_value_71 }
 spell_effect_ai_weight_value_71 = {	# add_character_modifier_magic_trait_synergy_brave
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_brave }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_craven_ai_weight_value = { value = spell_effect_ai_weight_value_72 }
 spell_effect_ai_weight_value_72 = {	# add_character_modifier_magic_trait_synergy_craven
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_craven }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_craven_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_craven_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_calm_ai_weight_value = { value = spell_effect_ai_weight_value_73 }
 spell_effect_ai_weight_value_73 = {	# add_character_modifier_magic_trait_synergy_calm
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_calm }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_wrathful_ai_weight_value = { value = spell_effect_ai_weight_value_74 }
 spell_effect_ai_weight_value_74 = {	# add_character_modifier_magic_trait_synergy_wrathful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_wrathful }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_wrathful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_wrathful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_chaste_ai_weight_value = { value = spell_effect_ai_weight_value_75 }
 spell_effect_ai_weight_value_75 = {	# add_character_modifier_magic_trait_synergy_chaste
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_chaste }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.5
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_chaste_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.5
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_chaste_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_lustful_ai_weight_value = { value = spell_effect_ai_weight_value_76 }
 spell_effect_ai_weight_value_76 = {	# add_character_modifier_magic_trait_synergy_lustful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_lustful }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lustful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lustful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_content_ai_weight_value = { value = spell_effect_ai_weight_value_77 }
 spell_effect_ai_weight_value_77 = {	# add_character_modifier_magic_trait_synergy_content
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_content }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.25
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_ambitious_ai_weight_value = { value = spell_effect_ai_weight_value_78 }
 spell_effect_ai_weight_value_78 = {	# add_character_modifier_magic_trait_synergy_ambitious
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_ambitious }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.25
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_diligent_ai_weight_value = { value = spell_effect_ai_weight_value_79 }
 spell_effect_ai_weight_value_79 = {	# add_character_modifier_magic_trait_synergy_diligent
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_diligent }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.15
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_lazy_ai_weight_value = { value = spell_effect_ai_weight_value_80 }
 spell_effect_ai_weight_value_80 = {	# add_character_modifier_magic_trait_synergy_lazy
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_lazy }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.8
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_fickle_ai_weight_value = { value = spell_effect_ai_weight_value_81 }
 spell_effect_ai_weight_value_81 = {	# add_character_modifier_magic_trait_synergy_fickle
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_fickle }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_stubborn_ai_weight_value = { value = spell_effect_ai_weight_value_82 }
 spell_effect_ai_weight_value_82 = {	# add_character_modifier_magic_trait_synergy_stubborn
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_stubborn }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 0.25
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -2
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_forgiving_ai_weight_value = { value = spell_effect_ai_weight_value_83 }
 spell_effect_ai_weight_value_83 = {	# add_character_modifier_magic_trait_synergy_forgiving
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_forgiving }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_forgiving_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_forgiving_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_vengeful_ai_weight_value = { value = spell_effect_ai_weight_value_84 }
 spell_effect_ai_weight_value_84 = {	# add_character_modifier_magic_trait_synergy_vengeful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_vengeful }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_generous_ai_weight_value = { value = spell_effect_ai_weight_value_85 }
 spell_effect_ai_weight_value_85 = {	# add_character_modifier_magic_trait_synergy_generous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_generous }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_generous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_generous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_greedy_ai_weight_value = { value = spell_effect_ai_weight_value_86 }
 spell_effect_ai_weight_value_86 = {	# add_character_modifier_magic_trait_synergy_greedy
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_greedy }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_greedy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_greedy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_gregarious_ai_weight_value = { value = spell_effect_ai_weight_value_87 }
 spell_effect_ai_weight_value_87 = {	# add_character_modifier_magic_trait_synergy_gregarious
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_gregarious }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_shy_ai_weight_value = { value = spell_effect_ai_weight_value_88 }
 spell_effect_ai_weight_value_88 = {	# add_character_modifier_magic_trait_synergy_shy
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_shy }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_honest_ai_weight_value = { value = spell_effect_ai_weight_value_89 }
 spell_effect_ai_weight_value_89 = {	# add_character_modifier_magic_trait_synergy_honest
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_honest }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_deceitful_ai_weight_value = { value = spell_effect_ai_weight_value_90 }
 spell_effect_ai_weight_value_90 = {	# add_character_modifier_magic_trait_synergy_deceitful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_deceitful }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_humble_ai_weight_value = { value = spell_effect_ai_weight_value_91 }
 spell_effect_ai_weight_value_91 = {	# add_character_modifier_magic_trait_synergy_humble
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_humble }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_arrogant_ai_weight_value = { value = spell_effect_ai_weight_value_92 }
 spell_effect_ai_weight_value_92 = {	# add_character_modifier_magic_trait_synergy_arrogant
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_arrogant }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -2
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_just_ai_weight_value = { value = spell_effect_ai_weight_value_93 }
 spell_effect_ai_weight_value_93 = {	# add_character_modifier_magic_trait_synergy_just
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_just }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_arbitrary_ai_weight_value = { value = spell_effect_ai_weight_value_94 }
 spell_effect_ai_weight_value_94 = {	# add_character_modifier_magic_trait_synergy_arbitrary
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_arbitrary }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.25
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -2
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_patient_ai_weight_value = { value = spell_effect_ai_weight_value_95 }
 spell_effect_ai_weight_value_95 = {	# add_character_modifier_magic_trait_synergy_patient
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_patient }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_patient_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_patient_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_impatient_ai_weight_value = { value = spell_effect_ai_weight_value_96 }
 spell_effect_ai_weight_value_96 = {	# add_character_modifier_magic_trait_synergy_impatient
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_impatient }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_temperate_ai_weight_value = { value = spell_effect_ai_weight_value_97 }
 spell_effect_ai_weight_value_97 = {	# add_character_modifier_magic_trait_synergy_temperate
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_temperate }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_temperate_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_temperate_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_gluttonous_ai_weight_value = { value = spell_effect_ai_weight_value_98 }
 spell_effect_ai_weight_value_98 = {	# add_character_modifier_magic_trait_synergy_gluttonous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_gluttonous }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.25
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gluttonous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_gluttonous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_trusting_ai_weight_value = { value = spell_effect_ai_weight_value_99 }
 spell_effect_ai_weight_value_99 = {	# add_character_modifier_magic_trait_synergy_trusting
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_trusting }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_paranoid_ai_weight_value = { value = spell_effect_ai_weight_value_100 }
 spell_effect_ai_weight_value_100 = {	# add_character_modifier_magic_trait_synergy_paranoid
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_paranoid }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.33
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.15
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_zealous_ai_weight_value = { value = spell_effect_ai_weight_value_101 }
 spell_effect_ai_weight_value_101 = {	# add_character_modifier_magic_trait_synergy_zealous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_zealous }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_zealous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_cynical_ai_weight_value = { value = spell_effect_ai_weight_value_102 }
 spell_effect_ai_weight_value_102 = {	# add_character_modifier_magic_trait_synergy_cynical
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_cynical }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_cynical_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_cynical_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_compassionate_ai_weight_value = { value = spell_effect_ai_weight_value_103 }
 spell_effect_ai_weight_value_103 = {	# add_character_modifier_magic_trait_synergy_compassionate
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_compassionate }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_callous_ai_weight_value = { value = spell_effect_ai_weight_value_104 }
 spell_effect_ai_weight_value_104 = {	# add_character_modifier_magic_trait_synergy_callous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_callous }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_callous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_callous_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_sadistic_ai_weight_value = { value = spell_effect_ai_weight_value_105 }
 spell_effect_ai_weight_value_105 = {	# add_character_modifier_magic_trait_synergy_sadistic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_sadistic }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_trait_synergy_eccentric_ai_weight_value = { value = spell_effect_ai_weight_value_106 }
 spell_effect_ai_weight_value_106 = {	# add_character_modifier_magic_trait_synergy_eccentric
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_trait_synergy_eccentric }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_battle_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_107 }
 spell_effect_ai_weight_value_107 = {	# add_character_modifier_magic_battle_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_battle_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_battle_magic_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.25
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_battle_magic_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_enhanced_fatality_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_108 }
 spell_effect_ai_weight_value_108 = {	# add_character_modifier_magic_enhanced_fatality_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_enhanced_fatality_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.15
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_enhanced_fatality_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_hard_casualty_modifier_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_109 }
 spell_effect_ai_weight_value_109 = {	# add_character_modifier_magic_hard_casualty_modifier_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_hard_casualty_modifier_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_hard_casualty_modifier_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_hard_casualty_modifier_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_110 }
 spell_effect_ai_weight_value_110 = {	# add_character_modifier_magic_hard_casualty_modifier_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_hard_casualty_modifier_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = -0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_hard_casualty_modifier_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_dry_terrain_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_111 }
 spell_effect_ai_weight_value_111 = {	# add_character_modifier_dry_terrain_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = dry_terrain_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_forest_terrain_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_112 }
 spell_effect_ai_weight_value_112 = {	# add_character_modifier_forest_terrain_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = forest_terrain_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_water_magic_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_113 }
 spell_effect_ai_weight_value_113 = {	# add_character_modifier_water_magic_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = water_magic_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_water_magic_disadvantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_114 }
 spell_effect_ai_weight_value_114 = {	# add_character_modifier_water_magic_disadvantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = water_magic_disadvantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_sailing_magic_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_115 }
 spell_effect_ai_weight_value_115 = {	# add_character_modifier_sailing_magic_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = sailing_magic_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_sailing_magic_disadvantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_116 }
 spell_effect_ai_weight_value_116 = {	# add_character_modifier_sailing_magic_disadvantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = sailing_magic_disadvantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_slow_army_movement_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_117 }
 spell_effect_ai_weight_value_117 = {	# add_character_modifier_slow_army_movement_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = slow_army_movement_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_movement_speed_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_118 }
 spell_effect_ai_weight_value_118 = {	# add_character_modifier_movement_speed_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = movement_speed_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_hasten_raid_speed_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_119 }
 spell_effect_ai_weight_value_119 = {	# add_character_modifier_hasten_raid_speed_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = hasten_raid_speed_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_rocky_terrain_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_120 }
 spell_effect_ai_weight_value_120 = {	# add_character_modifier_rocky_terrain_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = rocky_terrain_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_negate_enemy_advantage_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_121 }
 spell_effect_ai_weight_value_121 = {	# add_character_modifier_negate_enemy_advantage_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = negate_enemy_advantage_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_knight_effectiveness_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_122 }
 spell_effect_ai_weight_value_122 = {	# add_character_modifier_knight_effectiveness_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = knight_effectiveness_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_army_damage_magic_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_123 }
 spell_effect_ai_weight_value_123 = {	# add_character_modifier_army_damage_magic_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = army_damage_magic_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_army_damage_negative_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_124 }
 spell_effect_ai_weight_value_124 = {	# add_character_modifier_army_damage_negative_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = army_damage_negative_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_army_toughness_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_125 }
 spell_effect_ai_weight_value_125 = {	# add_character_modifier_army_toughness_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = army_toughness_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.05
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.army_toughness_magic_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magi_siege_value_add_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_126 }
 spell_effect_ai_weight_value_126 = {	# add_character_modifier_magi_siege_value_add_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magi_siege_value_add_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_siege_weapon_siege_value_add_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_127 }
 spell_effect_ai_weight_value_127 = {	# add_character_modifier_siege_weapon_siege_value_add_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = siege_weapon_siege_value_add_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_abstruse_survivability_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_128 }
 spell_effect_ai_weight_value_128 = {	# add_character_modifier_abstruse_survivability_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = abstruse_survivability_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = -0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.abstruse_survivability_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.1
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.abstruse_survivability_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_men_at_arms_recruitment_cost_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_129 }
 spell_effect_ai_weight_value_129 = {	# add_character_modifier_men_at_arms_recruitment_cost_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = men_at_arms_recruitment_cost_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_siege_phase_time_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_130 }
 spell_effect_ai_weight_value_130 = {	# add_character_modifier_siege_phase_time_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = siege_phase_time_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_attacker_advantage_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_131 }
 spell_effect_ai_weight_value_131 = {	# add_character_modifier_attacker_advantage_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = attacker_advantage_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_dynasty_prestige_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_132 }
 spell_effect_ai_weight_value_132 = {	# add_character_modifier_magic_monthly_dynasty_prestige_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_dynasty_prestige_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_dynasty_prestige_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_133 }
 spell_effect_ai_weight_value_133 = {	# add_character_modifier_magic_monthly_dynasty_prestige_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_dynasty_prestige_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_income_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_134 }
 spell_effect_ai_weight_value_134 = {	# add_character_modifier_magic_monthly_income_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_income_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_income_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_135 }
 spell_effect_ai_weight_value_135 = {	# add_character_modifier_magic_monthly_income_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_income_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_income_loss_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_136 }
 spell_effect_ai_weight_value_136 = {	# add_character_modifier_magic_monthly_income_loss_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_income_loss_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_piety_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_137 }
 spell_effect_ai_weight_value_137 = {	# add_character_modifier_magic_monthly_piety_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_piety_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_piety_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_138 }
 spell_effect_ai_weight_value_138 = {	# add_character_modifier_magic_monthly_piety_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_piety_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_piety_loss_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_139 }
 spell_effect_ai_weight_value_139 = {	# add_character_modifier_magic_monthly_piety_loss_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_piety_loss_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_prestige_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_140 }
 spell_effect_ai_weight_value_140 = {	# add_character_modifier_magic_monthly_prestige_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_prestige_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_prestige_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_141 }
 spell_effect_ai_weight_value_141 = {	# add_character_modifier_magic_monthly_prestige_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_prestige_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_prestige_loss_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_142 }
 spell_effect_ai_weight_value_142 = {	# add_character_modifier_magic_monthly_prestige_loss_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_prestige_loss_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_omen_diplomacy_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_143 }
 spell_effect_ai_weight_value_143 = {	# add_character_modifier_magic_omen_diplomacy_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_omen_diplomacy_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_diplomacy_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_omen_intrigue_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_144 }
 spell_effect_ai_weight_value_144 = {	# add_character_modifier_magic_omen_intrigue_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_omen_intrigue_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_intrigue_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_omen_martial_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_145 }
 spell_effect_ai_weight_value_145 = {	# add_character_modifier_magic_omen_martial_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_omen_martial_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_martial_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 3
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_martial_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_omen_stewardship_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_146 }
 spell_effect_ai_weight_value_146 = {	# add_character_modifier_magic_omen_stewardship_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_omen_stewardship_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_stewardship_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_omen_learning_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_147 }
 spell_effect_ai_weight_value_147 = {	# add_character_modifier_magic_omen_learning_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_omen_learning_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_learning_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.15
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_learning_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_genetics_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_148 }
 spell_effect_ai_weight_value_148 = {	# add_character_modifier_magic_genetics_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_genetics_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magi_siege_value_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_149 }
 spell_effect_ai_weight_value_149 = {	# add_character_modifier_magic_magi_siege_value_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magi_siege_value_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_epidemic_resistance_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_150 }
 spell_effect_ai_weight_value_150 = {	# add_county_modifier_magic_epidemic_resistance_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_epidemic_resistance_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_county_opinion_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_151 }
 spell_effect_ai_weight_value_151 = {	# add_county_modifier_magic_county_opinion_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_county_opinion_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_county_opinion_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_152 }
 spell_effect_ai_weight_value_152 = {	# add_county_modifier_magic_county_opinion_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_county_opinion_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_monthly_county_control_decline_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_153 }
 spell_effect_ai_weight_value_153 = {	# add_county_modifier_magic_monthly_county_control_decline_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_monthly_county_control_decline_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_improve_agriculture_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_154 }
 spell_effect_ai_weight_value_154 = {	# add_county_modifier_improve_agriculture_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = improve_agriculture_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_reduce_agriculture_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_155 }
 spell_effect_ai_weight_value_155 = {	# add_county_modifier_reduce_agriculture_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = reduce_agriculture_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_building_construction_county_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_156 }
 spell_effect_ai_weight_value_156 = {	# add_county_modifier_building_construction_county_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = building_construction_county_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.1
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.building_construction_county_magic_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.building_construction_county_magic_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_defensive_county_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_157 }
 spell_effect_ai_weight_value_157 = {	# add_county_modifier_defensive_county_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = defensive_county_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_decimate_defense_county_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_158 }
 spell_effect_ai_weight_value_158 = {	# add_county_modifier_decimate_defense_county_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = decimate_defense_county_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_fort_creation_county_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_159 }
 spell_effect_ai_weight_value_159 = {	# add_county_modifier_fort_creation_county_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = fort_creation_county_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_long_term_fort_creation_county_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_160 }
 spell_effect_ai_weight_value_160 = {	# add_county_modifier_long_term_fort_creation_county_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = long_term_fort_creation_county_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_backfire_county_debuff_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_161 }
 spell_effect_ai_weight_value_161 = {	# add_county_modifier_backfire_county_debuff_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = backfire_county_debuff_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_backfire_county_debuff_earth_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_162 }
 spell_effect_ai_weight_value_162 = {	# add_county_modifier_backfire_county_debuff_earth_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = backfire_county_debuff_earth_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.05
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.backfire_county_debuff_earth_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.05
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.backfire_county_debuff_earth_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_county_ground_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_163 }
 spell_effect_ai_weight_value_163 = {	# add_county_modifier_county_ground_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_ground_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_ground_positive_earth_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_164 }
 spell_effect_ai_weight_value_164 = {	# add_county_modifier_county_ground_positive_earth_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_ground_positive_earth_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_ground_positive_earth_long_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_165 }
 spell_effect_ai_weight_value_165 = {	# add_county_modifier_county_ground_positive_earth_long_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_ground_positive_earth_long_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.01
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.county_ground_positive_earth_long_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.01
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.county_ground_positive_earth_long_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_county_positive_build_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_166 }
 spell_effect_ai_weight_value_166 = {	# add_county_modifier_county_positive_build_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_positive_build_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.05
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.county_positive_build_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.county_positive_build_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_weather_negative_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_167 }
 spell_effect_ai_weight_value_167 = {	# add_county_modifier_weather_negative_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = weather_negative_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_weather_negative_fire_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_168 }
 spell_effect_ai_weight_value_168 = {	# add_county_modifier_weather_negative_fire_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = weather_negative_fire_magic_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_defender_advantage_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_169 }
 spell_effect_ai_weight_value_169 = {	# add_county_modifier_county_defender_advantage_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_defender_advantage_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_lower_control_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_170 }
 spell_effect_ai_weight_value_170 = {	# add_county_modifier_county_lower_control_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_lower_control_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_lower_control_modifier_livestock_ai_weight_value = { value = spell_effect_ai_weight_value_171 }
 spell_effect_ai_weight_value_171 = {	# add_county_modifier_county_lower_control_modifier_livestock
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_lower_control_modifier_livestock }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_illuminated_night_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_172 }
 spell_effect_ai_weight_value_172 = {	# add_county_modifier_county_illuminated_night_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_illuminated_night_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_county_light_pollution_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_173 }
 spell_effect_ai_weight_value_173 = {	# add_county_modifier_county_light_pollution_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = county_light_pollution_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_lead_to_gold_inflation_min_ai_weight_value = { value = spell_effect_ai_weight_value_174 }
 spell_effect_ai_weight_value_174 = {	# add_county_modifier_lead_to_gold_inflation_min
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = lead_to_gold_inflation_min }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_lead_to_gold_inflation_ai_weight_value = { value = spell_effect_ai_weight_value_175 }
 spell_effect_ai_weight_value_175 = {	# add_county_modifier_lead_to_gold_inflation
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = lead_to_gold_inflation }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_ruined_agriculture_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_176 }
 spell_effect_ai_weight_value_176 = {	# add_county_modifier_magic_ruined_agriculture_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_ruined_agriculture_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_destroyed_buildings_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_177 }
 spell_effect_ai_weight_value_177 = {	# add_county_modifier_magic_destroyed_buildings_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_destroyed_buildings_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_destroyed_buildings_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_destroyed_buildings_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_magic_fogswept_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_178 }
 spell_effect_ai_weight_value_178 = {	# add_county_modifier_magic_fogswept_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_fogswept_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_fogswept_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_province_modifier_magic_shattered_defenses_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_179 }
 spell_effect_ai_weight_value_179 = {	# add_province_modifier_magic_shattered_defenses_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_province_modifier = magic_shattered_defenses_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_magic_corroded_defenses_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_180 }
 spell_effect_ai_weight_value_180 = {	# add_county_modifier_magic_corroded_defenses_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = magic_corroded_defenses_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_glasswinds_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_181 }
 spell_effect_ai_weight_value_181 = {	# add_county_modifier_glasswinds_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = glasswinds_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_resource_exotic_metals_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_182 }
 spell_effect_ai_weight_value_182 = {	# add_county_modifier_resource_exotic_metals_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = resource_exotic_metals_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_resource_abundant_stone_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_183 }
 spell_effect_ai_weight_value_183 = {	# add_county_modifier_resource_abundant_stone_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = resource_abundant_stone_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.02
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.resource_abundant_stone_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_county_modifier_resource_excellent_soil_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_184 }
 spell_effect_ai_weight_value_184 = {	# add_county_modifier_resource_excellent_soil_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = resource_excellent_soil_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_county_modifier_resource_verdant_plant_growth_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_185 }
 spell_effect_ai_weight_value_185 = {	# add_county_modifier_resource_verdant_plant_growth_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_county_modifier = resource_verdant_plant_growth_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_character_monthly_county_control_growth_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_186 }
 spell_effect_ai_weight_value_186 = {	# add_character_modifier_magic_character_monthly_county_control_growth_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_monthly_county_control_growth_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_character_capital_county_monthly_development_growth_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_187 }
 spell_effect_ai_weight_value_187 = {	# add_character_modifier_magic_character_capital_county_monthly_development_growth_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_capital_county_monthly_development_growth_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually use development
					limit = { is_landed = yes }
						add = { # Mostly useful
						value = 0.1
						multiply = 40
						if = {
							limit = { has_trait = diligent }
							multiply = 1.25
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.25
						}
						else_if = {
							limit = { has_trait = content }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = greedy }
							multiply = 1.25
						}
						if = {
							limit = { has_trait = impatient }
							multiply = 1.25
						}
						else_if = {
							limit = { has_trait = patient }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = education_stewardship }
							multiply = 1.25
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_character_capital_county_monthly_development_growth_add_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_character_build_speed_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_188 }
 spell_effect_ai_weight_value_188 = {	# add_character_modifier_magic_character_build_speed_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_character_build_speed_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.1
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_character_build_speed_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_character_build_speed_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_province_modifier_backfire_province_debuff_fire_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_189 }
 spell_effect_ai_weight_value_189 = {	# add_province_modifier_backfire_province_debuff_fire_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_province_modifier = backfire_province_debuff_fire_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_province_modifier_enhanced_farmland_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_190 }
 spell_effect_ai_weight_value_190 = {	# add_province_modifier_enhanced_farmland_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_province_modifier = enhanced_farmland_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_tyranny_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_191 }
 spell_effect_ai_weight_value_191 = {	# add_character_modifier_magic_tyranny_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_tyranny_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_tyranny_loss_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_192 }
 spell_effect_ai_weight_value_192 = {	# add_character_modifier_magic_tyranny_loss_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_tyranny_loss_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_tyranny_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_193 }
 spell_effect_ai_weight_value_193 = {	# add_character_modifier_magic_monthly_tyranny_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_tyranny_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.25
				multiply = -65
				if = {
					limit = { has_trait = just }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = content }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.25
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 0.85
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_monthly_tyranny_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_monthly_tyranny_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_194 }
 spell_effect_ai_weight_value_194 = {	# add_character_modifier_magic_monthly_tyranny_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_tyranny_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.25
				multiply = -65
				if = {
					limit = { has_trait = just }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = content }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.25
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 0.85
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_monthly_tyranny_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_cultural_head_fascination_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_195 }
 spell_effect_ai_weight_value_195 = {	# add_character_modifier_magic_cultural_head_fascination_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_cultural_head_fascination_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_cultural_head_fascination_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_196 }
 spell_effect_ai_weight_value_196 = {	# add_character_modifier_magic_cultural_head_fascination_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_cultural_head_fascination_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 25
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_learning }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = scholar }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_cultural_head_fascination_mult_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_unnatural_shaping_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_197 }
 spell_effect_ai_weight_value_197 = {	# add_character_modifier_magic_unnatural_shaping_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_unnatural_shaping_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -4
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_unnatural_shaping_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -4
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_unnatural_shaping_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_boneshaping_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_198 }
 spell_effect_ai_weight_value_198 = {	# add_character_modifier_magic_boneshaping_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_boneshaping_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_boneshaping_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 1
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_boneshaping_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_defiled_nadir_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_199 }
 spell_effect_ai_weight_value_199 = {	# add_character_modifier_magic_defiled_nadir_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_defiled_nadir_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.1
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_defiled_nadir_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_frozen_experience_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_200 }
 spell_effect_ai_weight_value_200 = {	# add_character_modifier_magic_frozen_experience_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_frozen_experience_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.05
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_arcane_incapacitation_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_201 }
 spell_effect_ai_weight_value_201 = {	# add_character_modifier_magic_arcane_incapacitation_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_arcane_incapacitation_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -12
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_mind_fog_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_202 }
 spell_effect_ai_weight_value_202 = {	# add_character_modifier_magic_mind_fog_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_mind_fog_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_life_extension_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_203 }
 spell_effect_ai_weight_value_203 = {	# add_character_modifier_magic_life_extension_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_life_extension_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_arcane_degeneration_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_204 }
 spell_effect_ai_weight_value_204 = {	# add_character_modifier_magic_arcane_degeneration_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_arcane_degeneration_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.02
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_bodily_modification_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_205 }
 spell_effect_ai_weight_value_205 = {	# add_character_modifier_magic_bodily_modification_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_bodily_modification_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_bodily_modification_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_levy_reinforcement_rate_gain_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_206 }
 spell_effect_ai_weight_value_206 = {	# add_character_modifier_magic_levy_reinforcement_rate_gain_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_levy_reinforcement_rate_gain_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.2
				multiply = 50
				if = {
					limit = { is_at_war = yes }
					multiply = 10
					if = {
						limit = { is_in_ongoing_great_holy_war = yes }
						multiply = 1.2
					}
					if = {
						limit = { any_character_war = { is_leader_in_war = prev } }
						multiply = 1.2
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_levy_reinforcement_rate_gain_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_enemy_hostile_scheme_phase_duration_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_207 }
 spell_effect_ai_weight_value_207 = {	# add_character_modifier_magic_enemy_hostile_scheme_phase_duration_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_enemy_hostile_scheme_phase_duration_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_enemy_hostile_scheme_phase_duration_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_208 }
 spell_effect_ai_weight_value_208 = {	# add_character_modifier_magic_enemy_hostile_scheme_phase_duration_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_enemy_hostile_scheme_phase_duration_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_scheme_discovery_chance_mult_loss_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_209 }
 spell_effect_ai_weight_value_209 = {	# add_character_modifier_magic_scheme_discovery_chance_mult_loss_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_scheme_discovery_chance_mult_loss_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.05
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_scheme_discovery_chance_mult_loss_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_monthly_prestige_gain_per_dread_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_210 }
 spell_effect_ai_weight_value_210 = {	# add_character_modifier_magic_monthly_prestige_gain_per_dread_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_prestige_gain_per_dread_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monthly_dread_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_211 }
 spell_effect_ai_weight_value_211 = {	# add_character_modifier_magic_monthly_dread_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_dread_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 50
				if = {
					limit = { dread = 100 }
					multiply = 0.5
				}
				if = {
					limit = { has_trait = just }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = content }
					multiply = 0.5
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 0.5
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 1.5
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 2
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = torturer }
					multiply = 2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_monthly_dread_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_monthly_lifestyle_xp_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_212 }
 spell_effect_ai_weight_value_212 = {	# add_character_modifier_magic_monthly_lifestyle_xp_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monthly_lifestyle_xp_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.1
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_monthly_lifestyle_xp_gain_mult_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_lifestyle_xp_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_213 }
 spell_effect_ai_weight_value_213 = {	# add_character_modifier_magic_intrigue_lifestyle_xp_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_lifestyle_xp_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_lifestyle_xp_gain_mult_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_214 }
 spell_effect_ai_weight_value_214 = {	# add_character_modifier_magic_stewardship_lifestyle_xp_gain_mult_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_lifestyle_xp_gain_mult_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_215 }
 spell_effect_ai_weight_value_215 = {	# add_character_modifier_magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_martial_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_216 }
 spell_effect_ai_weight_value_216 = {	# add_character_modifier_magic_martial_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_martial_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_stewardship_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_217 }
 spell_effect_ai_weight_value_217 = {	# add_character_modifier_magic_stewardship_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_stewardship_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_intrigue_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_218 }
 spell_effect_ai_weight_value_218 = {	# add_character_modifier_magic_intrigue_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_intrigue_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_learning_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_219 }
 spell_effect_ai_weight_value_219 = {	# add_character_modifier_magic_learning_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_learning_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_arcana_lifestyle_xp_gain_mult_negative_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_220 }
 spell_effect_ai_weight_value_220 = {	# add_character_modifier_magic_arcana_lifestyle_xp_gain_mult_negative_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_arcana_lifestyle_xp_gain_mult_negative_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_shard_exhaustion_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_221 }
 spell_effect_ai_weight_value_221 = {	# add_character_modifier_shard_exhaustion_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = shard_exhaustion_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.shard_exhaustion_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.shard_exhaustion_modifier_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_character_modifier_communication_shards_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_222 }
 spell_effect_ai_weight_value_222 = {	# add_character_modifier_communication_shards_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = communication_shards_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_title_creation_cost_mult_positive_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_223 }
 spell_effect_ai_weight_value_223 = {	# add_character_modifier_title_creation_cost_mult_positive_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = title_creation_cost_mult_positive_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_resistance_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_224 }
 spell_effect_ai_weight_value_224 = {	# add_character_modifier_magic_resistance_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_character_modifier_magic_penetration_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_225 }
 spell_effect_ai_weight_value_225 = {	# add_character_modifier_magic_penetration_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_character_modifier_magic_battle_death_chance_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_226 }
 spell_effect_ai_weight_value_226 = {	# add_character_modifier_magic_battle_death_chance_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_character_modifier_enemy_knight_kill_chance_magic_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_227 }
 spell_effect_ai_weight_value_227 = {	# add_character_modifier_enemy_knight_kill_chance_magic_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_character_modifier_magic_vassalization_acceptance_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_228 }
 spell_effect_ai_weight_value_228 = {	# add_character_modifier_magic_vassalization_acceptance_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_county_modifier_magic_arcane_fallout_reduction_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_229 }
 spell_effect_ai_weight_value_229 = {	# add_county_modifier_magic_arcane_fallout_reduction_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_county_modifier_magic_habitability_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_230 }
 spell_effect_ai_weight_value_230 = {	# add_county_modifier_magic_habitability_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_character_modifier_raid_capture_improvement_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_231 }
 spell_effect_ai_weight_value_231 = {	# add_character_modifier_raid_capture_improvement_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_artifact_modifier_magic_health_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_232 }
 spell_effect_ai_weight_value_232 = {	# add_artifact_modifier_magic_health_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_health_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_health_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_233 }
 spell_effect_ai_weight_value_233 = {	# add_artifact_modifier_magic_health_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_health_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 0.5
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_health_resistance_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_health_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_234 }
 spell_effect_ai_weight_value_234 = {	# add_artifact_modifier_magic_health_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_health_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_health_loss_minor_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_235 }
 spell_effect_ai_weight_value_235 = {	# add_artifact_modifier_magic_health_loss_minor_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_health_loss_minor_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stress_negative_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_236 }
 spell_effect_ai_weight_value_236 = {	# add_artifact_modifier_magic_stress_negative_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stress_negative_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_negative_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stress_positive_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_237 }
 spell_effect_ai_weight_value_237 = {	# add_artifact_modifier_magic_stress_positive_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stress_positive_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_positive_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stress_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_238 }
 spell_effect_ai_weight_value_238 = {	# add_artifact_modifier_magic_stress_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stress_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stress_gain_mult_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stress_loss_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_239 }
 spell_effect_ai_weight_value_239 = {	# add_artifact_modifier_magic_stress_loss_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stress_loss_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stress_loss_mult_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_virility_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_240 }
 spell_effect_ai_weight_value_240 = {	# add_artifact_modifier_magic_virility_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_virility_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_virility_opinion_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_viagra_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_241 }
 spell_effect_ai_weight_value_241 = {	# add_artifact_modifier_magic_viagra_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_viagra_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_general_boost_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_242 }
 spell_effect_ai_weight_value_242 = {	# add_artifact_modifier_magic_general_boost_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_general_boost_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_boost_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_diplomacy_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_243 }
 spell_effect_ai_weight_value_243 = {	# add_artifact_modifier_magic_diplomacy_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_diplomacy_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_diplomacy_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_diplomacy_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_244 }
 spell_effect_ai_weight_value_244 = {	# add_artifact_modifier_magic_diplomacy_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_diplomacy_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_diplomacy_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_245 }
 spell_effect_ai_weight_value_245 = {	# add_artifact_modifier_magic_diplomacy_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_diplomacy_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_diplomacy_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_diplomacy_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_246 }
 spell_effect_ai_weight_value_246 = {	# add_artifact_modifier_magic_diplomacy_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_diplomacy_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_diplomacy_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_animal_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_247 }
 spell_effect_ai_weight_value_247 = {	# add_artifact_modifier_magic_martial_animal_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_animal_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_animal_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_248 }
 spell_effect_ai_weight_value_248 = {	# add_artifact_modifier_magic_martial_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_249 }
 spell_effect_ai_weight_value_249 = {	# add_artifact_modifier_magic_martial_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_250 }
 spell_effect_ai_weight_value_250 = {	# add_artifact_modifier_magic_martial_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_martial_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_251 }
 spell_effect_ai_weight_value_251 = {	# add_artifact_modifier_magic_martial_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_martial_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_252 }
 spell_effect_ai_weight_value_252 = {	# add_artifact_modifier_magic_stewardship_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stewardship_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_253 }
 spell_effect_ai_weight_value_253 = {	# add_artifact_modifier_magic_stewardship_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_254 }
 spell_effect_ai_weight_value_254 = {	# add_artifact_modifier_magic_stewardship_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_stewardship_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_255 }
 spell_effect_ai_weight_value_255 = {	# add_artifact_modifier_magic_stewardship_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_stewardship_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_animal_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_256 }
 spell_effect_ai_weight_value_256 = {	# add_artifact_modifier_magic_intrigue_animal_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_animal_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_animal_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_257 }
 spell_effect_ai_weight_value_257 = {	# add_artifact_modifier_magic_intrigue_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_258 }
 spell_effect_ai_weight_value_258 = {	# add_artifact_modifier_magic_intrigue_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_259 }
 spell_effect_ai_weight_value_259 = {	# add_artifact_modifier_magic_intrigue_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_intrigue_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_260 }
 spell_effect_ai_weight_value_260 = {	# add_artifact_modifier_magic_intrigue_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_intrigue_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_learning_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_261 }
 spell_effect_ai_weight_value_261 = {	# add_artifact_modifier_magic_learning_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_learning_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_learning_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_learning_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_262 }
 spell_effect_ai_weight_value_262 = {	# add_artifact_modifier_magic_learning_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_learning_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_learning_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_263 }
 spell_effect_ai_weight_value_263 = {	# add_artifact_modifier_magic_learning_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_learning_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_learning_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_learning_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_264 }
 spell_effect_ai_weight_value_264 = {	# add_artifact_modifier_magic_learning_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_learning_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_learning_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_prowess_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_265 }
 spell_effect_ai_weight_value_265 = {	# add_artifact_modifier_magic_prowess_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_prowess_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 3
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_prowess_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_prowess_resistance_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_266 }
 spell_effect_ai_weight_value_266 = {	# add_artifact_modifier_magic_prowess_resistance_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_prowess_resistance_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_prowess_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_267 }
 spell_effect_ai_weight_value_267 = {	# add_artifact_modifier_magic_prowess_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_prowess_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = -3
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_prowess_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_prowess_gain_per_piety_level_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_268 }
 spell_effect_ai_weight_value_268 = {	# add_artifact_modifier_magic_prowess_gain_per_piety_level_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_prowess_gain_per_piety_level_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				multiply = piety_level

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_prowess_gain_per_piety_level_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_attraction_opinion_physical_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_269 }
 spell_effect_ai_weight_value_269 = {	# add_artifact_modifier_magic_attraction_opinion_physical_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_attraction_opinion_physical_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_attraction_opinion_physical_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_attraction_opinion_social_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_270 }
 spell_effect_ai_weight_value_270 = {	# add_artifact_modifier_magic_attraction_opinion_social_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_attraction_opinion_social_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_attraction_opinion_social_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_close_relative_opinion_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_271 }
 spell_effect_ai_weight_value_271 = {	# add_artifact_modifier_magic_close_relative_opinion_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_close_relative_opinion_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_child_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_272 }
 spell_effect_ai_weight_value_272 = {	# add_artifact_modifier_magic_child_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_child_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_spouse_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_273 }
 spell_effect_ai_weight_value_273 = {	# add_artifact_modifier_magic_spouse_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_spouse_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_house_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_274 }
 spell_effect_ai_weight_value_274 = {	# add_artifact_modifier_magic_house_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_house_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_dynasty_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_275 }
 spell_effect_ai_weight_value_275 = {	# add_artifact_modifier_magic_dynasty_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_dynasty_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_general_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_276 }
 spell_effect_ai_weight_value_276 = {	# add_artifact_modifier_magic_general_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_general_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_general_opinion_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_realm_opinion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_277 }
 spell_effect_ai_weight_value_277 = {	# add_artifact_modifier_magic_realm_opinion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_realm_opinion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must not be a top liege
					limit = { is_independent_ruler = no }
					add = {
						value = 5
						multiply = 0.65
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_realm_opinion_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_internal_strife_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_278 }
 spell_effect_ai_weight_value_278 = {	# add_artifact_modifier_magic_internal_strife_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_internal_strife_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_internal_strife_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must not be a top liege
					limit = { is_independent_ruler = no }
					add = {
						value = -5
						multiply = 0.65
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_internal_strife_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_external_condemnation_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_279 }
 spell_effect_ai_weight_value_279 = {	# add_artifact_modifier_magic_external_condemnation_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_external_condemnation_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -5
				multiply = 0.3
				if = {
					limit = { has_trait = ambitious }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.15
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.45
				}
				if = {
					limit = {
						OR = {
							has_trait = stubborn
							has_trait = fickle
						}
					}
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = eccentric }
					multiply = 0.45
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.35
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_external_condemnation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_diplomacy_magic_modifier_seduction_positive_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_280 }
 spell_effect_ai_weight_value_280 = {	# add_artifact_modifier_diplomacy_magic_modifier_seduction_positive_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = diplomacy_magic_modifier_seduction_positive_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_seduction_positive_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_diplomacy_magic_modifier_seduction_negative_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_281 }
 spell_effect_ai_weight_value_281 = {	# add_artifact_modifier_diplomacy_magic_modifier_seduction_negative_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = diplomacy_magic_modifier_seduction_negative_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_seduction_negative_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_diplomacy_magic_modifier_vassal_opinion_positive_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_282 }
 spell_effect_ai_weight_value_282 = {	# add_artifact_modifier_diplomacy_magic_modifier_vassal_opinion_positive_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = diplomacy_magic_modifier_vassal_opinion_positive_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.diplomacy_magic_modifier_vassal_opinion_positive_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_religious_fanaticism_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_283 }
 spell_effect_ai_weight_value_283 = {	# add_artifact_modifier_religious_fanaticism_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = religious_fanaticism_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.religious_fanaticism_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_melodious_voice_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_284 }
 spell_effect_ai_weight_value_284 = {	# add_artifact_modifier_melodious_voice_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = melodious_voice_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.melodious_voice_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.melodious_voice_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_glassinger_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_285 }
 spell_effect_ai_weight_value_285 = {	# add_artifact_modifier_glassinger_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = glassinger_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.glassinger_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.glassinger_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_character_county_opinion_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_286 }
 spell_effect_ai_weight_value_286 = {	# add_artifact_modifier_character_county_opinion_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = character_county_opinion_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_short_reign_duration_mult_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_287 }
 spell_effect_ai_weight_value_287 = {	# add_artifact_modifier_short_reign_duration_mult_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = short_reign_duration_mult_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_court_grandeur_baseline_add_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_288 }
 spell_effect_ai_weight_value_288 = {	# add_artifact_modifier_court_grandeur_baseline_add_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = court_grandeur_baseline_add_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_character_travel_safety_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_289 }
 spell_effect_ai_weight_value_289 = {	# add_artifact_modifier_magic_character_travel_safety_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_travel_safety_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_character_travel_safety_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_290 }
 spell_effect_ai_weight_value_290 = {	# add_artifact_modifier_magic_character_travel_safety_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_travel_safety_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_character_travel_speed_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_291 }
 spell_effect_ai_weight_value_291 = {	# add_artifact_modifier_magic_character_travel_speed_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_travel_speed_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_travel_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_292 }
 spell_effect_ai_weight_value_292 = {	# add_artifact_modifier_travel_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = travel_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_travel_disadvantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_293 }
 spell_effect_ai_weight_value_293 = {	# add_artifact_modifier_travel_disadvantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = travel_disadvantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_pane_of_passage_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_294 }
 spell_effect_ai_weight_value_294 = {	# add_artifact_modifier_pane_of_passage_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = pane_of_passage_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_murder_scheme_power_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_295 }
 spell_effect_ai_weight_value_295 = {	# add_artifact_modifier_magic_murder_scheme_power_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_murder_scheme_power_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_seduce_scheme_power_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_296 }
 spell_effect_ai_weight_value_296 = {	# add_artifact_modifier_magic_seduce_scheme_power_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_seduce_scheme_power_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_hostile_scheme_discovery_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_297 }
 spell_effect_ai_weight_value_297 = {	# add_artifact_modifier_magic_hostile_scheme_discovery_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_hostile_scheme_discovery_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_hostile_scheme_discovery_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_vengeance_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_298 }
 spell_effect_ai_weight_value_298 = {	# add_artifact_modifier_magic_vengeance_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_vengeance_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_haunting_power_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_299 }
 spell_effect_ai_weight_value_299 = {	# add_artifact_modifier_haunting_power_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = haunting_power_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_brave_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_300 }
 spell_effect_ai_weight_value_300 = {	# add_artifact_modifier_magic_trait_synergy_brave_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_brave_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_brave_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_craven_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_301 }
 spell_effect_ai_weight_value_301 = {	# add_artifact_modifier_magic_trait_synergy_craven_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_craven_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_craven_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_craven_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_calm_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_302 }
 spell_effect_ai_weight_value_302 = {	# add_artifact_modifier_magic_trait_synergy_calm_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_calm_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_calm_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_wrathful_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_303 }
 spell_effect_ai_weight_value_303 = {	# add_artifact_modifier_magic_trait_synergy_wrathful_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_wrathful_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_wrathful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_wrathful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_chaste_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_304 }
 spell_effect_ai_weight_value_304 = {	# add_artifact_modifier_magic_trait_synergy_chaste_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_chaste_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.5
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_chaste_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.5
				multiply = piety_level
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_chaste_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_lustful_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_305 }
 spell_effect_ai_weight_value_305 = {	# add_artifact_modifier_magic_trait_synergy_lustful_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_lustful_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lustful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lustful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_content_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_306 }
 spell_effect_ai_weight_value_306 = {	# add_artifact_modifier_magic_trait_synergy_content_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_content_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.25
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_content_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_ambitious_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_307 }
 spell_effect_ai_weight_value_307 = {	# add_artifact_modifier_magic_trait_synergy_ambitious_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_ambitious_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.25
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_ambitious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_diligent_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_308 }
 spell_effect_ai_weight_value_308 = {	# add_artifact_modifier_magic_trait_synergy_diligent_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_diligent_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.15
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_diligent_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_lazy_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_309 }
 spell_effect_ai_weight_value_309 = {	# add_artifact_modifier_magic_trait_synergy_lazy_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_lazy_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.8
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_lazy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_fickle_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_310 }
 spell_effect_ai_weight_value_310 = {	# add_artifact_modifier_magic_trait_synergy_fickle_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_fickle_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_fickle_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_stubborn_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_311 }
 spell_effect_ai_weight_value_311 = {	# add_artifact_modifier_magic_trait_synergy_stubborn_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_stubborn_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 0.25
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -2
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_stubborn_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_forgiving_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_312 }
 spell_effect_ai_weight_value_312 = {	# add_artifact_modifier_magic_trait_synergy_forgiving_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_forgiving_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_forgiving_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_forgiving_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_vengeful_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_313 }
 spell_effect_ai_weight_value_313 = {	# add_artifact_modifier_magic_trait_synergy_vengeful_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_vengeful_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_vengeful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_generous_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_314 }
 spell_effect_ai_weight_value_314 = {	# add_artifact_modifier_magic_trait_synergy_generous_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_generous_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_generous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_generous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_greedy_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_315 }
 spell_effect_ai_weight_value_315 = {	# add_artifact_modifier_magic_trait_synergy_greedy_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_greedy_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_greedy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_greedy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_gregarious_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_316 }
 spell_effect_ai_weight_value_316 = {	# add_artifact_modifier_magic_trait_synergy_gregarious_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_gregarious_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gregarious_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_shy_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_317 }
 spell_effect_ai_weight_value_317 = {	# add_artifact_modifier_magic_trait_synergy_shy_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_shy_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_shy_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_honest_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_318 }
 spell_effect_ai_weight_value_318 = {	# add_artifact_modifier_magic_trait_synergy_honest_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_honest_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_honest_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_deceitful_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_319 }
 spell_effect_ai_weight_value_319 = {	# add_artifact_modifier_magic_trait_synergy_deceitful_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_deceitful_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_deceitful_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_humble_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_320 }
 spell_effect_ai_weight_value_320 = {	# add_artifact_modifier_magic_trait_synergy_humble_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_humble_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_humble_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_arrogant_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_321 }
 spell_effect_ai_weight_value_321 = {	# add_artifact_modifier_magic_trait_synergy_arrogant_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_arrogant_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -2
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arrogant_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_just_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_322 }
 spell_effect_ai_weight_value_322 = {	# add_artifact_modifier_magic_trait_synergy_just_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_just_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_just_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_arbitrary_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_323 }
 spell_effect_ai_weight_value_323 = {	# add_artifact_modifier_magic_trait_synergy_arbitrary_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_arbitrary_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.25
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -2
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_arbitrary_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_patient_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_324 }
 spell_effect_ai_weight_value_324 = {	# add_artifact_modifier_magic_trait_synergy_patient_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_patient_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_patient_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = 5
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_patient_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_impatient_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_325 }
 spell_effect_ai_weight_value_325 = {	# add_artifact_modifier_magic_trait_synergy_impatient_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_impatient_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_temperate_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_326 }
 spell_effect_ai_weight_value_326 = {	# add_artifact_modifier_magic_trait_synergy_temperate_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_temperate_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_temperate_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_temperate_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_gluttonous_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_327 }
 spell_effect_ai_weight_value_327 = {	# add_artifact_modifier_magic_trait_synergy_gluttonous_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_gluttonous_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.25
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_gluttonous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_gluttonous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_trusting_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_328 }
 spell_effect_ai_weight_value_328 = {	# add_artifact_modifier_magic_trait_synergy_trusting_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_trusting_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_trusting_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_paranoid_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_329 }
 spell_effect_ai_weight_value_329 = {	# add_artifact_modifier_magic_trait_synergy_paranoid_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_paranoid_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.33
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.15
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_paranoid_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_zealous_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_330 }
 spell_effect_ai_weight_value_330 = {	# add_artifact_modifier_magic_trait_synergy_zealous_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_zealous_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_zealous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_cynical_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_331 }
 spell_effect_ai_weight_value_331 = {	# add_artifact_modifier_magic_trait_synergy_cynical_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_cynical_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_cynical_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_cynical_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_compassionate_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_332 }
 spell_effect_ai_weight_value_332 = {	# add_artifact_modifier_magic_trait_synergy_compassionate_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_compassionate_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_compassionate_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_callous_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_333 }
 spell_effect_ai_weight_value_333 = {	# add_artifact_modifier_magic_trait_synergy_callous_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_callous_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_callous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_callous_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_sadistic_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_334 }
 spell_effect_ai_weight_value_334 = {	# add_artifact_modifier_magic_trait_synergy_sadistic_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_sadistic_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -5
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_sadistic_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_trait_synergy_eccentric_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_335 }
 spell_effect_ai_weight_value_335 = {	# add_artifact_modifier_magic_trait_synergy_eccentric_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_trait_synergy_eccentric_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_trait_synergy_eccentric_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_battle_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_336 }
 spell_effect_ai_weight_value_336 = {	# add_artifact_modifier_magic_battle_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_battle_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_battle_magic_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.25
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_battle_magic_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_enhanced_fatality_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_337 }
 spell_effect_ai_weight_value_337 = {	# add_artifact_modifier_magic_enhanced_fatality_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_enhanced_fatality_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.15
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_enhanced_fatality_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_hard_casualty_modifier_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_338 }
 spell_effect_ai_weight_value_338 = {	# add_artifact_modifier_magic_hard_casualty_modifier_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_hard_casualty_modifier_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_hard_casualty_modifier_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_hard_casualty_modifier_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_339 }
 spell_effect_ai_weight_value_339 = {	# add_artifact_modifier_magic_hard_casualty_modifier_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_hard_casualty_modifier_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = -0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_hard_casualty_modifier_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_dry_terrain_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_340 }
 spell_effect_ai_weight_value_340 = {	# add_artifact_modifier_dry_terrain_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = dry_terrain_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_forest_terrain_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_341 }
 spell_effect_ai_weight_value_341 = {	# add_artifact_modifier_forest_terrain_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = forest_terrain_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_water_magic_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_342 }
 spell_effect_ai_weight_value_342 = {	# add_artifact_modifier_water_magic_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = water_magic_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_water_magic_disadvantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_343 }
 spell_effect_ai_weight_value_343 = {	# add_artifact_modifier_water_magic_disadvantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = water_magic_disadvantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_sailing_magic_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_344 }
 spell_effect_ai_weight_value_344 = {	# add_artifact_modifier_sailing_magic_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = sailing_magic_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_sailing_magic_disadvantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_345 }
 spell_effect_ai_weight_value_345 = {	# add_artifact_modifier_sailing_magic_disadvantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = sailing_magic_disadvantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_slow_army_movement_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_346 }
 spell_effect_ai_weight_value_346 = {	# add_artifact_modifier_slow_army_movement_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = slow_army_movement_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_movement_speed_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_347 }
 spell_effect_ai_weight_value_347 = {	# add_artifact_modifier_movement_speed_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = movement_speed_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_hasten_raid_speed_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_348 }
 spell_effect_ai_weight_value_348 = {	# add_artifact_modifier_hasten_raid_speed_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = hasten_raid_speed_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_rocky_terrain_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_349 }
 spell_effect_ai_weight_value_349 = {	# add_artifact_modifier_rocky_terrain_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = rocky_terrain_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_negate_enemy_advantage_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_350 }
 spell_effect_ai_weight_value_350 = {	# add_artifact_modifier_negate_enemy_advantage_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = negate_enemy_advantage_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_knight_effectiveness_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_351 }
 spell_effect_ai_weight_value_351 = {	# add_artifact_modifier_knight_effectiveness_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = knight_effectiveness_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_army_damage_magic_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_352 }
 spell_effect_ai_weight_value_352 = {	# add_artifact_modifier_army_damage_magic_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = army_damage_magic_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_army_damage_negative_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_353 }
 spell_effect_ai_weight_value_353 = {	# add_artifact_modifier_army_damage_negative_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = army_damage_negative_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_army_toughness_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_354 }
 spell_effect_ai_weight_value_354 = {	# add_artifact_modifier_army_toughness_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = army_toughness_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.05
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.army_toughness_magic_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magi_siege_value_add_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_355 }
 spell_effect_ai_weight_value_355 = {	# add_artifact_modifier_magi_siege_value_add_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magi_siege_value_add_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_siege_weapon_siege_value_add_magic_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_356 }
 spell_effect_ai_weight_value_356 = {	# add_artifact_modifier_siege_weapon_siege_value_add_magic_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = siege_weapon_siege_value_add_magic_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_abstruse_survivability_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_357 }
 spell_effect_ai_weight_value_357 = {	# add_artifact_modifier_abstruse_survivability_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = abstruse_survivability_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = -0.05
						multiply = -20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.abstruse_survivability_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }
					add = {
						value = 0.1
						multiply = 20
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.abstruse_survivability_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_men_at_arms_recruitment_cost_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_358 }
 spell_effect_ai_weight_value_358 = {	# add_artifact_modifier_men_at_arms_recruitment_cost_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = men_at_arms_recruitment_cost_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_siege_phase_time_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_359 }
 spell_effect_ai_weight_value_359 = {	# add_artifact_modifier_siege_phase_time_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = siege_phase_time_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_attacker_advantage_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_360 }
 spell_effect_ai_weight_value_360 = {	# add_artifact_modifier_attacker_advantage_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = attacker_advantage_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_dynasty_prestige_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_361 }
 spell_effect_ai_weight_value_361 = {	# add_artifact_modifier_magic_monthly_dynasty_prestige_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_dynasty_prestige_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_dynasty_prestige_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_362 }
 spell_effect_ai_weight_value_362 = {	# add_artifact_modifier_magic_monthly_dynasty_prestige_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_dynasty_prestige_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_income_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_363 }
 spell_effect_ai_weight_value_363 = {	# add_artifact_modifier_magic_monthly_income_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_income_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_income_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_364 }
 spell_effect_ai_weight_value_364 = {	# add_artifact_modifier_magic_monthly_income_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_income_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_income_loss_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_365 }
 spell_effect_ai_weight_value_365 = {	# add_artifact_modifier_magic_monthly_income_loss_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_income_loss_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_piety_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_366 }
 spell_effect_ai_weight_value_366 = {	# add_artifact_modifier_magic_monthly_piety_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_piety_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_piety_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_367 }
 spell_effect_ai_weight_value_367 = {	# add_artifact_modifier_magic_monthly_piety_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_piety_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_piety_loss_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_368 }
 spell_effect_ai_weight_value_368 = {	# add_artifact_modifier_magic_monthly_piety_loss_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_piety_loss_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_prestige_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_369 }
 spell_effect_ai_weight_value_369 = {	# add_artifact_modifier_magic_monthly_prestige_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_prestige_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_prestige_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_370 }
 spell_effect_ai_weight_value_370 = {	# add_artifact_modifier_magic_monthly_prestige_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_prestige_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_prestige_loss_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_371 }
 spell_effect_ai_weight_value_371 = {	# add_artifact_modifier_magic_monthly_prestige_loss_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_prestige_loss_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_omen_diplomacy_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_372 }
 spell_effect_ai_weight_value_372 = {	# add_artifact_modifier_magic_omen_diplomacy_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_omen_diplomacy_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_diplomacy_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_omen_intrigue_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_373 }
 spell_effect_ai_weight_value_373 = {	# add_artifact_modifier_magic_omen_intrigue_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_omen_intrigue_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_intrigue_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_omen_martial_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_374 }
 spell_effect_ai_weight_value_374 = {	# add_artifact_modifier_magic_omen_martial_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_omen_martial_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_martial_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 3
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_martial_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_omen_stewardship_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_375 }
 spell_effect_ai_weight_value_375 = {	# add_artifact_modifier_magic_omen_stewardship_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_omen_stewardship_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_stewardship_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_omen_learning_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_376 }
 spell_effect_ai_weight_value_376 = {	# add_artifact_modifier_magic_omen_learning_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_omen_learning_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 3
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_learning_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.15
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_omen_learning_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_genetics_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_377 }
 spell_effect_ai_weight_value_377 = {	# add_artifact_modifier_magic_genetics_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_genetics_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_magi_siege_value_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_378 }
 spell_effect_ai_weight_value_378 = {	# add_artifact_modifier_magic_magi_siege_value_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_magi_siege_value_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_character_monthly_county_control_growth_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_379 }
 spell_effect_ai_weight_value_379 = {	# add_artifact_modifier_magic_character_monthly_county_control_growth_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_monthly_county_control_growth_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_character_capital_county_monthly_development_growth_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_380 }
 spell_effect_ai_weight_value_380 = {	# add_artifact_modifier_magic_character_capital_county_monthly_development_growth_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_capital_county_monthly_development_growth_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Must actually use development
					limit = { is_landed = yes }
						add = { # Mostly useful
						value = 0.1
						multiply = 40
						if = {
							limit = { has_trait = diligent }
							multiply = 1.25
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.25
						}
						else_if = {
							limit = { has_trait = content }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = greedy }
							multiply = 1.25
						}
						if = {
							limit = { has_trait = impatient }
							multiply = 1.25
						}
						else_if = {
							limit = { has_trait = patient }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = education_stewardship }
							multiply = 1.25
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_character_capital_county_monthly_development_growth_add_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_character_build_speed_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_381 }
 spell_effect_ai_weight_value_381 = {	# add_artifact_modifier_magic_character_build_speed_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_character_build_speed_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.1
				multiply = -8
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.75
				}
				if = {
					limit = { has_trait = impatient }
					multiply = 1.65
				}
				else_if = {
					limit = { has_trait = patient }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.45
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 0.85
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 1.55
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_character_build_speed_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -22
				if = {
					limit = { has_trait = greedy }
					multiply = 1.65
				}
				if = {
					limit = { has_trait = architect }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_stewardship }
					multiply = 1.25
				}
				if = {
					limit = { gold < cheap_building_tier_1_cost }
					multiply = 1.45
					if = {
						limit = { gold < 0 }
						multiply = 0
					}
				}
				else_if = {
					limit = { gold > expensive_building_tier_3_cost }
					multiply = 0.75
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_character_build_speed_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_tyranny_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_382 }
 spell_effect_ai_weight_value_382 = {	# add_artifact_modifier_magic_tyranny_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_tyranny_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_tyranny_loss_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_383 }
 spell_effect_ai_weight_value_383 = {	# add_artifact_modifier_magic_tyranny_loss_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_tyranny_loss_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_tyranny_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_384 }
 spell_effect_ai_weight_value_384 = {	# add_artifact_modifier_magic_monthly_tyranny_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_tyranny_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.25
				multiply = -65
				if = {
					limit = { has_trait = just }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = content }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.25
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 0.85
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_monthly_tyranny_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_tyranny_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_385 }
 spell_effect_ai_weight_value_385 = {	# add_artifact_modifier_magic_monthly_tyranny_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_tyranny_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.25
				multiply = -65
				if = {
					limit = { has_trait = just }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = content }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 1.25
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 0.85
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 0.25
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.85
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 0.85
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_monthly_tyranny_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_cultural_head_fascination_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_386 }
 spell_effect_ai_weight_value_386 = {	# add_artifact_modifier_magic_cultural_head_fascination_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_cultural_head_fascination_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_cultural_head_fascination_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_387 }
 spell_effect_ai_weight_value_387 = {	# add_artifact_modifier_magic_cultural_head_fascination_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_cultural_head_fascination_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 25
				if = {
					limit = { has_trait = diligent }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = education_learning }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = scholar }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_cultural_head_fascination_mult_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_unnatural_shaping_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_388 }
 spell_effect_ai_weight_value_388 = {	# add_artifact_modifier_magic_unnatural_shaping_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_unnatural_shaping_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -4
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_unnatural_shaping_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -4
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_unnatural_shaping_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_boneshaping_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_389 }
 spell_effect_ai_weight_value_389 = {	# add_artifact_modifier_magic_boneshaping_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_boneshaping_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = {
					value = 1
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_boneshaping_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = { is_commanding_army = yes }	# Maybe there's situations where you'd want to ensure an advantage bonus "in advance" (i.e. before being assigned to an army), but overall this bonus is worthless outside of battle
					add = 1
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_boneshaping_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_defiled_nadir_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_390 }
 spell_effect_ai_weight_value_390 = {	# add_artifact_modifier_magic_defiled_nadir_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_defiled_nadir_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.1
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_defiled_nadir_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_frozen_experience_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_391 }
 spell_effect_ai_weight_value_391 = {	# add_artifact_modifier_magic_frozen_experience_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_frozen_experience_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.05
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_frozen_experience_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_arcane_incapacitation_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_392 }
 spell_effect_ai_weight_value_392 = {	# add_artifact_modifier_magic_arcane_incapacitation_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_arcane_incapacitation_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -12
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_incapacitation_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_mind_fog_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_393 }
 spell_effect_ai_weight_value_393 = {	# add_artifact_modifier_magic_mind_fog_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_mind_fog_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_mind_fog_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_life_extension_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_394 }
 spell_effect_ai_weight_value_394 = {	# add_artifact_modifier_magic_life_extension_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_life_extension_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = 0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_arcane_degeneration_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_395 }
 spell_effect_ai_weight_value_395 = {	# add_artifact_modifier_magic_arcane_degeneration_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_arcane_degeneration_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -0.02
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.05
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_arcane_degeneration_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_bodily_modification_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_396 }
 spell_effect_ai_weight_value_396 = {	# add_artifact_modifier_magic_bodily_modification_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_bodily_modification_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -2
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_bodily_modification_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_levy_reinforcement_rate_gain_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_397 }
 spell_effect_ai_weight_value_397 = {	# add_artifact_modifier_magic_levy_reinforcement_rate_gain_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_levy_reinforcement_rate_gain_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.2
				multiply = 50
				if = {
					limit = { is_at_war = yes }
					multiply = 10
					if = {
						limit = { is_in_ongoing_great_holy_war = yes }
						multiply = 1.2
					}
					if = {
						limit = { any_character_war = { is_leader_in_war = prev } }
						multiply = 1.2
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_levy_reinforcement_rate_gain_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_enemy_hostile_scheme_phase_duration_add_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_398 }
 spell_effect_ai_weight_value_398 = {	# add_artifact_modifier_magic_enemy_hostile_scheme_phase_duration_add_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_enemy_hostile_scheme_phase_duration_add_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_enemy_hostile_scheme_phase_duration_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_399 }
 spell_effect_ai_weight_value_399 = {	# add_artifact_modifier_magic_enemy_hostile_scheme_phase_duration_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_enemy_hostile_scheme_phase_duration_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_scheme_discovery_chance_mult_loss_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_400 }
 spell_effect_ai_weight_value_400 = {	# add_artifact_modifier_magic_scheme_discovery_chance_mult_loss_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_scheme_discovery_chance_mult_loss_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = -0.05
				multiply = 12
				if = {
					limit = { has_trait = paranoid }
					multiply = 2.25
				}
				else_if = {
					limit = { has_trait = trusting }
					multiply = 0.75
				}
				if = {
					limit = { num_of_relation_rival > 0 }
					multiply = 1.25
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.magic_scheme_discovery_chance_mult_loss_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_prestige_gain_per_dread_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_401 }
 spell_effect_ai_weight_value_401 = {	# add_artifact_modifier_magic_monthly_prestige_gain_per_dread_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_prestige_gain_per_dread_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_dread_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_402 }
 spell_effect_ai_weight_value_402 = {	# add_artifact_modifier_magic_monthly_dread_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_dread_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = 50
				if = {
					limit = { dread = 100 }
					multiply = 0.5
				}
				if = {
					limit = { has_trait = just }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = content }
					multiply = 0.5
				}
				if = {
					limit = { has_trait = compassionate }
					multiply = 0.5
				}
				else_if = {
					limit = { has_trait = callous }
					multiply = 1.5
				}
				else_if = {
					limit = { has_trait = sadistic }
					multiply = 2
				}
				if = {
					limit = { has_trait = arrogant }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 1.25
				}
				if = {
					limit = { has_trait = overseer }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = torturer }
					multiply = 2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_monthly_dread_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_monthly_lifestyle_xp_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_403 }
 spell_effect_ai_weight_value_403 = {	# add_artifact_modifier_magic_monthly_lifestyle_xp_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_monthly_lifestyle_xp_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = 0.1
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = scope:spell_effect.magic_monthly_lifestyle_xp_gain_mult_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_lifestyle_xp_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_404 }
 spell_effect_ai_weight_value_404 = {	# add_artifact_modifier_magic_intrigue_lifestyle_xp_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_lifestyle_xp_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_lifestyle_xp_gain_mult_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_405 }
 spell_effect_ai_weight_value_405 = {	# add_artifact_modifier_magic_stewardship_lifestyle_xp_gain_mult_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_lifestyle_xp_gain_mult_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_406 }
 spell_effect_ai_weight_value_406 = {	# add_artifact_modifier_magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_diplomacy_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_martial_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_407 }
 spell_effect_ai_weight_value_407 = {	# add_artifact_modifier_magic_martial_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_martial_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_stewardship_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_408 }
 spell_effect_ai_weight_value_408 = {	# add_artifact_modifier_magic_stewardship_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_stewardship_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_intrigue_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_409 }
 spell_effect_ai_weight_value_409 = {	# add_artifact_modifier_magic_intrigue_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_intrigue_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_learning_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_410 }
 spell_effect_ai_weight_value_410 = {	# add_artifact_modifier_magic_learning_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_learning_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_magic_arcana_lifestyle_xp_gain_mult_negative_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_411 }
 spell_effect_ai_weight_value_411 = {	# add_artifact_modifier_magic_arcana_lifestyle_xp_gain_mult_negative_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = magic_arcana_lifestyle_xp_gain_mult_negative_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_shard_exhaustion_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_412 }
 spell_effect_ai_weight_value_412 = {	# add_artifact_modifier_shard_exhaustion_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = shard_exhaustion_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
			add = {
				value = 0.1
				multiply = -12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.shard_exhaustion_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = { # Only really useful for adults
					limit = { age >= 16 }
						add = { # Mostly useful
						value = -0.05
						multiply = 9
						if = {
							limit = { has_trait = diligent }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = ambitious }
							multiply = 1.2
						}
						if = { # Studious
							limit = { has_trait = education_learning }
							multiply = 1.2
						}
						if = { # Already did their learning in life (accumulated perks)
							limit = { age > 40 }
							multiply = 0.9
							if = {
								limit = { age > 50 }
								multiply = 0.8
								if = {
									limit = { age > 60 }
									multiply = 0.7
									if = {
										limit = { age > 70 }
										multiply = 0.6
									}
								}
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = scope:spell_effect.shard_exhaustion_modifier_artifact_duration_ai_weighting_value
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_artifact_modifier_communication_shards_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_413 }
 spell_effect_ai_weight_value_413 = {	# add_artifact_modifier_communication_shards_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = communication_shards_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_artifact_modifier_title_creation_cost_mult_positive_modifier_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_414 }
 spell_effect_ai_weight_value_414 = {	# add_artifact_modifier_title_creation_cost_mult_positive_modifier_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_artifact_modifier = title_creation_cost_mult_positive_modifier_artifact }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_archer_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_415 }
 spell_effect_ai_weight_value_415 = {	# add_character_modifier_magic_archer_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_archer_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_archers_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_416 }
 spell_effect_ai_weight_value_416 = {	# add_character_modifier_magic_archers_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_archers_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_camel_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_417 }
 spell_effect_ai_weight_value_417 = {	# add_character_modifier_magic_camel_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_camel_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_elephant_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_418 }
 spell_effect_ai_weight_value_418 = {	# add_character_modifier_magic_elephant_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_elephant_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_heavy_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_419 }
 spell_effect_ai_weight_value_419 = {	# add_character_modifier_magic_heavy_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_heavy_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_light_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_420 }
 spell_effect_ai_weight_value_420 = {	# add_character_modifier_magic_light_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_light_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_heavy_infantry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_421 }
 spell_effect_ai_weight_value_421 = {	# add_character_modifier_magic_heavy_infantry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_heavy_infantry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_pikemen_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_422 }
 spell_effect_ai_weight_value_422 = {	# add_character_modifier_magic_pikemen_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_pikemen_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_skirmishers_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_423 }
 spell_effect_ai_weight_value_423 = {	# add_character_modifier_magic_skirmishers_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_skirmishers_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_siege_weapon_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_424 }
 spell_effect_ai_weight_value_424 = {	# add_character_modifier_magic_siege_weapon_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_siege_weapon_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_flying_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_425 }
 spell_effect_ai_weight_value_425 = {	# add_character_modifier_magic_flying_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_flying_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magi_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_426 }
 spell_effect_ai_weight_value_426 = {	# add_character_modifier_magic_magi_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magi_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_adventurers_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_427 }
 spell_effect_ai_weight_value_427 = {	# add_character_modifier_magic_adventurers_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_adventurers_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_chariot_cavalry_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_428 }
 spell_effect_ai_weight_value_428 = {	# add_character_modifier_magic_chariot_cavalry_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_chariot_cavalry_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_monsters_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_429 }
 spell_effect_ai_weight_value_429 = {	# add_character_modifier_magic_monsters_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_monsters_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_undead_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_430 }
 spell_effect_ai_weight_value_430 = {	# add_character_modifier_magic_undead_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_undead_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_constructs_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_431 }
 spell_effect_ai_weight_value_431 = {	# add_character_modifier_magic_constructs_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_constructs_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_432 }
 spell_effect_ai_weight_value_432 = {	# add_character_modifier_magic_magical_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_ethereal_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_433 }
 spell_effect_ai_weight_value_433 = {	# add_character_modifier_magic_magical_ethereal_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_ethereal_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_nature_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_434 }
 spell_effect_ai_weight_value_434 = {	# add_character_modifier_magic_magical_nature_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_nature_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_water_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_435 }
 spell_effect_ai_weight_value_435 = {	# add_character_modifier_magic_magical_water_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_water_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_air_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_436 }
 spell_effect_ai_weight_value_436 = {	# add_character_modifier_magic_magical_air_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_air_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_stone_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_437 }
 spell_effect_ai_weight_value_437 = {	# add_character_modifier_magic_magical_stone_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_stone_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_fire_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_438 }
 spell_effect_ai_weight_value_438 = {	# add_character_modifier_magic_magical_fire_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_fire_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_ice_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_439 }
 spell_effect_ai_weight_value_439 = {	# add_character_modifier_magic_magical_ice_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_ice_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_metal_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_440 }
 spell_effect_ai_weight_value_440 = {	# add_character_modifier_magic_magical_metal_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_metal_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_sand_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_441 }
 spell_effect_ai_weight_value_441 = {	# add_character_modifier_magic_magical_sand_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_sand_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_light_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_442 }
 spell_effect_ai_weight_value_442 = {	# add_character_modifier_magic_magical_light_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_light_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_blood_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_443 }
 spell_effect_ai_weight_value_443 = {	# add_character_modifier_magic_magical_blood_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_blood_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_death_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_444 }
 spell_effect_ai_weight_value_444 = {	# add_character_modifier_magic_magical_death_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_death_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_dark_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_445 }
 spell_effect_ai_weight_value_445 = {	# add_character_modifier_magic_magical_dark_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_dark_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_celestial_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_446 }
 spell_effect_ai_weight_value_446 = {	# add_character_modifier_magic_magical_celestial_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_celestial_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_dream_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_447 }
 spell_effect_ai_weight_value_447 = {	# add_character_modifier_magic_magical_dream_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_dream_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_time_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_448 }
 spell_effect_ai_weight_value_448 = {	# add_character_modifier_magic_magical_time_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_time_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_hymns_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_449 }
 spell_effect_ai_weight_value_449 = {	# add_character_modifier_magic_magical_hymns_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_hymns_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_character_modifier_magic_magical_dawn_improvement_add_modifier_ai_weight_value = { value = spell_effect_ai_weight_value_450 }
 spell_effect_ai_weight_value_450 = {	# add_character_modifier_magic_magical_dawn_improvement_add_modifier
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { 
				OR = {
					NOT = { has_character_modifier = magic_magical_dawn_improvement_add_modifier }
					scope:spell_effect.var:stacking_mode ?= flag:upgrade
				}
			}
		}
	}
 }
 add_trait_magic_good_ai_weight_value = { value = spell_effect_ai_weight_value_451 }
 spell_effect_ai_weight_value_451 = {	# add_trait_magic_good
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 remove_trait_magic_good_ai_weight_value = { value = spell_effect_ai_weight_value_452 }
 spell_effect_ai_weight_value_452 = {	# remove_trait_magic_good
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_trait_wounded_ai_weight_value = { value = spell_effect_ai_weight_value_453 }
 spell_effect_ai_weight_value_453 = {	# add_trait_wounded
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 remove_trait_wounded_ai_weight_value = { value = spell_effect_ai_weight_value_454 }
 spell_effect_ai_weight_value_454 = {	# remove_trait_wounded
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_trait_disfigured_ai_weight_value = { value = spell_effect_ai_weight_value_455 }
 spell_effect_ai_weight_value_455 = {	# add_trait_disfigured
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = disfigured } }
			add = {
				value = -4
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_disfigured_ai_weight_value = { value = spell_effect_ai_weight_value_456 }
 spell_effect_ai_weight_value_456 = {	# remove_trait_disfigured
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = disfigured }
			subtract = {
				value = -4
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_ill_ai_weight_value = { value = spell_effect_ai_weight_value_457 }
 spell_effect_ai_weight_value_457 = {	# add_trait_ill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = ill } }
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_ill_ai_weight_value = { value = spell_effect_ai_weight_value_458 }
 spell_effect_ai_weight_value_458 = {	# remove_trait_ill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = ill }
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_pneumonic_ai_weight_value = { value = spell_effect_ai_weight_value_459 }
 spell_effect_ai_weight_value_459 = {	# add_trait_pneumonic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = pneumonic } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_pneumonic_ai_weight_value = { value = spell_effect_ai_weight_value_460 }
 spell_effect_ai_weight_value_460 = {	# remove_trait_pneumonic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = pneumonic }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_great_pox_ai_weight_value = { value = spell_effect_ai_weight_value_461 }
 spell_effect_ai_weight_value_461 = {	# add_trait_great_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = great_pox } }
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_great_pox_ai_weight_value = { value = spell_effect_ai_weight_value_462 }
 spell_effect_ai_weight_value_462 = {	# remove_trait_great_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = great_pox }
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_early_great_pox_ai_weight_value = { value = spell_effect_ai_weight_value_463 }
 spell_effect_ai_weight_value_463 = {	# add_trait_early_great_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = early_great_pox } }
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_early_great_pox_ai_weight_value = { value = spell_effect_ai_weight_value_464 }
 spell_effect_ai_weight_value_464 = {	# remove_trait_early_great_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = early_great_pox }
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_lovers_pox_ai_weight_value = { value = spell_effect_ai_weight_value_465 }
 spell_effect_ai_weight_value_465 = {	# add_trait_lovers_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lovers_pox } }
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_lovers_pox_ai_weight_value = { value = spell_effect_ai_weight_value_466 }
 spell_effect_ai_weight_value_466 = {	# remove_trait_lovers_pox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = lovers_pox }
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -20
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_leper_ai_weight_value = { value = spell_effect_ai_weight_value_467 }
 spell_effect_ai_weight_value_467 = {	# add_trait_leper
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = leper } }
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -35
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_leper_ai_weight_value = { value = spell_effect_ai_weight_value_468 }
 spell_effect_ai_weight_value_468 = {	# remove_trait_leper
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = leper }
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -35
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -10
				multiply = 0.8
				if = {
					limit = { ai_sociability >= high_positive_ai_value }
					multiply = {
						value = 1
						add = {
							value = ai_sociability
							subtract = high_positive_ai_value
							multiply = 0.002
						}
					}
				}
				if = {
					limit = { has_trait = education_diplomacy }
					multiply = 1.5
				}
				if = {
					limit = { has_trait = gregarious }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = diplomat }
					multiply = 1.2
				}
				if = {
					limit = { is_playable_character = yes }
					multiply = 1.2
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_cancer_ai_weight_value = { value = spell_effect_ai_weight_value_469 }
 spell_effect_ai_weight_value_469 = {	# add_trait_cancer
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = cancer } }
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_cancer_ai_weight_value = { value = spell_effect_ai_weight_value_470 }
 spell_effect_ai_weight_value_470 = {	# remove_trait_cancer
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = cancer }
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_typhus_ai_weight_value = { value = spell_effect_ai_weight_value_471 }
 spell_effect_ai_weight_value_471 = {	# add_trait_typhus
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = typhus } }
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -4.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_typhus_ai_weight_value = { value = spell_effect_ai_weight_value_472 }
 spell_effect_ai_weight_value_472 = {	# remove_trait_typhus
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = typhus }
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -4.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_smallpox_ai_weight_value = { value = spell_effect_ai_weight_value_473 }
 spell_effect_ai_weight_value_473 = {	# add_trait_smallpox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = smallpox } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -4.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_smallpox_ai_weight_value = { value = spell_effect_ai_weight_value_474 }
 spell_effect_ai_weight_value_474 = {	# remove_trait_smallpox
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = smallpox }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -4.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_measles_ai_weight_value = { value = spell_effect_ai_weight_value_475 }
 spell_effect_ai_weight_value_475 = {	# add_trait_measles
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = measles } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_measles_ai_weight_value = { value = spell_effect_ai_weight_value_476 }
 spell_effect_ai_weight_value_476 = {	# remove_trait_measles
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = measles }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -4
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_dysentery_ai_weight_value = { value = spell_effect_ai_weight_value_477 }
 spell_effect_ai_weight_value_477 = {	# add_trait_dysentery
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = dysentery } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_dysentery_ai_weight_value = { value = spell_effect_ai_weight_value_478 }
 spell_effect_ai_weight_value_478 = {	# remove_trait_dysentery
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = dysentery }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -8
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -3.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_bubonic_plague_ai_weight_value = { value = spell_effect_ai_weight_value_479 }
 spell_effect_ai_weight_value_479 = {	# add_trait_bubonic_plague
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = bubonic_plague } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -7
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -30
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_bubonic_plague_ai_weight_value = { value = spell_effect_ai_weight_value_480 }
 spell_effect_ai_weight_value_480 = {	# remove_trait_bubonic_plague
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = bubonic_plague }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -7
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -30
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_incapable_ai_weight_value = { value = spell_effect_ai_weight_value_481 }
 spell_effect_ai_weight_value_481 = {	# add_trait_incapable
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = incapable } }
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -12
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_incapable_ai_weight_value = { value = spell_effect_ai_weight_value_482 }
 spell_effect_ai_weight_value_482 = {	# remove_trait_incapable
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = incapable }
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -12
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -2
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_infirm_ai_weight_value = { value = spell_effect_ai_weight_value_483 }
 spell_effect_ai_weight_value_483 = {	# add_trait_infirm
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = infirm } }
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -3
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -6
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_infirm_ai_weight_value = { value = spell_effect_ai_weight_value_484 }
 spell_effect_ai_weight_value_484 = {	# remove_trait_infirm
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = infirm }
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -3
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -6
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -1
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_lunatic_1_ai_weight_value = { value = spell_effect_ai_weight_value_485 }
 spell_effect_ai_weight_value_485 = {	# add_trait_lunatic_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lunatic_1 } }
			add = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -10
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_lunatic_1_ai_weight_value = { value = spell_effect_ai_weight_value_486 }
 spell_effect_ai_weight_value_486 = {	# remove_trait_lunatic_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = lunatic_1 }
			subtract = {
				value = 0
				if = { # Must actually have vassals
					limit = { highest_held_title_tier >= tier_duchy }
					add = {
						value = -10
						multiply = 0.45
						if = {
							limit = { has_trait = ambitious }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = arbitrary }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = compassionate }
							multiply = 1.15
						}
						else_if = {
							limit = { has_trait = callous }
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = sadistic }
							multiply = 0.45
						}
						if = {
							limit = {
								OR = {
									has_trait = stubborn
									has_trait = fickle
								}
							}
							multiply = 0.85
						}
						else_if = {
							limit = { has_trait = eccentric }
							multiply = 0.45
						}
						if = {
							limit = { has_trait = arrogant }
							multiply = 0.85
						}
						if = {
							limit = { has_trait = gregarious }
							multiply = 1.35
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_depressed_1_ai_weight_value = { value = spell_effect_ai_weight_value_487 }
 spell_effect_ai_weight_value_487 = {	# add_trait_depressed_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = depressed_1 } }
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_depressed_1_ai_weight_value = { value = spell_effect_ai_weight_value_488 }
 spell_effect_ai_weight_value_488 = {	# remove_trait_depressed_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = depressed_1 }
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_depressed_genetic_ai_weight_value = { value = spell_effect_ai_weight_value_489 }
 spell_effect_ai_weight_value_489 = {	# add_trait_depressed_genetic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = depressed_genetic } }
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_depressed_genetic_ai_weight_value = { value = spell_effect_ai_weight_value_490 }
 spell_effect_ai_weight_value_490 = {	# remove_trait_depressed_genetic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = depressed_genetic }
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_blind_ai_weight_value = { value = spell_effect_ai_weight_value_491 }
 spell_effect_ai_weight_value_491 = {	# add_trait_blind
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = blind } }
			add = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_blind_ai_weight_value = { value = spell_effect_ai_weight_value_492 }
 spell_effect_ai_weight_value_492 = {	# remove_trait_blind
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = blind }
			subtract = {
				value = -6
				if = {
					limit = {
						has_trait = education_martial
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -10
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.25
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_drunkard_ai_weight_value = { value = spell_effect_ai_weight_value_493 }
 spell_effect_ai_weight_value_493 = {	# add_trait_drunkard
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = drunkard } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = -2
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.15
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.2
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_drunkard_ai_weight_value = { value = spell_effect_ai_weight_value_494 }
 spell_effect_ai_weight_value_494 = {	# remove_trait_drunkard
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = drunkard }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = -2
					multiply = 0.5
				}
				if = {
					limit = {
						has_trait = education_martial_prowess
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.15
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0.2
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_gluttonous_ai_weight_value = { value = spell_effect_ai_weight_value_495 }
 spell_effect_ai_weight_value_495 = {	# add_trait_gluttonous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gluttonous } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_gluttonous_ai_weight_value = { value = spell_effect_ai_weight_value_496 }
 spell_effect_ai_weight_value_496 = {	# remove_trait_gluttonous
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = gluttonous }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0.1
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_lustful_ai_weight_value = { value = spell_effect_ai_weight_value_497 }
 spell_effect_ai_weight_value_497 = {	# add_trait_lustful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lustful } }
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_lustful_ai_weight_value = { value = spell_effect_ai_weight_value_498 }
 spell_effect_ai_weight_value_498 = {	# remove_trait_lustful
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = lustful }
			subtract = {
				value = 2
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_gregarious_ai_weight_value = { value = spell_effect_ai_weight_value_499 }
 spell_effect_ai_weight_value_499 = {	# add_trait_gregarious
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gregarious } }
			add = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_gregarious_ai_weight_value = { value = spell_effect_ai_weight_value_500 }
 spell_effect_ai_weight_value_500 = {	# remove_trait_gregarious
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = gregarious }
			subtract = {
				value = 2
				if = {
					limit = {
						has_trait = education_diplomacy
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_hashishiyah_ai_weight_value = { value = spell_effect_ai_weight_value_501 }
 spell_effect_ai_weight_value_501 = {	# add_trait_hashishiyah
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = hashishiyah } }
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0.2
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_hashishiyah_ai_weight_value = { value = spell_effect_ai_weight_value_502 }
 spell_effect_ai_weight_value_502 = {	# remove_trait_hashishiyah
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = hashishiyah }
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_stewardship
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = -2
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0.2
				multiply = 12
				if = {
					limit = { has_trait = diligent }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = lazy }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = paranoid }
					multiply = 1.2
				}
				if = {
					limit = { has_trait = ambitious }
					multiply = 1.2
				}
				else_if = {
					limit = { has_trait = content }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = arbitrary }
					multiply = 0.8
				}
				if = {
					limit = { has_trait = eccentric }
					multiply = 0.6
				}
				if = {
					limit = { stress_level > 0 }
					multiply = 1.2
					if = {
						limit = { stress_level > 1 }
						multiply = 1.4
						if = {
							limit = { stress_level > 2 }
							multiply = 1.8
							if = {
								limit = { stress_level > 3 }
								multiply = 2.6
							}
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_gh_elementalist_ai_weight_value = { value = spell_effect_ai_weight_value_503 }
 spell_effect_ai_weight_value_503 = {	# add_trait_gh_elementalist
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 remove_trait_gh_elementalist_ai_weight_value = { value = spell_effect_ai_weight_value_504 }
 spell_effect_ai_weight_value_504 = {	# remove_trait_gh_elementalist
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = gh_elementalist }
		}
	}
 }
 add_trait_lifestyle_physician_ai_weight_value = { value = spell_effect_ai_weight_value_505 }
 spell_effect_ai_weight_value_505 = {	# add_trait_lifestyle_physician
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lifestyle_physician } }
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 0.25
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_lifestyle_physician_ai_weight_value = { value = spell_effect_ai_weight_value_506 }
 spell_effect_ai_weight_value_506 = {	# remove_trait_lifestyle_physician
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = lifestyle_physician }
			subtract = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = {
					value = 0.25
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_possessed_1_ai_weight_value = { value = spell_effect_ai_weight_value_507 }
 spell_effect_ai_weight_value_507 = {	# add_trait_possessed_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = possessed_1 } }
			add = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 remove_trait_possessed_1_ai_weight_value = { value = spell_effect_ai_weight_value_508 }
 spell_effect_ai_weight_value_508 = {	# remove_trait_possessed_1
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { has_trait = possessed_1 }
			subtract = {
				# A year of a person's life is worth 30 AIWP (based on a rough estimate of a human's average skills)
				# 0.5 health is (very) more or less equivalent to 4 years of life
				# Therefore 0.5 health is roughly equivalent to 120 AIWP.
				value = {
					value = -0.5
					multiply = 240
				}
				# Also multiply by an urgency factor if health is below 3
				if = {
					limit = { health < 3 }
					multiply = {
						value = 4
						subtract = health
						min = 1
					}
				}
				# Conversely, decrease importance if above 3
				else = {
					divide = {
						value = health
						subtract = 2
						min = 1
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			subtract = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = -10
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_gh_riftmark_ai_weight_value = { value = spell_effect_ai_weight_value_509 }
 spell_effect_ai_weight_value_509 = {	# add_trait_gh_riftmark
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 remove_trait_gh_riftmark_ai_weight_value = { value = spell_effect_ai_weight_value_510 }
 spell_effect_ai_weight_value_510 = {	# remove_trait_gh_riftmark
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_trait_xp_scarred_ai_weight_value = { value = spell_effect_ai_weight_value_511 }
 spell_effect_ai_weight_value_511 = {	# add_trait_xp_scarred
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = scarred } }
			add = {
				value = 0
				if = {
					limit = {
						# Attraction opinion is disabled as a mechanic after the age thresholds below
						trigger_if = {
							limit = { is_male = yes }
							age < 65
						}
						trigger_else = {
							age < 50
						}
					}
					add = {
						value = 5
						multiply = 0.2
						if = {
							limit = {
								ai_sociability >= high_positive_ai_value
							}
							multiply = {
								value = 1
								add = {
									value = ai_sociability
									subtract = high_positive_ai_value
									multiply = 0.002
								}
							}
						}
						if = {
							limit = { has_focus = intrigue_temptation_focus }
							multiply = 1.5
						}
						if = {
							limit = { has_trait = lustful }
							multiply = 1.2
						}
						if = {
							limit = { has_trait = seducer }
							multiply = 1.2
						}
						if = {
							limit = { is_wrong_gender_in_faith_trigger = { FAITH = faith } }
							multiply = 1.2
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_xp_lifestyle_physician_ai_weight_value = { value = spell_effect_ai_weight_value_512 }
 spell_effect_ai_weight_value_512 = {	# add_trait_xp_lifestyle_physician
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lifestyle_physician } }
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
			add = {
				value = {
					value = 0.25
					multiply = 15
				}
				if = { # Now, if we are actually ill...
					limit = {
						OR = {
							has_treatable_disease_trigger = yes
							has_trait = wounded
						}
						health < death_chance_starts_health
					}
					if = {
						limit = { health < 3 }
						multiply = {
							value = 4
							subtract = health
							min = 1
						}
					}
					if = { # Slowly decrease the relevance of this resistance modifier after age 30, but never below a factor of 0.5
						limit = { age > 30 }
						multiply = {
							value = 1
							subtract = {
								value = age
								subtract = 30
								multiply = 0.008
							}
							min = 0.5
						}
					}
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_xp_lifestyle_reveler_ai_weight_value = { value = spell_effect_ai_weight_value_513 }
 spell_effect_ai_weight_value_513 = {	# add_trait_xp_lifestyle_reveler
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lifestyle_reveler } }
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_intrigue
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_fire_ai_weight_value = { value = spell_effect_ai_weight_value_514 }
 spell_effect_ai_weight_value_514 = {	# add_trait_xp_gh_elementalist_magical_fire
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_water_ai_weight_value = { value = spell_effect_ai_weight_value_515 }
 spell_effect_ai_weight_value_515 = {	# add_trait_xp_gh_elementalist_magical_water
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_air_ai_weight_value = { value = spell_effect_ai_weight_value_516 }
 spell_effect_ai_weight_value_516 = {	# add_trait_xp_gh_elementalist_magical_air
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_stone_ai_weight_value = { value = spell_effect_ai_weight_value_517 }
 spell_effect_ai_weight_value_517 = {	# add_trait_xp_gh_elementalist_magical_stone
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_dream_ai_weight_value = { value = spell_effect_ai_weight_value_518 }
 spell_effect_ai_weight_value_518 = {	# add_trait_xp_gh_elementalist_magical_dream
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_dark_ai_weight_value = { value = spell_effect_ai_weight_value_519 }
 spell_effect_ai_weight_value_519 = {	# add_trait_xp_gh_elementalist_magical_dark
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_ice_ai_weight_value = { value = spell_effect_ai_weight_value_520 }
 spell_effect_ai_weight_value_520 = {	# add_trait_xp_gh_elementalist_magical_ice
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_death_ai_weight_value = { value = spell_effect_ai_weight_value_521 }
 spell_effect_ai_weight_value_521 = {	# add_trait_xp_gh_elementalist_magical_death
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_blood_ai_weight_value = { value = spell_effect_ai_weight_value_522 }
 spell_effect_ai_weight_value_522 = {	# add_trait_xp_gh_elementalist_magical_blood
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_sand_ai_weight_value = { value = spell_effect_ai_weight_value_523 }
 spell_effect_ai_weight_value_523 = {	# add_trait_xp_gh_elementalist_magical_sand
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_metal_ai_weight_value = { value = spell_effect_ai_weight_value_524 }
 spell_effect_ai_weight_value_524 = {	# add_trait_xp_gh_elementalist_magical_metal
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_ethereal_ai_weight_value = { value = spell_effect_ai_weight_value_525 }
 spell_effect_ai_weight_value_525 = {	# add_trait_xp_gh_elementalist_magical_ethereal
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_celestial_ai_weight_value = { value = spell_effect_ai_weight_value_526 }
 spell_effect_ai_weight_value_526 = {	# add_trait_xp_gh_elementalist_magical_celestial
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_nature_ai_weight_value = { value = spell_effect_ai_weight_value_527 }
 spell_effect_ai_weight_value_527 = {	# add_trait_xp_gh_elementalist_magical_nature
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_dawn_ai_weight_value = { value = spell_effect_ai_weight_value_528 }
 spell_effect_ai_weight_value_528 = {	# add_trait_xp_gh_elementalist_magical_dawn
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_hymns_ai_weight_value = { value = spell_effect_ai_weight_value_529 }
 spell_effect_ai_weight_value_529 = {	# add_trait_xp_gh_elementalist_magical_hymns
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_time_ai_weight_value = { value = spell_effect_ai_weight_value_530 }
 spell_effect_ai_weight_value_530 = {	# add_trait_xp_gh_elementalist_magical_time
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_elementalist_magical_light_ai_weight_value = { value = spell_effect_ai_weight_value_531 }
 spell_effect_ai_weight_value_531 = {	# add_trait_xp_gh_elementalist_magical_light
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_elementalist } }
		}
	}
 }
 add_trait_xp_gh_ritual_tattoos_ai_weight_value = { value = spell_effect_ai_weight_value_532 }
 spell_effect_ai_weight_value_532 = {	# add_trait_xp_gh_ritual_tattoos
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = gh_ritual_tattoos } }
		}
	}
 }
 add_trait_xp_lifestyle_mystic_ai_weight_value = { value = spell_effect_ai_weight_value_533 }
 spell_effect_ai_weight_value_533 = {	# add_trait_xp_lifestyle_mystic
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		if = {
			limit = { NOT = { has_trait = lifestyle_mystic } }
			add = {
				value = 1
				if = {
					limit = {
						has_trait = education_learning
					}
					multiply = 1.5
				}

				multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
				multiply = 30	# Trait assumed to be for a lifetime/30 years
				multiply = scope:spell_effect.spell_tag_scalar_threshold_diff_value
			}
		}
	}
 }
 spawn_army_horse_archers_ai_weight_value = { value = spell_effect_ai_weight_value_534 }
 spell_effect_ai_weight_value_534 = {	# spawn_army_horse_archers
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_cloud_riders_ai_weight_value = { value = spell_effect_ai_weight_value_535 }
 spell_effect_ai_weight_value_535 = {	# spawn_army_cloud_riders
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_oltenic_horse_archers_ai_weight_value = { value = spell_effect_ai_weight_value_536 }
 spell_effect_ai_weight_value_536 = {	# spawn_army_oltenic_horse_archers
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_undead_horse_archers_ai_weight_value = { value = spell_effect_ai_weight_value_537 }
 spell_effect_ai_weight_value_537 = {	# spawn_army_undead_horse_archers
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_bowmen_ai_weight_value = { value = spell_effect_ai_weight_value_538 }
 spell_effect_ai_weight_value_538 = {	# spawn_army_bowmen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_camel_rider_ai_weight_value = { value = spell_effect_ai_weight_value_539 }
 spell_effect_ai_weight_value_539 = {	# spawn_army_camel_rider
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_war_elephant_ai_weight_value = { value = spell_effect_ai_weight_value_540 }
 spell_effect_ai_weight_value_540 = {	# spawn_army_war_elephant
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_armored_horsemen_ai_weight_value = { value = spell_effect_ai_weight_value_541 }
 spell_effect_ai_weight_value_541 = {	# spawn_army_armored_horsemen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_light_horsemen_ai_weight_value = { value = spell_effect_ai_weight_value_542 }
 spell_effect_ai_weight_value_542 = {	# spawn_army_light_horsemen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_armored_footmen_ai_weight_value = { value = spell_effect_ai_weight_value_543 }
 spell_effect_ai_weight_value_543 = {	# spawn_army_armored_footmen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_pikemen_unit_ai_weight_value = { value = spell_effect_ai_weight_value_544 }
 spell_effect_ai_weight_value_544 = {	# spawn_army_pikemen_unit
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_light_footmen_ai_weight_value = { value = spell_effect_ai_weight_value_545 }
 spell_effect_ai_weight_value_545 = {	# spawn_army_light_footmen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_onager_ai_weight_value = { value = spell_effect_ai_weight_value_546 }
 spell_effect_ai_weight_value_546 = {	# spawn_army_onager
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_griffon_riders_ai_weight_value = { value = spell_effect_ai_weight_value_547 }
 spell_effect_ai_weight_value_547 = {	# spawn_army_griffon_riders
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_magi_regular_ai_weight_value = { value = spell_effect_ai_weight_value_548 }
 spell_effect_ai_weight_value_548 = {	# spawn_army_magi_regular
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_adventurers_ai_weight_value = { value = spell_effect_ai_weight_value_549 }
 spell_effect_ai_weight_value_549 = {	# spawn_army_adventurers
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_war_chariots_ai_weight_value = { value = spell_effect_ai_weight_value_550 }
 spell_effect_ai_weight_value_550 = {	# spawn_army_war_chariots
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_fogbeasts_ai_weight_value = { value = spell_effect_ai_weight_value_551 }
 spell_effect_ai_weight_value_551 = {	# spawn_army_fogbeasts
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_blade_tendrils_ai_weight_value = { value = spell_effect_ai_weight_value_552 }
 spell_effect_ai_weight_value_552 = {	# spawn_army_blade_tendrils
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_marrowdrones_ai_weight_value = { value = spell_effect_ai_weight_value_553 }
 spell_effect_ai_weight_value_553 = {	# spawn_army_marrowdrones
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_hungering_mouths_ai_weight_value = { value = spell_effect_ai_weight_value_554 }
 spell_effect_ai_weight_value_554 = {	# spawn_army_hungering_mouths
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_chasm_terrors_ai_weight_value = { value = spell_effect_ai_weight_value_555 }
 spell_effect_ai_weight_value_555 = {	# spawn_army_chasm_terrors
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_enfleshed_grotesquerie_ai_weight_value = { value = spell_effect_ai_weight_value_556 }
 spell_effect_ai_weight_value_556 = {	# spawn_army_enfleshed_grotesquerie
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_lesser_voidspawns_ai_weight_value = { value = spell_effect_ai_weight_value_557 }
 spell_effect_ai_weight_value_557 = {	# spawn_army_lesser_voidspawns
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_archonarachs_ai_weight_value = { value = spell_effect_ai_weight_value_558 }
 spell_effect_ai_weight_value_558 = {	# spawn_army_archonarachs
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_woodland_hydra_ai_weight_value = { value = spell_effect_ai_weight_value_559 }
 spell_effect_ai_weight_value_559 = {	# spawn_army_woodland_hydra
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_elite_undead_ai_weight_value = { value = spell_effect_ai_weight_value_560 }
 spell_effect_ai_weight_value_560 = {	# spawn_army_elite_undead
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_undead_skirmishers_ai_weight_value = { value = spell_effect_ai_weight_value_561 }
 spell_effect_ai_weight_value_561 = {	# spawn_army_undead_skirmishers
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_undead_bowmen_ai_weight_value = { value = spell_effect_ai_weight_value_562 }
 spell_effect_ai_weight_value_562 = {	# spawn_army_undead_bowmen
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_siege_golems_ai_weight_value = { value = spell_effect_ai_weight_value_563 }
 spell_effect_ai_weight_value_563 = {	# spawn_army_siege_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_stone_golems_ai_weight_value = { value = spell_effect_ai_weight_value_564 }
 spell_effect_ai_weight_value_564 = {	# spawn_army_stone_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_magma_golems_ai_weight_value = { value = spell_effect_ai_weight_value_565 }
 spell_effect_ai_weight_value_565 = {	# spawn_army_magma_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_ice_golems_ai_weight_value = { value = spell_effect_ai_weight_value_566 }
 spell_effect_ai_weight_value_566 = {	# spawn_army_ice_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_bronze_golems_ai_weight_value = { value = spell_effect_ai_weight_value_567 }
 spell_effect_ai_weight_value_567 = {	# spawn_army_bronze_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_metal_golems_ai_weight_value = { value = spell_effect_ai_weight_value_568 }
 spell_effect_ai_weight_value_568 = {	# spawn_army_metal_golems
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_spirit_regular_ai_weight_value = { value = spell_effect_ai_weight_value_569 }
 spell_effect_ai_weight_value_569 = {	# spawn_army_spirit_regular
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_ethereal_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_570 }
 spell_effect_ai_weight_value_570 = {	# spawn_army_ethereal_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_nature_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_571 }
 spell_effect_ai_weight_value_571 = {	# spawn_army_nature_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_vine_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_572 }
 spell_effect_ai_weight_value_572 = {	# spawn_army_vine_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_leshens_ai_weight_value = { value = spell_effect_ai_weight_value_573 }
 spell_effect_ai_weight_value_573 = {	# spawn_army_leshens
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_water_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_574 }
 spell_effect_ai_weight_value_574 = {	# spawn_army_water_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_air_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_575 }
 spell_effect_ai_weight_value_575 = {	# spawn_army_air_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_lightning_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_576 }
 spell_effect_ai_weight_value_576 = {	# spawn_army_lightning_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_stone_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_577 }
 spell_effect_ai_weight_value_577 = {	# spawn_army_stone_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_mountain_spirit_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_578 }
 spell_effect_ai_weight_value_578 = {	# spawn_army_mountain_spirit_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_fire_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_579 }
 spell_effect_ai_weight_value_579 = {	# spawn_army_fire_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_ice_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_580 }
 spell_effect_ai_weight_value_580 = {	# spawn_army_ice_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_metal_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_581 }
 spell_effect_ai_weight_value_581 = {	# spawn_army_metal_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_quicksilver_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_582 }
 spell_effect_ai_weight_value_582 = {	# spawn_army_quicksilver_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_sand_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_583 }
 spell_effect_ai_weight_value_583 = {	# spawn_army_sand_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_desert_mirage_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_584 }
 spell_effect_ai_weight_value_584 = {	# spawn_army_desert_mirage_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_dune_reaper_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_585 }
 spell_effect_ai_weight_value_585 = {	# spawn_army_dune_reaper_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_light_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_586 }
 spell_effect_ai_weight_value_586 = {	# spawn_army_light_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_seraph_melacham_ai_weight_value = { value = spell_effect_ai_weight_value_587 }
 spell_effect_ai_weight_value_587 = {	# spawn_army_seraph_melacham
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_blood_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_588 }
 spell_effect_ai_weight_value_588 = {	# spawn_army_blood_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_death_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_589 }
 spell_effect_ai_weight_value_589 = {	# spawn_army_death_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_dark_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_590 }
 spell_effect_ai_weight_value_590 = {	# spawn_army_dark_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_night_gaunts_ai_weight_value = { value = spell_effect_ai_weight_value_591 }
 spell_effect_ai_weight_value_591 = {	# spawn_army_night_gaunts
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_celestial_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_592 }
 spell_effect_ai_weight_value_592 = {	# spawn_army_celestial_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_dream_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_593 }
 spell_effect_ai_weight_value_593 = {	# spawn_army_dream_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_time_elementals_ai_weight_value = { value = spell_effect_ai_weight_value_594 }
 spell_effect_ai_weight_value_594 = {	# spawn_army_time_elementals
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_elemental_choir_ai_weight_value = { value = spell_effect_ai_weight_value_595 }
 spell_effect_ai_weight_value_595 = {	# spawn_army_elemental_choir
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spawn_army_epochal_riders_ai_weight_value = { value = spell_effect_ai_weight_value_596 }
 spell_effect_ai_weight_value_596 = {	# spawn_army_epochal_riders
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_diplomacy_skill_ai_weight_value = { value = spell_effect_ai_weight_value_597 }
 spell_effect_ai_weight_value_597 = {	# add_diplomacy_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_diplomacy_skill_ai_weight_value = { value = spell_effect_ai_weight_value_598 }
 spell_effect_ai_weight_value_598 = {	# reduce_diplomacy_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_intrigue_skill_ai_weight_value = { value = spell_effect_ai_weight_value_599 }
 spell_effect_ai_weight_value_599 = {	# add_intrigue_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_intrigue_skill_ai_weight_value = { value = spell_effect_ai_weight_value_600 }
 spell_effect_ai_weight_value_600 = {	# reduce_intrigue_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_stewardship_skill_ai_weight_value = { value = spell_effect_ai_weight_value_601 }
 spell_effect_ai_weight_value_601 = {	# add_stewardship_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_stewardship_skill_ai_weight_value = { value = spell_effect_ai_weight_value_602 }
 spell_effect_ai_weight_value_602 = {	# reduce_stewardship_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_martial_skill_ai_weight_value = { value = spell_effect_ai_weight_value_603 }
 spell_effect_ai_weight_value_603 = {	# add_martial_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_martial_skill_ai_weight_value = { value = spell_effect_ai_weight_value_604 }
 spell_effect_ai_weight_value_604 = {	# reduce_martial_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_learning_skill_ai_weight_value = { value = spell_effect_ai_weight_value_605 }
 spell_effect_ai_weight_value_605 = {	# add_learning_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_learning_skill_ai_weight_value = { value = spell_effect_ai_weight_value_606 }
 spell_effect_ai_weight_value_606 = {	# reduce_learning_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_prowess_skill_ai_weight_value = { value = spell_effect_ai_weight_value_607 }
 spell_effect_ai_weight_value_607 = {	# add_prowess_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_prowess_skill_ai_weight_value = { value = spell_effect_ai_weight_value_608 }
 spell_effect_ai_weight_value_608 = {	# reduce_prowess_skill
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_fire_ai_weight_value = { value = spell_effect_ai_weight_value_609 }
 spell_effect_ai_weight_value_609 = {	# add_aspect_fire
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_water_ai_weight_value = { value = spell_effect_ai_weight_value_610 }
 spell_effect_ai_weight_value_610 = {	# add_aspect_water
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_ice_ai_weight_value = { value = spell_effect_ai_weight_value_611 }
 spell_effect_ai_weight_value_611 = {	# add_aspect_ice
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_air_ai_weight_value = { value = spell_effect_ai_weight_value_612 }
 spell_effect_ai_weight_value_612 = {	# add_aspect_air
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_stone_ai_weight_value = { value = spell_effect_ai_weight_value_613 }
 spell_effect_ai_weight_value_613 = {	# add_aspect_stone
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_dream_ai_weight_value = { value = spell_effect_ai_weight_value_614 }
 spell_effect_ai_weight_value_614 = {	# add_aspect_dream
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_celestial_ai_weight_value = { value = spell_effect_ai_weight_value_615 }
 spell_effect_ai_weight_value_615 = {	# add_aspect_celestial
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_dark_ai_weight_value = { value = spell_effect_ai_weight_value_616 }
 spell_effect_ai_weight_value_616 = {	# add_aspect_dark
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_light_ai_weight_value = { value = spell_effect_ai_weight_value_617 }
 spell_effect_ai_weight_value_617 = {	# add_aspect_light
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_blood_ai_weight_value = { value = spell_effect_ai_weight_value_618 }
 spell_effect_ai_weight_value_618 = {	# add_aspect_blood
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_nature_ai_weight_value = { value = spell_effect_ai_weight_value_619 }
 spell_effect_ai_weight_value_619 = {	# add_aspect_nature
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_ethereal_ai_weight_value = { value = spell_effect_ai_weight_value_620 }
 spell_effect_ai_weight_value_620 = {	# add_aspect_ethereal
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_hymns_ai_weight_value = { value = spell_effect_ai_weight_value_621 }
 spell_effect_ai_weight_value_621 = {	# add_aspect_hymns
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_death_ai_weight_value = { value = spell_effect_ai_weight_value_622 }
 spell_effect_ai_weight_value_622 = {	# add_aspect_death
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_sand_ai_weight_value = { value = spell_effect_ai_weight_value_623 }
 spell_effect_ai_weight_value_623 = {	# add_aspect_sand
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_metal_ai_weight_value = { value = spell_effect_ai_weight_value_624 }
 spell_effect_ai_weight_value_624 = {	# add_aspect_metal
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_time_ai_weight_value = { value = spell_effect_ai_weight_value_625 }
 spell_effect_ai_weight_value_625 = {	# add_aspect_time
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_aspect_dawn_ai_weight_value = { value = spell_effect_ai_weight_value_626 }
 spell_effect_ai_weight_value_626 = {	# add_aspect_dawn
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_diplomacy_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_627 }
 spell_effect_ai_weight_value_627 = {	# add_diplomacy_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_intrigue_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_628 }
 spell_effect_ai_weight_value_628 = {	# add_intrigue_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_martial_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_629 }
 spell_effect_ai_weight_value_629 = {	# add_martial_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_stewardship_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_630 }
 spell_effect_ai_weight_value_630 = {	# add_stewardship_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_learning_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_631 }
 spell_effect_ai_weight_value_631 = {	# add_learning_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_arcana_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_632 }
 spell_effect_ai_weight_value_632 = {	# add_arcana_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_mana_positive_ai_weight_value = { value = spell_effect_ai_weight_value_633 }
 spell_effect_ai_weight_value_633 = {	# add_mana_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_gold_positive_ai_weight_value = { value = spell_effect_ai_weight_value_634 }
 spell_effect_ai_weight_value_634 = {	# add_gold_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = 1   # 1 gold = 0.1 AWP; 10 gold = 1 AWP
			if = {  # Diminishing returns if you already have gold stockpiled
				limit = { gold > 300 }
				divide = {
					value = 1
					subtract = {
						value = gold
						subtract = 300
						multiply = 0.001
					}
					min = 0.3
				}
			}
			else_if = {
				limit = { debt_level > 1 }
				multiply = debt_level
			}
			if = {
				limit = { is_at_war = yes }
				multiply = 1.5
			}
			if = {
				limit = { has_trait = greedy }
				multiply = 1.5
			}
			if = {
				limit = { has_trait = avaricious }
				multiply = 1.5
			}
			if = {
				limit = { has_trait = education_stewardship }
				multiply = 1.2
			}
			if = {
				limit = { has_trait = ambitious }
				multiply = 1.2
			}
			if = {
				limit = { has_trait = architect }
				multiply = 1.2
			}

			multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
		}
	}
 }
 remove_gold_negative_ai_weight_value = { value = spell_effect_ai_weight_value_635 }
 spell_effect_ai_weight_value_635 = {	# remove_gold_negative
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 stress_gain_ai_weight_value = { value = spell_effect_ai_weight_value_636 }
 spell_effect_ai_weight_value_636 = {	# stress_gain
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = minor_stress_gain
			multiply = -0.5
			if = {
				limit = { has_trait = diligent }
				multiply = 1.2
			}
			else_if = {
				limit = { has_trait = lazy }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = paranoid }
				multiply = 1.2
			}
			if = {
				limit = { has_trait = ambitious }
				multiply = 1.2
			}
			else_if = {
				limit = { has_trait = content }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = arbitrary }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = eccentric }
				multiply = 0.6
			}
			if = {
				limit = { stress_level > 0 }
				multiply = 1.2
				if = {
					limit = { stress_level > 1 }
					multiply = 1.4
					if = {
						limit = { stress_level > 2 }
						multiply = 1.8
						if = {
							limit = { stress_level > 3 }
							multiply = 2.6
						}
					}
				}
			}

			multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
		}
	}
 }
 stress_loss_ai_weight_value = { value = spell_effect_ai_weight_value_637 }
 spell_effect_ai_weight_value_637 = {	# stress_loss
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = minor_stress_loss
			multiply = -0.5 # minor_stress_loss is negative, so this will cancel it out
			if = {
				limit = { has_trait = diligent }
				multiply = 1.2
			}
			else_if = {
				limit = { has_trait = lazy }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = paranoid }
				multiply = 1.2
			}
			if = {
				limit = { has_trait = ambitious }
				multiply = 1.2
			}
			else_if = {
				limit = { has_trait = content }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = arbitrary }
				multiply = 0.8
			}
			if = {
				limit = { has_trait = eccentric }
				multiply = 0.6
			}
			if = {
				limit = { stress_level > 0 }
				multiply = 1.2
				if = {
					limit = { stress_level > 1 }
					multiply = 1.4
					if = {
						limit = { stress_level > 2 }
						multiply = 1.8
						if = {
							limit = { stress_level > 3 }
							multiply = 2.6
						}
					}
				}
			}

			multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
		}
	}
 }
 death_effect_ai_weight_value = { value = spell_effect_ai_weight_value_638 }
 spell_effect_ai_weight_value_638 = {	# death_effect
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = -6000   # Obviously bad
			 # Slightly less bad if you're on death's door already anyway
			if = {
				limit = { health < 3 }
				divide = {
					value = 4
					subtract = health
					min = 1
				}
			}

			multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
		}
	}
 }
 improve_development_ai_weight_value = { value = spell_effect_ai_weight_value_639 }
 spell_effect_ai_weight_value_639 = {	# improve_development
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = 3

			multiply = scope:spell_effect.ai_spell_effect_chance_positive_factor
		}
	}
 }
 reduce_development_ai_weight_value = { value = spell_effect_ai_weight_value_640 }
 spell_effect_ai_weight_value_640 = {	# reduce_development
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
		add = {
			value = -3
			multiply = scope:spell_effect.ai_spell_effect_chance_negative_factor
		}
	}
 }
 add_arcane_fallout_ai_weight_value = { value = spell_effect_ai_weight_value_641 }
 spell_effect_ai_weight_value_641 = {	# add_arcane_fallout
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 remove_arcane_fallout_ai_weight_value = { value = spell_effect_ai_weight_value_642 }
 spell_effect_ai_weight_value_642 = {	# remove_arcane_fallout
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 resist_poison_ai_weight_value = { value = spell_effect_ai_weight_value_643 }
 spell_effect_ai_weight_value_643 = {	# resist_poison
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_magic_baseline_positive_ai_weight_value = { value = spell_effect_ai_weight_value_644 }
 spell_effect_ai_weight_value_644 = {	# add_magic_baseline_positive
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 learn_random_magic_school_spell_ai_weight_value = { value = spell_effect_ai_weight_value_645 }
 spell_effect_ai_weight_value_645 = {	# learn_random_magic_school_spell
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 damage_army_ai_weight_value = { value = spell_effect_ai_weight_value_646 }
 spell_effect_ai_weight_value_646 = {	# damage_army
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 education_lifestyle_xp_gain_mult_negative_ai_weight_value = { value = spell_effect_ai_weight_value_647 }
 spell_effect_ai_weight_value_647 = {	# education_lifestyle_xp_gain_mult_negative
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 knight_summons_ai_weight_value = { value = spell_effect_ai_weight_value_648 }
 spell_effect_ai_weight_value_648 = {	# knight_summons
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 improve_inspiration_quality_ai_weight_value = { value = spell_effect_ai_weight_value_649 }
 spell_effect_ai_weight_value_649 = {	# improve_inspiration_quality
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 dominate_character_ai_weight_value = { value = spell_effect_ai_weight_value_650 }
 spell_effect_ai_weight_value_650 = {	# dominate_character
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_relevant_lifestyle_xp_ai_weight_value = { value = spell_effect_ai_weight_value_651 }
 spell_effect_ai_weight_value_651 = {	# add_relevant_lifestyle_xp
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_relevant_lifestyle_perk_points_ai_weight_value = { value = spell_effect_ai_weight_value_652 }
 spell_effect_ai_weight_value_652 = {	# add_relevant_lifestyle_perk_points
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 destroy_random_building_ai_weight_value = { value = spell_effect_ai_weight_value_653 }
 spell_effect_ai_weight_value_653 = {	# destroy_random_building
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_spell_to_tattoo_list_ai_weight_value = { value = spell_effect_ai_weight_value_654 }
 spell_effect_ai_weight_value_654 = {	# add_spell_to_tattoo_list
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 destroy_sun_ai_weight_value = { value = spell_effect_ai_weight_value_655 }
 spell_effect_ai_weight_value_655 = {	# destroy_sun
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reduce_all_skills_ai_weight_value = { value = spell_effect_ai_weight_value_656 }
 spell_effect_ai_weight_value_656 = {	# reduce_all_skills
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 rank_up_education_effect_ai_weight_value = { value = spell_effect_ai_weight_value_657 }
 spell_effect_ai_weight_value_657 = {	# rank_up_education_effect
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 reveal_secret_ai_weight_value = { value = spell_effect_ai_weight_value_658 }
 spell_effect_ai_weight_value_658 = {	# reveal_secret
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 freeze_target_character_ai_weight_value = { value = spell_effect_ai_weight_value_659 }
 spell_effect_ai_weight_value_659 = {	# freeze_target_character
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 create_skeletal_artifact_ai_weight_value = { value = spell_effect_ai_weight_value_660 }
 spell_effect_ai_weight_value_660 = {	# create_skeletal_artifact
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 dream_glimpse_reality_ai_weight_value = { value = spell_effect_ai_weight_value_661 }
 spell_effect_ai_weight_value_661 = {	# dream_glimpse_reality
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 add_education_progress_ai_weight_value = { value = spell_effect_ai_weight_value_662 }
 spell_effect_ai_weight_value_662 = {	# add_education_progress
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 initiate_interior_journey_ai_weight_value = { value = spell_effect_ai_weight_value_663 }
 spell_effect_ai_weight_value_663 = {	# initiate_interior_journey
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 increase_raid_capture_improvement_ai_weight_value = { value = spell_effect_ai_weight_value_664 }
 spell_effect_ai_weight_value_664 = {	# increase_raid_capture_improvement
	value = 0
	if = {
		limit = { scope:spell_effect.spell_tag_scalar_threshold_diff_value > 0 }
	}
 }
 spell_effect_ai_weight_value_665 = {}
 spell_effect_ai_weight_value_666 = {}
 spell_effect_ai_weight_value_667 = {}
 spell_effect_ai_weight_value_668 = {}
 spell_effect_ai_weight_value_669 = {}
 spell_effect_ai_weight_value_670 = {}
 spell_effect_ai_weight_value_671 = {}
 spell_effect_ai_weight_value_672 = {}
 spell_effect_ai_weight_value_673 = {}
 spell_effect_ai_weight_value_674 = {}
 spell_effect_ai_weight_value_675 = {}
 spell_effect_ai_weight_value_676 = {}
 spell_effect_ai_weight_value_677 = {}
 spell_effect_ai_weight_value_678 = {}
 spell_effect_ai_weight_value_679 = {}
 spell_effect_ai_weight_value_680 = {}
 spell_effect_ai_weight_value_681 = {}
 spell_effect_ai_weight_value_682 = {}
 spell_effect_ai_weight_value_683 = {}
 spell_effect_ai_weight_value_684 = {}
 spell_effect_ai_weight_value_685 = {}
 spell_effect_ai_weight_value_686 = {}
 spell_effect_ai_weight_value_687 = {}
 spell_effect_ai_weight_value_688 = {}
 spell_effect_ai_weight_value_689 = {}
 spell_effect_ai_weight_value_690 = {}
 spell_effect_ai_weight_value_691 = {}
 spell_effect_ai_weight_value_692 = {}
 spell_effect_ai_weight_value_693 = {}
 spell_effect_ai_weight_value_694 = {}
 spell_effect_ai_weight_value_695 = {}
 spell_effect_ai_weight_value_696 = {}
 spell_effect_ai_weight_value_697 = {}
 spell_effect_ai_weight_value_698 = {}
 spell_effect_ai_weight_value_699 = {}
 spell_effect_ai_weight_value_700 = {}
 spell_effect_ai_weight_value_701 = {}
 spell_effect_ai_weight_value_702 = {}
 spell_effect_ai_weight_value_703 = {}
 spell_effect_ai_weight_value_704 = {}
 spell_effect_ai_weight_value_705 = {}
 spell_effect_ai_weight_value_706 = {}
 spell_effect_ai_weight_value_707 = {}
 spell_effect_ai_weight_value_708 = {}
 spell_effect_ai_weight_value_709 = {}
 spell_effect_ai_weight_value_710 = {}
 spell_effect_ai_weight_value_711 = {}
 spell_effect_ai_weight_value_712 = {}
 spell_effect_ai_weight_value_713 = {}
 spell_effect_ai_weight_value_714 = {}
 spell_effect_ai_weight_value_715 = {}
 spell_effect_ai_weight_value_716 = {}
 spell_effect_ai_weight_value_717 = {}
 spell_effect_ai_weight_value_718 = {}
 spell_effect_ai_weight_value_719 = {}
 spell_effect_ai_weight_value_720 = {}
 spell_effect_ai_weight_value_721 = {}
 spell_effect_ai_weight_value_722 = {}
 spell_effect_ai_weight_value_723 = {}
 spell_effect_ai_weight_value_724 = {}
 spell_effect_ai_weight_value_725 = {}
 spell_effect_ai_weight_value_726 = {}
 spell_effect_ai_weight_value_727 = {}
 spell_effect_ai_weight_value_728 = {}
 spell_effect_ai_weight_value_729 = {}
 spell_effect_ai_weight_value_730 = {}
 spell_effect_ai_weight_value_731 = {}
 spell_effect_ai_weight_value_732 = {}
 spell_effect_ai_weight_value_733 = {}
 spell_effect_ai_weight_value_734 = {}
 spell_effect_ai_weight_value_735 = {}
 spell_effect_ai_weight_value_736 = {}
 spell_effect_ai_weight_value_737 = {}
 spell_effect_ai_weight_value_738 = {}
 spell_effect_ai_weight_value_739 = {}
 spell_effect_ai_weight_value_740 = {}
 spell_effect_ai_weight_value_741 = {}
 spell_effect_ai_weight_value_742 = {}
 spell_effect_ai_weight_value_743 = {}
 spell_effect_ai_weight_value_744 = {}
 spell_effect_ai_weight_value_745 = {}
 spell_effect_ai_weight_value_746 = {}
 spell_effect_ai_weight_value_747 = {}
 spell_effect_ai_weight_value_748 = {}
 spell_effect_ai_weight_value_749 = {}
 spell_effect_ai_weight_value_750 = {}
 spell_effect_ai_weight_value_751 = {}
 spell_effect_ai_weight_value_752 = {}
 spell_effect_ai_weight_value_753 = {}
 spell_effect_ai_weight_value_754 = {}
 spell_effect_ai_weight_value_755 = {}
 spell_effect_ai_weight_value_756 = {}
 spell_effect_ai_weight_value_757 = {}
 spell_effect_ai_weight_value_758 = {}
 spell_effect_ai_weight_value_759 = {}
 spell_effect_ai_weight_value_760 = {}
 spell_effect_ai_weight_value_761 = {}
 spell_effect_ai_weight_value_762 = {}
 spell_effect_ai_weight_value_763 = {}
 spell_effect_ai_weight_value_764 = {}
 spell_effect_ai_weight_value_765 = {}
 spell_effect_ai_weight_value_766 = {}
 spell_effect_ai_weight_value_767 = {}
 spell_effect_ai_weight_value_768 = {}
 spell_effect_ai_weight_value_769 = {}
 spell_effect_ai_weight_value_770 = {}
 spell_effect_ai_weight_value_771 = {}
 spell_effect_ai_weight_value_772 = {}
 spell_effect_ai_weight_value_773 = {}
 spell_effect_ai_weight_value_774 = {}
 spell_effect_ai_weight_value_775 = {}
 spell_effect_ai_weight_value_776 = {}
 spell_effect_ai_weight_value_777 = {}
 spell_effect_ai_weight_value_778 = {}
 spell_effect_ai_weight_value_779 = {}
 spell_effect_ai_weight_value_780 = {}
 spell_effect_ai_weight_value_781 = {}
 spell_effect_ai_weight_value_782 = {}
 spell_effect_ai_weight_value_783 = {}
 spell_effect_ai_weight_value_784 = {}
 spell_effect_ai_weight_value_785 = {}
 spell_effect_ai_weight_value_786 = {}
 spell_effect_ai_weight_value_787 = {}
 spell_effect_ai_weight_value_788 = {}
 spell_effect_ai_weight_value_789 = {}
 spell_effect_ai_weight_value_790 = {}
 spell_effect_ai_weight_value_791 = {}
 spell_effect_ai_weight_value_792 = {}
 spell_effect_ai_weight_value_793 = {}
 spell_effect_ai_weight_value_794 = {}
 spell_effect_ai_weight_value_795 = {}
 spell_effect_ai_weight_value_796 = {}
 spell_effect_ai_weight_value_797 = {}
 spell_effect_ai_weight_value_798 = {}
 spell_effect_ai_weight_value_799 = {}
 spell_effect_ai_weight_value_800 = {}
 spell_effect_ai_weight_value_801 = {}
 spell_effect_ai_weight_value_802 = {}
 spell_effect_ai_weight_value_803 = {}
 spell_effect_ai_weight_value_804 = {}
 spell_effect_ai_weight_value_805 = {}
 spell_effect_ai_weight_value_806 = {}
 spell_effect_ai_weight_value_807 = {}
 spell_effect_ai_weight_value_808 = {}
 spell_effect_ai_weight_value_809 = {}
 spell_effect_ai_weight_value_810 = {}
 spell_effect_ai_weight_value_811 = {}
 spell_effect_ai_weight_value_812 = {}
 spell_effect_ai_weight_value_813 = {}
 spell_effect_ai_weight_value_814 = {}
 spell_effect_ai_weight_value_815 = {}
 spell_effect_ai_weight_value_816 = {}
 spell_effect_ai_weight_value_817 = {}
 spell_effect_ai_weight_value_818 = {}
 spell_effect_ai_weight_value_819 = {}
 spell_effect_ai_weight_value_820 = {}
 spell_effect_ai_weight_value_821 = {}
 spell_effect_ai_weight_value_822 = {}
 spell_effect_ai_weight_value_823 = {}
 spell_effect_ai_weight_value_824 = {}
 spell_effect_ai_weight_value_825 = {}
 spell_effect_ai_weight_value_826 = {}
 spell_effect_ai_weight_value_827 = {}
 spell_effect_ai_weight_value_828 = {}
 spell_effect_ai_weight_value_829 = {}
 spell_effect_ai_weight_value_830 = {}
 spell_effect_ai_weight_value_831 = {}
 spell_effect_ai_weight_value_832 = {}
 spell_effect_ai_weight_value_833 = {}
 spell_effect_ai_weight_value_834 = {}
 spell_effect_ai_weight_value_835 = {}
 spell_effect_ai_weight_value_836 = {}
 spell_effect_ai_weight_value_837 = {}
 spell_effect_ai_weight_value_838 = {}
 spell_effect_ai_weight_value_839 = {}
 spell_effect_ai_weight_value_840 = {}
 spell_effect_ai_weight_value_841 = {}
 spell_effect_ai_weight_value_842 = {}
 spell_effect_ai_weight_value_843 = {}
 spell_effect_ai_weight_value_844 = {}
 spell_effect_ai_weight_value_845 = {}
 spell_effect_ai_weight_value_846 = {}
 spell_effect_ai_weight_value_847 = {}
 spell_effect_ai_weight_value_848 = {}
 spell_effect_ai_weight_value_849 = {}
 spell_effect_ai_weight_value_850 = {}
 spell_effect_ai_weight_value_851 = {}
 spell_effect_ai_weight_value_852 = {}
 spell_effect_ai_weight_value_853 = {}
 spell_effect_ai_weight_value_854 = {}
 spell_effect_ai_weight_value_855 = {}
 spell_effect_ai_weight_value_856 = {}
 spell_effect_ai_weight_value_857 = {}
 spell_effect_ai_weight_value_858 = {}
 spell_effect_ai_weight_value_859 = {}
 spell_effect_ai_weight_value_860 = {}
 spell_effect_ai_weight_value_861 = {}
 spell_effect_ai_weight_value_862 = {}
 spell_effect_ai_weight_value_863 = {}
 spell_effect_ai_weight_value_864 = {}
 spell_effect_ai_weight_value_865 = {}
 spell_effect_ai_weight_value_866 = {}
 spell_effect_ai_weight_value_867 = {}
 spell_effect_ai_weight_value_868 = {}
 spell_effect_ai_weight_value_869 = {}
 spell_effect_ai_weight_value_870 = {}
 spell_effect_ai_weight_value_871 = {}
 spell_effect_ai_weight_value_872 = {}
 spell_effect_ai_weight_value_873 = {}
 spell_effect_ai_weight_value_874 = {}
 spell_effect_ai_weight_value_875 = {}
 spell_effect_ai_weight_value_876 = {}
 spell_effect_ai_weight_value_877 = {}
 spell_effect_ai_weight_value_878 = {}
 spell_effect_ai_weight_value_879 = {}
 spell_effect_ai_weight_value_880 = {}
 spell_effect_ai_weight_value_881 = {}
 spell_effect_ai_weight_value_882 = {}
 spell_effect_ai_weight_value_883 = {}
 spell_effect_ai_weight_value_884 = {}
 spell_effect_ai_weight_value_885 = {}
 spell_effect_ai_weight_value_886 = {}
 spell_effect_ai_weight_value_887 = {}
 spell_effect_ai_weight_value_888 = {}
 spell_effect_ai_weight_value_889 = {}
 spell_effect_ai_weight_value_890 = {}
 spell_effect_ai_weight_value_891 = {}
 spell_effect_ai_weight_value_892 = {}
 spell_effect_ai_weight_value_893 = {}
 spell_effect_ai_weight_value_894 = {}
 spell_effect_ai_weight_value_895 = {}
 spell_effect_ai_weight_value_896 = {}
 spell_effect_ai_weight_value_897 = {}
 spell_effect_ai_weight_value_898 = {}
 spell_effect_ai_weight_value_899 = {}
 spell_effect_ai_weight_value_900 = {}
 spell_effect_ai_weight_value_901 = {}
 spell_effect_ai_weight_value_902 = {}
 spell_effect_ai_weight_value_903 = {}
 spell_effect_ai_weight_value_904 = {}
 spell_effect_ai_weight_value_905 = {}
 spell_effect_ai_weight_value_906 = {}
 spell_effect_ai_weight_value_907 = {}
 spell_effect_ai_weight_value_908 = {}
 spell_effect_ai_weight_value_909 = {}
 spell_effect_ai_weight_value_910 = {}
 spell_effect_ai_weight_value_911 = {}
 spell_effect_ai_weight_value_912 = {}
 spell_effect_ai_weight_value_913 = {}
 spell_effect_ai_weight_value_914 = {}
 spell_effect_ai_weight_value_915 = {}
 spell_effect_ai_weight_value_916 = {}
 spell_effect_ai_weight_value_917 = {}
 spell_effect_ai_weight_value_918 = {}
 spell_effect_ai_weight_value_919 = {}
 spell_effect_ai_weight_value_920 = {}
 spell_effect_ai_weight_value_921 = {}
 spell_effect_ai_weight_value_922 = {}
 spell_effect_ai_weight_value_923 = {}
 spell_effect_ai_weight_value_924 = {}
 spell_effect_ai_weight_value_925 = {}
 spell_effect_ai_weight_value_926 = {}
 spell_effect_ai_weight_value_927 = {}
 spell_effect_ai_weight_value_928 = {}
 spell_effect_ai_weight_value_929 = {}
 spell_effect_ai_weight_value_930 = {}
 spell_effect_ai_weight_value_931 = {}
 spell_effect_ai_weight_value_932 = {}
 spell_effect_ai_weight_value_933 = {}
 spell_effect_ai_weight_value_934 = {}
 spell_effect_ai_weight_value_935 = {}
 spell_effect_ai_weight_value_936 = {}
 spell_effect_ai_weight_value_937 = {}
 spell_effect_ai_weight_value_938 = {}
 spell_effect_ai_weight_value_939 = {}
 spell_effect_ai_weight_value_940 = {}
 spell_effect_ai_weight_value_941 = {}
 spell_effect_ai_weight_value_942 = {}
 spell_effect_ai_weight_value_943 = {}
 spell_effect_ai_weight_value_944 = {}
 spell_effect_ai_weight_value_945 = {}
 spell_effect_ai_weight_value_946 = {}
 spell_effect_ai_weight_value_947 = {}
 spell_effect_ai_weight_value_948 = {}
 spell_effect_ai_weight_value_949 = {}
 spell_effect_ai_weight_value_950 = {}
 spell_effect_ai_weight_value_951 = {}
 spell_effect_ai_weight_value_952 = {}
 spell_effect_ai_weight_value_953 = {}
 spell_effect_ai_weight_value_954 = {}
 spell_effect_ai_weight_value_955 = {}
 spell_effect_ai_weight_value_956 = {}
 spell_effect_ai_weight_value_957 = {}
 spell_effect_ai_weight_value_958 = {}
 spell_effect_ai_weight_value_959 = {}
 spell_effect_ai_weight_value_960 = {}
 spell_effect_ai_weight_value_961 = {}
 spell_effect_ai_weight_value_962 = {}
 spell_effect_ai_weight_value_963 = {}
 spell_effect_ai_weight_value_964 = {}
 spell_effect_ai_weight_value_965 = {}
 spell_effect_ai_weight_value_966 = {}
 spell_effect_ai_weight_value_967 = {}
 spell_effect_ai_weight_value_968 = {}
 spell_effect_ai_weight_value_969 = {}
 spell_effect_ai_weight_value_970 = {}
 spell_effect_ai_weight_value_971 = {}
 spell_effect_ai_weight_value_972 = {}
 spell_effect_ai_weight_value_973 = {}
 spell_effect_ai_weight_value_974 = {}
 spell_effect_ai_weight_value_975 = {}
 spell_effect_ai_weight_value_976 = {}
 spell_effect_ai_weight_value_977 = {}
 spell_effect_ai_weight_value_978 = {}
 spell_effect_ai_weight_value_979 = {}
 spell_effect_ai_weight_value_980 = {}
 spell_effect_ai_weight_value_981 = {}
 spell_effect_ai_weight_value_982 = {}
 spell_effect_ai_weight_value_983 = {}
 spell_effect_ai_weight_value_984 = {}
 spell_effect_ai_weight_value_985 = {}
 spell_effect_ai_weight_value_986 = {}
 spell_effect_ai_weight_value_987 = {}
 spell_effect_ai_weight_value_988 = {}
 spell_effect_ai_weight_value_989 = {}
 spell_effect_ai_weight_value_990 = {}
 spell_effect_ai_weight_value_991 = {}
 spell_effect_ai_weight_value_992 = {}
 spell_effect_ai_weight_value_993 = {}
 spell_effect_ai_weight_value_994 = {}
 spell_effect_ai_weight_value_995 = {}
 spell_effect_ai_weight_value_996 = {}
 spell_effect_ai_weight_value_997 = {}
 spell_effect_ai_weight_value_998 = {}
 spell_effect_ai_weight_value_999 = {}
 spell_effect_ai_weight_value_1000 = {}
 spell_effect_ai_weight_value_1001 = {}
 spell_effect_ai_weight_value_1002 = {}
 spell_effect_ai_weight_value_1003 = {}
 spell_effect_ai_weight_value_1004 = {}
 spell_effect_ai_weight_value_1005 = {}
 spell_effect_ai_weight_value_1006 = {}
 spell_effect_ai_weight_value_1007 = {}
 spell_effect_ai_weight_value_1008 = {}
 spell_effect_ai_weight_value_1009 = {}
 spell_effect_ai_weight_value_1010 = {}
 spell_effect_ai_weight_value_1011 = {}
 spell_effect_ai_weight_value_1012 = {}
 spell_effect_ai_weight_value_1013 = {}
 spell_effect_ai_weight_value_1014 = {}
 spell_effect_ai_weight_value_1015 = {}
 spell_effect_ai_weight_value_1016 = {}
 spell_effect_ai_weight_value_1017 = {}
 spell_effect_ai_weight_value_1018 = {}
 spell_effect_ai_weight_value_1019 = {}
 spell_effect_ai_weight_value_1020 = {}
 spell_effect_ai_weight_value_1021 = {}
 spell_effect_ai_weight_value_1022 = {}
 spell_effect_ai_weight_value_1023 = {}