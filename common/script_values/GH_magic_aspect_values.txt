# THIS IS A GENERATED FILE.
#
# Source template:
# added_folders/templates/common/script_values/GH_magic_aspect_values.txt.jinja
#
# Please avoid manually editing this file: your changes WILL be overwritten when it gets regenerated.
# Instead, edit the source template and/or variables, then run render_templates.bat .

aspect_total_spell_level_value = {
	value = 0
	add = fire_aspect_total_spell_level_value
	add = water_aspect_total_spell_level_value
	add = ice_aspect_total_spell_level_value
	add = air_aspect_total_spell_level_value
	add = stone_aspect_total_spell_level_value
	add = dream_aspect_total_spell_level_value
	add = celestial_aspect_total_spell_level_value
	add = dark_aspect_total_spell_level_value
	add = light_aspect_total_spell_level_value
	add = blood_aspect_total_spell_level_value
	add = nature_aspect_total_spell_level_value
	add = ethereal_aspect_total_spell_level_value
	add = hymns_aspect_total_spell_level_value
	add = death_aspect_total_spell_level_value
	add = sand_aspect_total_spell_level_value
	add = metal_aspect_total_spell_level_value
	add = time_aspect_total_spell_level_value
	add = dawn_aspect_total_spell_level_value
}

total_aspect_total_spell_level_value = {
	value = aspect_total_spell_level_value
}

spell_tag_scalar_value = {
	value = 0
	if = {
		limit = {
			save_temporary_scope_as = spell_effect_being_checked_scope
			exists = scope:spell_being_casted 
		}
		scope:spell_being_casted = {
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:total_spell_level
						}
					}
				}
				add = total_aspect_total_spell_level_value
			}
			if = {	# Hackjob solution that needs improvements in the future but good enough for the moment
				limit = {
					exists = scope:spell_organizer.var:cantrip_skill_overcharge
					scope:spell_organizer.var:event_option_displayed_spell ?= scope:spell_being_casted
				}
				add = scope:spell_organizer.var:cantrip_skill_overcharge
			}
			if = {
				limit = {
					exists = scope:spell_organizer
					exists = scope:spell_organizer.var:spell_preparation_story_cycle
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:spell_component_suitability
						}
						exists = var:spell_component
					}
				}
				scope:spell_organizer.var:spell_preparation_story_cycle ?= {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { var:spell_component_template = scope:spell_effect_being_checked_scope.var:spell_component }
						add = character_spell_component_suitability_value
					}
				}
			}
			# Tally up modifiers from spell components that affect specific spell effects
			if = {
				limit = {
					NOT = { exists = prev.var:spell_effect_modifier }
					exists = scope:spell_organizer
					exists = scope:spell_organizer.var:spell_preparation_story_cycle
					scope:spell_organizer.var:spell_preparation_story_cycle ?= { has_variable_list = spell_component_being_prepared_list }
				}
				scope:spell_organizer.var:spell_preparation_story_cycle ?= {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = {
							exists = var:spell_component_ingredient_selection
						}
						var:spell_component_ingredient_selection = {
							if = {
								limit = { has_variable_list = spell_effect_modifier_list }
								every_in_list = {
									variable = spell_effect_modifier_list
									limit = { var:spell_tag_name = scope:spell_effect_being_checked_scope.var:spell_tag_name }
									if = {
										limit = { exists = var:negate_spell_effect }
										subtract = spell_tag_scalar_threshold_diff_value
									}
									else = {
										add = spell_tag_scalar_threshold_diff_value
									}
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					exists = scope:spell_organizer
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:magic_arcane_degeneration_modifier_count
						}
					}
				}
				if = {
					limit = { scope:spell_organizer = { has_variable_list = spell_targets } }
					scope:spell_organizer = {
						every_in_list = {
							variable = spell_targets
							limit = { exists = var:magic_arcane_degeneration_modifier_scale }
							add = var:magic_arcane_degeneration_modifier_scale
						}
					}
				}
				else_if = {
					limit = { scope:spell_organizer = { exists = var:magic_arcane_degeneration_modifier_scale } }
					add = scope:spell_organizer.var:magic_arcane_degeneration_modifier_scale
				}
			}
			if = {
				limit = {
					exists = scope:spell_organizer
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:glassinger_modifier_count
						}
					}
				}
				if = {
					limit = { scope:spell_organizer = { has_variable_list = spell_targets } }
					scope:spell_organizer = {
						every_in_list = {
							variable = spell_targets
							limit = { exists = var:glassinger_modifier_scale }
							add = var:glassinger_modifier_scale
						}
					}
				}
				else_if = {
					limit = { scope:spell_organizer = { exists = var:glassinger_modifier_scale } }
					add = scope:spell_organizer.var:glassinger_modifier_scale
				}
			}
			if = {
				limit = {
					exists = scope:spell_organizer
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:num_of_known_languages
						}
					}
				}
				add = scope:spell_organizer.num_of_known_languages
			}
			if = {
				limit = {
					exists = scope:spell_organizer
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:development
						}
					}
				}
				if = {
					limit = { scope:spell_organizer = { has_variable_list = spell_target_titles } }
					scope:spell_organizer = {
						every_in_list = {
							variable = spell_target_titles
							add = development_level
						}
					}
				}
				else_if = {
					limit = { exists = scope:spell_organizer.location.county }
					add = scope:spell_organizer.location.county.development_level
				}
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:fire
						}
					}
				}
				add = fire_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:water
						}
					}
				}
				add = water_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:ice
						}
					}
				}
				add = ice_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:air
						}
					}
				}
				add = air_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:stone
						}
					}
				}
				add = stone_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:dream
						}
					}
				}
				add = dream_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:celestial
						}
					}
				}
				add = celestial_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:dark
						}
					}
				}
				add = dark_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:light
						}
					}
				}
				add = light_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:blood
						}
					}
				}
				add = blood_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:nature
						}
					}
				}
				add = nature_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:ethereal
						}
					}
				}
				add = ethereal_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:hymns
						}
					}
				}
				add = hymns_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:death
						}
					}
				}
				add = death_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:sand
						}
					}
				}
				add = sand_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:metal
						}
					}
				}
				add = metal_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:time
						}
					}
				}
				add = time_aspect_total_spell_level_value
			}
			if = {
				limit = {
					prev = {
						any_in_list = {
							variable = scaled_by_list
							this = flag:dawn
						}
					}
				}
				add = dawn_aspect_total_spell_level_value
			}
		}
	}
}

spell_tag_scalar_threshold_diff_value = {
	value = spell_tag_scalar_value
	subtract = var:scalar_threshold
	if = {
		limit = { exists = var:cap }
		max = var:cap
	}
}

# For GUI/loc
spell_tag_scalar_threshold_value = {
	value = 0
	if = {
		limit = { exists = var:scalar_threshold }
		value = var:scalar_threshold
	}
}

spell_tag_scalar_threshold_plus_one_value = {
	value = spell_tag_scalar_threshold_value
	add = 1
}
fire_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:fire }
		add = var:fire
	}
}
water_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:water }
		add = var:water
	}
}
ice_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:ice }
		add = var:ice
	}
}
air_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:air }
		add = var:air
	}
}
stone_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:stone }
		add = var:stone
	}
}
dream_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:dream }
		add = var:dream
	}
}
celestial_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:celestial }
		add = var:celestial
	}
}
dark_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:dark }
		add = var:dark
	}
}
light_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:light }
		add = var:light
	}
}
blood_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:blood }
		add = var:blood
	}
}
nature_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:nature }
		add = var:nature
	}
}
ethereal_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:ethereal }
		add = var:ethereal
	}
}
hymns_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:hymns }
		add = var:hymns
	}
}
death_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:death }
		add = var:death
	}
}
sand_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:sand }
		add = var:sand
	}
}
metal_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:metal }
		add = var:metal
	}
}
time_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:time }
		add = var:time
	}
}
dawn_aspect_base_spell_level_value = {
	value = 0
	if = {
		limit = { exists = var:dawn }
		add = var:dawn
	}
}
fire_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:fire_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:fire_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:fire_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:fire_overcharge
	}
}
water_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:water_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:water_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:water_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:water_overcharge
	}
}
ice_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:ice_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:ice_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:ice_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:ice_overcharge
	}
}
air_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:air_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:air_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:air_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:air_overcharge
	}
}
stone_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:stone_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:stone_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:stone_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:stone_overcharge
	}
}
dream_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:dream_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:dream_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:dream_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:dream_overcharge
	}
}
celestial_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:celestial_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:celestial_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:celestial_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:celestial_overcharge
	}
}
dark_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:dark_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:dark_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:dark_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:dark_overcharge
	}
}
light_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:light_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:light_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:light_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:light_overcharge
	}
}
blood_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:blood_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:blood_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:blood_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:blood_overcharge
	}
}
nature_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:nature_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:nature_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:nature_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:nature_overcharge
	}
}
ethereal_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:ethereal_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:ethereal_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:ethereal_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:ethereal_overcharge
	}
}
hymns_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:hymns_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:hymns_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:hymns_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:hymns_overcharge
	}
}
death_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:death_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:death_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:death_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:death_overcharge
	}
}
sand_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:sand_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:sand_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:sand_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:sand_overcharge
	}
}
metal_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:metal_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:metal_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:metal_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:metal_overcharge
	}
}
time_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:time_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:time_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:time_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:time_overcharge
	}
}
dawn_total_overcharge_value = {
	value = 0
	if = {
		limit = { 
			exists = scope:spell_preparation_story_cycle_scope
			#scope:spell_preparation_story_cycle_scope.var:spell_being_prepared = this
			exists = scope:spell_preparation_story_cycle_scope.var:dawn_overcharge
		}
		add = scope:spell_preparation_story_cycle_scope.var:dawn_overcharge
	}
	else_if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
			exists = scope:spell_organizer.var:spell_preparation_story_cycle.var:dawn_overcharge
		}
		add = scope:spell_organizer.var:spell_preparation_story_cycle.var:dawn_overcharge
	}
}
fire_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { fire_aspect_base_spell_level_value > 0 }
		add = {
			value = fire_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:fire
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:fire
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:fire
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:fire
						}
						add = var:spell_component_ingredient_selection.var:fire
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = fire_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
water_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { water_aspect_base_spell_level_value > 0 }
		add = {
			value = water_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:water
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:water
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:water
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:water
						}
						add = var:spell_component_ingredient_selection.var:water
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = water_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
ice_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { ice_aspect_base_spell_level_value > 0 }
		add = {
			value = ice_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:ice
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:ice
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:ice
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:ice
						}
						add = var:spell_component_ingredient_selection.var:ice
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = ice_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
air_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { air_aspect_base_spell_level_value > 0 }
		add = {
			value = air_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:air
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:air
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:air
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:air
						}
						add = var:spell_component_ingredient_selection.var:air
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = air_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
stone_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { stone_aspect_base_spell_level_value > 0 }
		add = {
			value = stone_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:stone
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:stone
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:stone
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:stone
						}
						add = var:spell_component_ingredient_selection.var:stone
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = stone_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
dream_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { dream_aspect_base_spell_level_value > 0 }
		add = {
			value = dream_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:dream
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:dream
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:dream
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:dream
						}
						add = var:spell_component_ingredient_selection.var:dream
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = dream_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
celestial_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { celestial_aspect_base_spell_level_value > 0 }
		add = {
			value = celestial_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:celestial
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:celestial
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:celestial
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:celestial
						}
						add = var:spell_component_ingredient_selection.var:celestial
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = celestial_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
dark_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { dark_aspect_base_spell_level_value > 0 }
		add = {
			value = dark_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:dark
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:dark
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:dark
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:dark
						}
						add = var:spell_component_ingredient_selection.var:dark
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = dark_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
light_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { light_aspect_base_spell_level_value > 0 }
		add = {
			value = light_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:light
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:light
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:light
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:light
						}
						add = var:spell_component_ingredient_selection.var:light
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = light_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
blood_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { blood_aspect_base_spell_level_value > 0 }
		add = {
			value = blood_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:blood
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:blood
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:blood
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:blood
						}
						add = var:spell_component_ingredient_selection.var:blood
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = blood_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waxing_crescent_moon_blood_moon }
		add = {
			value = 1
			desc = waxing_crescent_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:first_quarter_moon_blood_moon }
		add = {
			value = 1
			desc = first_quarter_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waxing_gibbous_moon_blood_moon }
		add = {
			value = 1
			desc = waxing_gibbous_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:full_moon_blood_moon }
		add = {
			value = 2
			desc = full_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waning_gibbous_moon_blood_moon }
		add = {
			value = 1
			desc = waning_gibbous_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:last_quarter_moon_blood_moon }
		add = {
			value = 1
			desc = last_quarter_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waning_crescent_moon_blood_moon }
		add = {
			value = 1
			desc = waning_crescent_moon_blood_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	min = 0
}
nature_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { nature_aspect_base_spell_level_value > 0 }
		add = {
			value = nature_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:nature
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:nature
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:nature
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:nature
						}
						add = var:spell_component_ingredient_selection.var:nature
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = nature_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
ethereal_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { ethereal_aspect_base_spell_level_value > 0 }
		add = {
			value = ethereal_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:ethereal
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:ethereal
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:ethereal
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:ethereal
						}
						add = var:spell_component_ingredient_selection.var:ethereal
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = ethereal_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
hymns_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { hymns_aspect_base_spell_level_value > 0 }
		add = {
			value = hymns_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:hymns
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:hymns
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:hymns
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:hymns
						}
						add = var:spell_component_ingredient_selection.var:hymns
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = hymns_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
death_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { death_aspect_base_spell_level_value > 0 }
		add = {
			value = death_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:death
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:death
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:death
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:death
						}
						add = var:spell_component_ingredient_selection.var:death
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = death_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:new_moon }
		add = {
			value = -2
			desc = new_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waxing_crescent_moon }
		add = {
			value = -1
			desc = waxing_crescent_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waxing_gibbous_moon }
		add = {
			value = 1
			desc = waxing_gibbous_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:full_moon }
		add = {
			value = 2
			desc = full_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waning_gibbous_moon }
		add = {
			value = 1
			desc = waning_gibbous_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { global_var:current_moon_phase.var:moon_phase_name ?= flag:waning_crescent_moon }
		add = {
			value = -1
			desc = waning_crescent_moon_name
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	min = 0
}
sand_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { sand_aspect_base_spell_level_value > 0 }
		add = {
			value = sand_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:sand
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:sand
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:sand
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:sand
						}
						add = var:spell_component_ingredient_selection.var:sand
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = sand_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
metal_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { metal_aspect_base_spell_level_value > 0 }
		add = {
			value = metal_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:metal
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:metal
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:metal
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:metal
						}
						add = var:spell_component_ingredient_selection.var:metal
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = metal_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
time_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { time_aspect_base_spell_level_value > 0 }
		add = {
			value = time_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:time
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:time
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:time
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:time
						}
						add = var:spell_component_ingredient_selection.var:time
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = time_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
dawn_aspect_total_spell_level_value = {
	value = 0
	save_temporary_scope_as = spell_being_casted_temporary_scope
	if = {
		limit = { dawn_aspect_base_spell_level_value > 0 }
		add = {
			value = dawn_aspect_base_spell_level_value
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = scope:spell_organizer
			exists = scope:spell_organizer.var:spell_preparation_story_cycle
		}
		add = {
			value = {
				value = 0
				scope:spell_organizer.var:spell_preparation_story_cycle = {
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:dawn
							exists = var:spell_component_character_selection
						}
						add = character_spell_component_suitability_value
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_artifact_selection
							exists = var:spell_component_artifact_selection.var:dawn
							var:spell_component_artifact_selection.artifact_owner = scope:spell_organizer
						}
						add = var:spell_component_artifact_selection.var:dawn
					}
					every_in_list = {
						variable = spell_component_being_prepared_list
						limit = { 
							var:spell_component_template.var:spell_component_parent_spell = scope:spell_being_casted_temporary_scope
							exists = var:spell_component_template.var:inherits_aspects
							exists = var:spell_component_ingredient_selection
							exists = var:spell_component_ingredient_selection.var:dawn
						}
						add = var:spell_component_ingredient_selection.var:dawn
					}
				}
			}
			desc = ritual_components_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = dawn_total_overcharge_value
		desc = spell_aspect_overcharge_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	# Moon Phase
	min = 0
}
fire_aspect_spell_ratio_value = {
	value = fire_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
water_aspect_spell_ratio_value = {
	value = water_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
ice_aspect_spell_ratio_value = {
	value = ice_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
air_aspect_spell_ratio_value = {
	value = air_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
stone_aspect_spell_ratio_value = {
	value = stone_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
dream_aspect_spell_ratio_value = {
	value = dream_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
celestial_aspect_spell_ratio_value = {
	value = celestial_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
dark_aspect_spell_ratio_value = {
	value = dark_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
light_aspect_spell_ratio_value = {
	value = light_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
blood_aspect_spell_ratio_value = {
	value = blood_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
nature_aspect_spell_ratio_value = {
	value = nature_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
ethereal_aspect_spell_ratio_value = {
	value = ethereal_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
hymns_aspect_spell_ratio_value = {
	value = hymns_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
death_aspect_spell_ratio_value = {
	value = death_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
sand_aspect_spell_ratio_value = {
	value = sand_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
metal_aspect_spell_ratio_value = {
	value = metal_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
time_aspect_spell_ratio_value = {
	value = time_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
dawn_aspect_spell_ratio_value = {
	value = dawn_aspect_base_spell_level_value
	if = {
		limit = { spell_level_value > 0 }
		divide = spell_level_value
	}
}
fire_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { fire_total_overcharge_value > 0 }
		add = fire_total_overcharge_value
		multiply = fire_aspect_success_chance_decrease_per_overcharge_value
	}
}
water_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { water_total_overcharge_value > 0 }
		add = water_total_overcharge_value
		multiply = water_aspect_success_chance_decrease_per_overcharge_value
	}
}
ice_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { ice_total_overcharge_value > 0 }
		add = ice_total_overcharge_value
		multiply = ice_aspect_success_chance_decrease_per_overcharge_value
	}
}
air_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { air_total_overcharge_value > 0 }
		add = air_total_overcharge_value
		multiply = air_aspect_success_chance_decrease_per_overcharge_value
	}
}
stone_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { stone_total_overcharge_value > 0 }
		add = stone_total_overcharge_value
		multiply = stone_aspect_success_chance_decrease_per_overcharge_value
	}
}
dream_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { dream_total_overcharge_value > 0 }
		add = dream_total_overcharge_value
		multiply = dream_aspect_success_chance_decrease_per_overcharge_value
	}
}
celestial_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { celestial_total_overcharge_value > 0 }
		add = celestial_total_overcharge_value
		multiply = celestial_aspect_success_chance_decrease_per_overcharge_value
	}
}
dark_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { dark_total_overcharge_value > 0 }
		add = dark_total_overcharge_value
		multiply = dark_aspect_success_chance_decrease_per_overcharge_value
	}
}
light_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { light_total_overcharge_value > 0 }
		add = light_total_overcharge_value
		multiply = light_aspect_success_chance_decrease_per_overcharge_value
	}
}
blood_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { blood_total_overcharge_value > 0 }
		add = blood_total_overcharge_value
		multiply = blood_aspect_success_chance_decrease_per_overcharge_value
	}
}
nature_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { nature_total_overcharge_value > 0 }
		add = nature_total_overcharge_value
		multiply = nature_aspect_success_chance_decrease_per_overcharge_value
	}
}
ethereal_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { ethereal_total_overcharge_value > 0 }
		add = ethereal_total_overcharge_value
		multiply = ethereal_aspect_success_chance_decrease_per_overcharge_value
	}
}
hymns_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { hymns_total_overcharge_value > 0 }
		add = hymns_total_overcharge_value
		multiply = hymns_aspect_success_chance_decrease_per_overcharge_value
	}
}
death_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { death_total_overcharge_value > 0 }
		add = death_total_overcharge_value
		multiply = death_aspect_success_chance_decrease_per_overcharge_value
	}
}
sand_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { sand_total_overcharge_value > 0 }
		add = sand_total_overcharge_value
		multiply = sand_aspect_success_chance_decrease_per_overcharge_value
	}
}
metal_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { metal_total_overcharge_value > 0 }
		add = metal_total_overcharge_value
		multiply = metal_aspect_success_chance_decrease_per_overcharge_value
	}
}
time_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { time_total_overcharge_value > 0 }
		add = time_total_overcharge_value
		multiply = time_aspect_success_chance_decrease_per_overcharge_value
	}
}
dawn_aspect_overcharge_success_chance_decrease_value = {
	value = 0
	if = {
		limit = { dawn_total_overcharge_value > 0 }
		add = dawn_total_overcharge_value
		multiply = dawn_aspect_success_chance_decrease_per_overcharge_value
	}
}

################################
# ASPECT-SPECIFIC SPELLCASTING #
################################
gluttonous_fire_spellcasting_value_add = 3
compassionate_fire_spellcasting_value_add = 3
forgiving_fire_spellcasting_value_add = 2
gregarious_fire_spellcasting_value_add = 3
wrathful_fire_spellcasting_value_add = 4
impatient_fire_spellcasting_value_add = 2
arbitrary_fire_spellcasting_value_add = 2
vengeful_fire_spellcasting_value_add = 3
lustful_fire_spellcasting_value_add = 3
sadistic_fire_spellcasting_value_add = 2
gh_dragon_red_fire_spellcasting_value_add = 5
gh_magic_debug_fire_spellcasting_value_add = 50

fire_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = fire VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = fire VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = fire VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:fire }
		add = {
			value = var:fire
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gluttonous }
		add = {
			value = gluttonous_fire_spellcasting_value_add
			desc = "[GetTrait('gluttonous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = compassionate }
		add = {
			value = compassionate_fire_spellcasting_value_add
			desc = "[GetTrait('compassionate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = forgiving }
		add = {
			value = forgiving_fire_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gregarious }
		add = {
			value = gregarious_fire_spellcasting_value_add
			desc = "[GetTrait('gregarious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = wrathful }
		add = {
			value = wrathful_fire_spellcasting_value_add
			desc = "[GetTrait('wrathful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = impatient }
		add = {
			value = impatient_fire_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = arbitrary }
		add = {
			value = arbitrary_fire_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = vengeful }
		add = {
			value = vengeful_fire_spellcasting_value_add
			desc = "[GetTrait('vengeful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lustful }
		add = {
			value = lustful_fire_spellcasting_value_add
			desc = "[GetTrait('lustful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = sadistic }
		add = {
			value = sadistic_fire_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_dragon_red }
		add = {
			value = gh_dragon_red_fire_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_red').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_fire_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_sun_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_sun_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_veneration_of_ohrasik } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_veneration_of_ohrasik').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_fire_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_fire_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.fire_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:fire
				}
				add = var:fire
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_fire
		}
		add = {
			value = var:runologic_geometry_perk_fire
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
greedy_water_spellcasting_value_add = 3
forgiving_water_spellcasting_value_add = 2
arbitrary_water_spellcasting_value_add = 2
gluttonous_water_spellcasting_value_add = 3
callous_water_spellcasting_value_add = 3
diligent_water_spellcasting_value_add = 3
lustful_water_spellcasting_value_add = 3
fickle_water_spellcasting_value_add = 4
patient_water_spellcasting_value_add = 1
impatient_water_spellcasting_value_add = 2
gregarious_water_spellcasting_value_add = 3
sadistic_water_spellcasting_value_add = 2
gh_dragon_blue_water_spellcasting_value_add = 5
generous_water_spellcasting_value_add = 2
gh_magic_debug_water_spellcasting_value_add = 50

water_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = water VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = water VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = water VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:water }
		add = {
			value = var:water
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = greedy }
		add = {
			value = greedy_water_spellcasting_value_add
			desc = "[GetTrait('greedy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = forgiving }
		add = {
			value = forgiving_water_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = arbitrary }
		add = {
			value = arbitrary_water_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gluttonous }
		add = {
			value = gluttonous_water_spellcasting_value_add
			desc = "[GetTrait('gluttonous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = callous }
		add = {
			value = callous_water_spellcasting_value_add
			desc = "[GetTrait('callous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = diligent }
		add = {
			value = diligent_water_spellcasting_value_add
			desc = "[GetTrait('diligent').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lustful }
		add = {
			value = lustful_water_spellcasting_value_add
			desc = "[GetTrait('lustful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = fickle }
		add = {
			value = fickle_water_spellcasting_value_add
			desc = "[GetTrait('fickle').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = patient }
		add = {
			value = patient_water_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = impatient }
		add = {
			value = impatient_water_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gregarious }
		add = {
			value = gregarious_water_spellcasting_value_add
			desc = "[GetTrait('gregarious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = sadistic }
		add = {
			value = sadistic_water_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_dragon_blue }
		add = {
			value = gh_dragon_blue_water_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_blue').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = generous }
		add = {
			value = generous_water_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_water_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_water_rituals } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_water_rituals').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_what_lies_below } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_what_lies_below').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_holy_river } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_holy_river').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_seafaring } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_seafaring').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_fishermen } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_fishermen').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_starbound_sojourners } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 6
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_starbound_sojourners').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.water_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:water
				}
				add = var:water
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_water
		}
		add = {
			value = var:runologic_geometry_perk_water
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
lazy_ice_spellcasting_value_add = 4
callous_ice_spellcasting_value_add = 3
content_ice_spellcasting_value_add = 3
patient_ice_spellcasting_value_add = 2
stubborn_ice_spellcasting_value_add = 3
humble_ice_spellcasting_value_add = 3
gh_magic_debug_ice_spellcasting_value_add = 50

ice_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ice VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ice VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ice VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:ice }
		add = {
			value = var:ice
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lazy }
		add = {
			value = lazy_ice_spellcasting_value_add
			desc = "[GetTrait('lazy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = callous }
		add = {
			value = callous_ice_spellcasting_value_add
			desc = "[GetTrait('callous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = content }
		add = {
			value = content_ice_spellcasting_value_add
			desc = "[GetTrait('content').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = patient }
		add = {
			value = patient_ice_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = stubborn }
		add = {
			value = stubborn_ice_spellcasting_value_add
			desc = "[GetTrait('stubborn').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = humble }
		add = {
			value = humble_ice_spellcasting_value_add
			desc = "[GetTrait('humble').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_ice_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_ice_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_ice_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.ice_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:ice
				}
				add = var:ice
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_ice
		}
		add = {
			value = var:runologic_geometry_perk_ice
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
patient_air_spellcasting_value_add = 1
content_air_spellcasting_value_add = 3
calm_air_spellcasting_value_add = 4
trusting_air_spellcasting_value_add = 2
generous_air_spellcasting_value_add = 2
temperate_air_spellcasting_value_add = 2
shy_air_spellcasting_value_add = 3
humble_air_spellcasting_value_add = 3
chaste_air_spellcasting_value_add = 3
craven_air_spellcasting_value_add = 3
gh_magic_debug_air_spellcasting_value_add = 50

air_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = air VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = air VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = air VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:air }
		add = {
			value = var:air
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = patient }
		add = {
			value = patient_air_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = content }
		add = {
			value = content_air_spellcasting_value_add
			desc = "[GetTrait('content').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = calm }
		add = {
			value = calm_air_spellcasting_value_add
			desc = "[GetTrait('calm').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = trusting }
		add = {
			value = trusting_air_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = generous }
		add = {
			value = generous_air_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = temperate }
		add = {
			value = temperate_air_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = shy }
		add = {
			value = shy_air_spellcasting_value_add
			desc = "[GetTrait('shy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = humble }
		add = {
			value = humble_air_spellcasting_value_add
			desc = "[GetTrait('humble').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = chaste }
		add = {
			value = chaste_air_spellcasting_value_add
			desc = "[GetTrait('chaste').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = craven }
		add = {
			value = craven_air_spellcasting_value_add
			desc = "[GetTrait('craven').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_air_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_sky_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_sky_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { faith = { has_doctrine = doctrine_funeral_sky_burial } }
		add = {
			value = 2
			desc = "[GetFaithDoctrine('doctrine_funeral_sky_burial').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_ep2_avid_falconers } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_ep2_avid_falconers').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.air_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:air
				}
				add = var:air
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_air
		}
		add = {
			value = var:runologic_geometry_perk_air
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
brave_stone_spellcasting_value_add = 4
stubborn_stone_spellcasting_value_add = 3
diligent_stone_spellcasting_value_add = 3
compassionate_stone_spellcasting_value_add = 3
forgiving_stone_spellcasting_value_add = 2
impatient_stone_spellcasting_value_add = 2
greedy_stone_spellcasting_value_add = 3
gh_magic_debug_stone_spellcasting_value_add = 50

stone_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = stone VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = stone VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = stone VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:stone }
		add = {
			value = var:stone
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = brave }
		add = {
			value = brave_stone_spellcasting_value_add
			desc = "[GetTrait('brave').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = stubborn }
		add = {
			value = stubborn_stone_spellcasting_value_add
			desc = "[GetTrait('stubborn').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = diligent }
		add = {
			value = diligent_stone_spellcasting_value_add
			desc = "[GetTrait('diligent').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = compassionate }
		add = {
			value = compassionate_stone_spellcasting_value_add
			desc = "[GetTrait('compassionate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = forgiving }
		add = {
			value = forgiving_stone_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = impatient }
		add = {
			value = impatient_stone_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = greedy }
		add = {
			value = greedy_stone_spellcasting_value_add
			desc = "[GetTrait('greedy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_stone_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_stone_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_stone_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_mountain_homes } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_mountain_homes').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_runestones } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_runestones').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.stone_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:stone
				}
				add = var:stone
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_stone
		}
		add = {
			value = var:runologic_geometry_perk_stone
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_beset_by_visions_dream_spellcasting_value_add = 3
lunatic_1_dream_spellcasting_value_add = 3
lunatic_genetic_dream_spellcasting_value_add = 3
paranoid_dream_spellcasting_value_add = 4
patient_dream_spellcasting_value_add = 2
ambitious_dream_spellcasting_value_add = 4
eccentric_dream_spellcasting_value_add = 4
sadistic_dream_spellcasting_value_add = 2
trusting_dream_spellcasting_value_add = 2
gh_magic_debug_dream_spellcasting_value_add = 50

dream_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dream VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dream VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dream VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:dream }
		add = {
			value = var:dream
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_beset_by_visions }
		add = {
			value = gh_beset_by_visions_dream_spellcasting_value_add
			desc = "[GetTrait('gh_beset_by_visions').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lunatic_1 }
		add = {
			value = lunatic_1_dream_spellcasting_value_add
			desc = "[GetTrait('lunatic_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lunatic_genetic }
		add = {
			value = lunatic_genetic_dream_spellcasting_value_add
			desc = "[GetTrait('lunatic_genetic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = paranoid }
		add = {
			value = paranoid_dream_spellcasting_value_add
			desc = "[GetTrait('paranoid').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = patient }
		add = {
			value = patient_dream_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = ambitious }
		add = {
			value = ambitious_dream_spellcasting_value_add
			desc = "[GetTrait('ambitious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = eccentric }
		add = {
			value = eccentric_dream_spellcasting_value_add
			desc = "[GetTrait('eccentric').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = sadistic }
		add = {
			value = sadistic_dream_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = trusting }
		add = {
			value = trusting_dream_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_dream_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_dream_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_dream_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = gh_tradition_dream_guidance } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('gh_tradition_dream_guidance').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_dream_interpreters } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_dream_interpreters').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.dream_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:dream
				}
				add = var:dream
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_dream
		}
		add = {
			value = var:runologic_geometry_perk_dream
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_aervalrian_curse_celestial_spellcasting_value_add = 3
scholar_celestial_spellcasting_value_add = 2
temperate_celestial_spellcasting_value_add = 2
gh_magic_debug_celestial_spellcasting_value_add = 50
magic_good_1_celestial_spellcasting_value_add = 1
magic_good_2_celestial_spellcasting_value_add = 1
magic_good_3_celestial_spellcasting_value_add = 1
magic_good_4_celestial_spellcasting_value_add = 1
magic_good_5_celestial_spellcasting_value_add = 1
magic_good_6_celestial_spellcasting_value_add = 1
magic_good_7_celestial_spellcasting_value_add = 1
magic_good_8_celestial_spellcasting_value_add = 1
magic_good_9_celestial_spellcasting_value_add = 1
magic_good_10_celestial_spellcasting_value_add = 1
magic_good_11_celestial_spellcasting_value_add = 1
magic_good_12_celestial_spellcasting_value_add = 1
magic_good_13_celestial_spellcasting_value_add = 1
magic_good_14_celestial_spellcasting_value_add = 1
magic_good_15_celestial_spellcasting_value_add = 1
magic_good_16_celestial_spellcasting_value_add = 1
magic_good_17_celestial_spellcasting_value_add = 1
magic_good_18_celestial_spellcasting_value_add = 1
magic_good_19_celestial_spellcasting_value_add = 1
magic_good_20_celestial_spellcasting_value_add = 1

celestial_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = celestial VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = celestial VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = celestial VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:celestial }
		add = {
			value = var:celestial
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_aervalrian_curse }
		add = {
			value = gh_aervalrian_curse_celestial_spellcasting_value_add
			desc = "[GetTrait('gh_aervalrian_curse').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = scholar }
		add = {
			value = scholar_celestial_spellcasting_value_add
			desc = "[GetTrait('scholar').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = temperate }
		add = {
			value = temperate_celestial_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_celestial_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_1 }
		add = {
			value = magic_good_1_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_2 }
		add = {
			value = magic_good_2_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_3 }
		add = {
			value = magic_good_3_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_4 }
		add = {
			value = magic_good_4_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_5 }
		add = {
			value = magic_good_5_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_6 }
		add = {
			value = magic_good_6_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_6').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_7 }
		add = {
			value = magic_good_7_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_7').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_8 }
		add = {
			value = magic_good_8_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_8').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_9 }
		add = {
			value = magic_good_9_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_9').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_10 }
		add = {
			value = magic_good_10_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_10').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_11 }
		add = {
			value = magic_good_11_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_11').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_12 }
		add = {
			value = magic_good_12_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_12').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_13 }
		add = {
			value = magic_good_13_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_13').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_14 }
		add = {
			value = magic_good_14_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_14').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_15 }
		add = {
			value = magic_good_15_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_15').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_16 }
		add = {
			value = magic_good_16_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_16').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_17 }
		add = {
			value = magic_good_17_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_17').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_18 }
		add = {
			value = magic_good_18_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_18').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_19 }
		add = {
			value = magic_good_19_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_19').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = magic_good_20 }
		add = {
			value = magic_good_20_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_20').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_astrology } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_astrology').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.celestial_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:celestial
				}
				add = var:celestial
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_celestial
		}
		add = {
			value = var:runologic_geometry_perk_celestial
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
deceitful_dark_spellcasting_value_add = 4
arbitrary_dark_spellcasting_value_add = 2
cynical_dark_spellcasting_value_add = 4
torturer_dark_spellcasting_value_add = 2
shy_dark_spellcasting_value_add = 3
craven_dark_spellcasting_value_add = 3
gh_dragon_black_dark_spellcasting_value_add = 5
gh_blackspawn_1_dark_spellcasting_value_add = 6
gh_blackspawn_2_dark_spellcasting_value_add = 8
gh_blackspawn_3_dark_spellcasting_value_add = 10
gh_blackspawn_4_dark_spellcasting_value_add = 12
gh_blackspawn_5_dark_spellcasting_value_add = 14
gh_magic_debug_dark_spellcasting_value_add = 50

dark_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dark VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dark VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dark VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:dark }
		add = {
			value = var:dark
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = deceitful }
		add = {
			value = deceitful_dark_spellcasting_value_add
			desc = "[GetTrait('deceitful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = arbitrary }
		add = {
			value = arbitrary_dark_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = cynical }
		add = {
			value = cynical_dark_spellcasting_value_add
			desc = "[GetTrait('cynical').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = torturer }
		add = {
			value = torturer_dark_spellcasting_value_add
			desc = "[GetTrait('torturer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = shy }
		add = {
			value = shy_dark_spellcasting_value_add
			desc = "[GetTrait('shy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = craven }
		add = {
			value = craven_dark_spellcasting_value_add
			desc = "[GetTrait('craven').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_dragon_black }
		add = {
			value = gh_dragon_black_dark_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_black').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_blackspawn_1 }
		add = {
			value = gh_blackspawn_1_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_blackspawn_2 }
		add = {
			value = gh_blackspawn_2_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_blackspawn_3 }
		add = {
			value = gh_blackspawn_3_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_blackspawn_4 }
		add = {
			value = gh_blackspawn_4_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_blackspawn_5 }
		add = {
			value = gh_blackspawn_5_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_dark_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_dark_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_dark_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_what_lies_below } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_what_lies_below').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_call_of_the_void } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_call_of_the_void').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_kedari_marked } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_kedari_marked').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.dark_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:dark
				}
				add = var:dark
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_dark
		}
		add = {
			value = var:runologic_geometry_perk_dark
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
theologian_light_spellcasting_value_add = 2
lifestyle_mystic_light_spellcasting_value_add = 1
honest_light_spellcasting_value_add = 4
just_light_spellcasting_value_add = 4
arrogant_light_spellcasting_value_add = 4
zealous_light_spellcasting_value_add = 4
trusting_light_spellcasting_value_add = 2
generous_light_spellcasting_value_add = 2
temperate_light_spellcasting_value_add = 2
chaste_light_spellcasting_value_add = 3
gh_magic_debug_light_spellcasting_value_add = 50

light_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = light VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = light VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = light VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:light }
		add = {
			value = var:light
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = theologian }
		add = {
			value = theologian_light_spellcasting_value_add
			desc = "[GetTrait('theologian').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_mystic }
		add = {
			value = lifestyle_mystic_light_spellcasting_value_add
			desc = "[GetTrait('lifestyle_mystic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = honest }
		add = {
			value = honest_light_spellcasting_value_add
			desc = "[GetTrait('honest').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = just }
		add = {
			value = just_light_spellcasting_value_add
			desc = "[GetTrait('just').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = arrogant }
		add = {
			value = arrogant_light_spellcasting_value_add
			desc = "[GetTrait('arrogant').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = zealous }
		add = {
			value = zealous_light_spellcasting_value_add
			desc = "[GetTrait('zealous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = trusting }
		add = {
			value = trusting_light_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = generous }
		add = {
			value = generous_light_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = temperate }
		add = {
			value = temperate_light_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = chaste }
		add = {
			value = chaste_light_spellcasting_value_add
			desc = "[GetTrait('chaste').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_light_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_mogowai_search } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_mogowai_search').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_marefai } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_marefai').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_nitsafai } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_nitsafai').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_bekashai } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_bekashai').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_gnosticism } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_gnosticism').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_sun_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_sun_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_veneration_of_ohrasik } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_veneration_of_ohrasik').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_knowledge_veneration } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_knowledge_veneration').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_legalistic } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_legalistic').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.light_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:light
				}
				add = var:light
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_light
		}
		add = {
			value = var:runologic_geometry_perk_light
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_power_bleeder_blood_spellcasting_value_add = 3
lifestyle_reveler_blood_spellcasting_value_add = 1
seducer_blood_spellcasting_value_add = 2
torturer_blood_spellcasting_value_add = 2
lifestyle_physician_blood_spellcasting_value_add = 3
gh_magic_debug_blood_spellcasting_value_add = 50

blood_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = blood VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = blood VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = blood VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:blood }
		add = {
			value = var:blood
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_power_bleeder }
		add = {
			value = gh_power_bleeder_blood_spellcasting_value_add
			desc = "[GetTrait('gh_power_bleeder').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_reveler }
		add = {
			value = lifestyle_reveler_blood_spellcasting_value_add
			desc = "[GetTrait('lifestyle_reveler').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = seducer }
		add = {
			value = seducer_blood_spellcasting_value_add
			desc = "[GetTrait('seducer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = torturer }
		add = {
			value = torturer_blood_spellcasting_value_add
			desc = "[GetTrait('torturer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_physician }
		add = {
			value = lifestyle_physician_blood_spellcasting_value_add
			desc = "[GetTrait('lifestyle_physician').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_blood_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_the_bloodright } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_the_bloodright').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_high_bloodright } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_high_bloodright').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_carnal_exaltation } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_carnal_exaltation').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_blood_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_blood_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_blood_magi } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_blood_magi').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_legacy_of_aversaria } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_legacy_of_aversaria').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_legacy_of_aversaria_lesser } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_legacy_of_aversaria_lesser').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_mystical_midwives } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_mystical_midwives').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.blood_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:blood
				}
				add = var:blood
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_blood
		}
		add = {
			value = var:runologic_geometry_perk_blood
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
lifestyle_hunter_nature_spellcasting_value_add = 2
lifestyle_herbalist_nature_spellcasting_value_add = 2
lifestyle_gardener_nature_spellcasting_value_add = 2
gh_dragon_green_nature_spellcasting_value_add = 5
gh_magic_debug_nature_spellcasting_value_add = 50
lifestyle_one_with_nature_nature_spellcasting_value_add = 2

nature_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = nature VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = nature VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = nature VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:nature }
		add = {
			value = var:nature
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_hunter }
		add = {
			value = lifestyle_hunter_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_hunter').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_herbalist }
		add = {
			value = lifestyle_herbalist_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_herbalist').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_gardener }
		add = {
			value = lifestyle_gardener_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_gardener').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_dragon_green }
		add = {
			value = gh_dragon_green_nature_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_green').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_nature_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = lifestyle_one_with_nature }
		add = {
			value = lifestyle_one_with_nature_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_one_with_nature').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_sanctity_of_nature } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_sanctity_of_nature').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_jungle_dwellers } }
		add = {
			value = 3
			desc = "[GetCultureTradition('tradition_jungle_dwellers').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_medicinal_plants } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_medicinal_plants').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_ce1_ritual_washing } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_ce1_ritual_washing').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.nature_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:nature
				}
				add = var:nature
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_nature
		}
		add = {
			value = var:runologic_geometry_perk_nature
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_racked_by_voices_ethereal_spellcasting_value_add = 3
gh_riftsight_1_ethereal_spellcasting_value_add = 2
gh_riftsight_2_ethereal_spellcasting_value_add = 4
gh_riftsight_3_ethereal_spellcasting_value_add = 6
gh_riftsight_4_ethereal_spellcasting_value_add = 8
gh_magic_debug_ethereal_spellcasting_value_add = 50

ethereal_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ethereal VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ethereal VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = ethereal VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:ethereal }
		add = {
			value = var:ethereal
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_racked_by_voices }
		add = {
			value = gh_racked_by_voices_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_racked_by_voices').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_riftsight_1 }
		add = {
			value = gh_riftsight_1_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_riftsight_2 }
		add = {
			value = gh_riftsight_2_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_riftsight_3 }
		add = {
			value = gh_riftsight_3_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_riftsight_4 }
		add = {
			value = gh_riftsight_4_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_the_mistmothers_speak } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_the_mistmothers_speak').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_ancestor_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_ancestor_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.ethereal_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:ethereal
				}
				add = var:ethereal
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_ethereal
		}
		add = {
			value = var:runologic_geometry_perk_ethereal
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_hymns_spellcasting_value_add = 50

hymns_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = hymns VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = hymns VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = hymns VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:hymns }
		add = {
			value = var:hymns
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_hymns_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_hymns_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_hymns_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.hymns_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:hymns
				}
				add = var:hymns
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_hymns
		}
		add = {
			value = var:runologic_geometry_perk_hymns
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_death_spellcasting_value_add = 50
education_lich_1_death_spellcasting_value_add = 6
education_lich_2_death_spellcasting_value_add = 8
education_lich_3_death_spellcasting_value_add = 10
education_lich_4_death_spellcasting_value_add = 12
education_lich_5_death_spellcasting_value_add = 14
gh_arch_lich_1_death_spellcasting_value_add = 18

death_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = death VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = death VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = death VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:death }
		add = {
			value = var:death
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_death_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = education_lich_1 }
		add = {
			value = education_lich_1_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = education_lich_2 }
		add = {
			value = education_lich_2_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = education_lich_3 }
		add = {
			value = education_lich_3_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = education_lich_4 }
		add = {
			value = education_lich_4_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = education_lich_5 }
		add = {
			value = education_lich_5_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_arch_lich_1 }
		add = {
			value = gh_arch_lich_1_death_spellcasting_value_add
			desc = "[GetTrait('gh_arch_lich_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_consolamentum } }
		add = {
			value = {
				value = piety_level
				multiply = 1
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_consolamentum').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_death_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_death_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.death_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:death
				}
				add = var:death
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_death
		}
		add = {
			value = var:runologic_geometry_perk_death
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_sand_spellcasting_value_add = 50

sand_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = sand VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = sand VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = sand VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:sand }
		add = {
			value = var:sand
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_sand_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_sand_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_sand_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.sand_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:sand
				}
				add = var:sand
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_sand
		}
		add = {
			value = var:runologic_geometry_perk_sand
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_metal_spellcasting_value_add = 50

metal_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = metal VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = metal VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = metal VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:metal }
		add = {
			value = var:metal
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_metal_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_metal_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_metal_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_sorcerous_metallurgy } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_sorcerous_metallurgy').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.metal_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:metal
				}
				add = var:metal
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_metal
		}
		add = {
			value = var:runologic_geometry_perk_metal
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_time_spellcasting_value_add = 50

time_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = time VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = time VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = time VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:time }
		add = {
			value = var:time
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_time_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_time_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_time_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_storytellers } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_storytellers').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { culture = { has_cultural_tradition = tradition_proud_history } }
		add = {
			value = {
				value = character_arcana_baseline_value
				divide = 5
				floor = yes
			}
			desc = "[GetCultureTradition('tradition_proud_history').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.time_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:time
				}
				add = var:time
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_time
		}
		add = {
			value = var:runologic_geometry_perk_time
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
gh_magic_debug_dawn_spellcasting_value_add = 50

dawn_aspect_spellcasting_value = {
	value = 0
	if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dawn VALUE = 3 } }
		add = {
			value = 12
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dawn VALUE = 2 } }
		add = {
			value = 8
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	else_if = {
		limit = { knows_magic_school_with_aspect_at_level_trigger = { ASPECT = dawn VALUE = 1 } }
		add = {
			value = 4
			desc = magic_schools_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { exists = var:dawn }
		add = {
			value = var:dawn
			desc = spell_aspect_base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_trait = gh_magic_debug }
		add = {
			value = gh_magic_debug_dawn_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { faith = { has_doctrine = tenet_dawn_worship } }
		add = {
			value = {
				value = piety_level
				multiply = 2
				floor = yes
			}
			desc = "[GetFaithDoctrine('tenet_dawn_worship').GetBaseName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			exists = capital_province
			capital_province = { has_building_with_flag = activates_province_aspects }
		}
		add = {
			value = capital_province.dawn_aspect_province_value
			desc = "Столичная провинция"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	add = {
		value = {
			value = 0
			every_equipped_character_artifact = {
				limit = {
					exists = var:dawn
				}
				add = var:dawn
			}
		}
		desc = artifacts_value_desc
		format = "ASPECT_VALUE_FORMAT"
	}
	if = {
		limit = {
			has_perk = arcana_erudition_perk7_tree3
			exists = var:runologic_geometry_perk_dawn
		}
		add = {
			value = var:runologic_geometry_perk_dawn
			desc = arcana_erudition_perk7_tree3_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
fire_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:fire }
		add = {
			value = var:fire
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gluttonous
			}
		}
		add = {
			value = gluttonous_fire_spellcasting_value_add
			desc = "[GetTrait('gluttonous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:compassionate
			}
		}
		add = {
			value = compassionate_fire_spellcasting_value_add
			desc = "[GetTrait('compassionate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:forgiving
			}
		}
		add = {
			value = forgiving_fire_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gregarious
			}
		}
		add = {
			value = gregarious_fire_spellcasting_value_add
			desc = "[GetTrait('gregarious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:wrathful
			}
		}
		add = {
			value = wrathful_fire_spellcasting_value_add
			desc = "[GetTrait('wrathful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:impatient
			}
		}
		add = {
			value = impatient_fire_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:arbitrary
			}
		}
		add = {
			value = arbitrary_fire_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:vengeful
			}
		}
		add = {
			value = vengeful_fire_spellcasting_value_add
			desc = "[GetTrait('vengeful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lustful
			}
		}
		add = {
			value = lustful_fire_spellcasting_value_add
			desc = "[GetTrait('lustful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:sadistic
			}
		}
		add = {
			value = sadistic_fire_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_dragon_red
			}
		}
		add = {
			value = gh_dragon_red_fire_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_red').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_fire_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
water_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:water }
		add = {
			value = var:water
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:greedy
			}
		}
		add = {
			value = greedy_water_spellcasting_value_add
			desc = "[GetTrait('greedy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:forgiving
			}
		}
		add = {
			value = forgiving_water_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:arbitrary
			}
		}
		add = {
			value = arbitrary_water_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gluttonous
			}
		}
		add = {
			value = gluttonous_water_spellcasting_value_add
			desc = "[GetTrait('gluttonous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:callous
			}
		}
		add = {
			value = callous_water_spellcasting_value_add
			desc = "[GetTrait('callous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:diligent
			}
		}
		add = {
			value = diligent_water_spellcasting_value_add
			desc = "[GetTrait('diligent').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lustful
			}
		}
		add = {
			value = lustful_water_spellcasting_value_add
			desc = "[GetTrait('lustful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:fickle
			}
		}
		add = {
			value = fickle_water_spellcasting_value_add
			desc = "[GetTrait('fickle').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:patient
			}
		}
		add = {
			value = patient_water_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:impatient
			}
		}
		add = {
			value = impatient_water_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gregarious
			}
		}
		add = {
			value = gregarious_water_spellcasting_value_add
			desc = "[GetTrait('gregarious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:sadistic
			}
		}
		add = {
			value = sadistic_water_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_dragon_blue
			}
		}
		add = {
			value = gh_dragon_blue_water_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_blue').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:generous
			}
		}
		add = {
			value = generous_water_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_water_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
ice_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:ice }
		add = {
			value = var:ice
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lazy
			}
		}
		add = {
			value = lazy_ice_spellcasting_value_add
			desc = "[GetTrait('lazy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:callous
			}
		}
		add = {
			value = callous_ice_spellcasting_value_add
			desc = "[GetTrait('callous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:content
			}
		}
		add = {
			value = content_ice_spellcasting_value_add
			desc = "[GetTrait('content').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:patient
			}
		}
		add = {
			value = patient_ice_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:stubborn
			}
		}
		add = {
			value = stubborn_ice_spellcasting_value_add
			desc = "[GetTrait('stubborn').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:humble
			}
		}
		add = {
			value = humble_ice_spellcasting_value_add
			desc = "[GetTrait('humble').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_ice_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
air_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:air }
		add = {
			value = var:air
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:patient
			}
		}
		add = {
			value = patient_air_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:content
			}
		}
		add = {
			value = content_air_spellcasting_value_add
			desc = "[GetTrait('content').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:calm
			}
		}
		add = {
			value = calm_air_spellcasting_value_add
			desc = "[GetTrait('calm').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:trusting
			}
		}
		add = {
			value = trusting_air_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:generous
			}
		}
		add = {
			value = generous_air_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:temperate
			}
		}
		add = {
			value = temperate_air_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:shy
			}
		}
		add = {
			value = shy_air_spellcasting_value_add
			desc = "[GetTrait('shy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:humble
			}
		}
		add = {
			value = humble_air_spellcasting_value_add
			desc = "[GetTrait('humble').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:chaste
			}
		}
		add = {
			value = chaste_air_spellcasting_value_add
			desc = "[GetTrait('chaste').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:craven
			}
		}
		add = {
			value = craven_air_spellcasting_value_add
			desc = "[GetTrait('craven').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_air_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
stone_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:stone }
		add = {
			value = var:stone
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:brave
			}
		}
		add = {
			value = brave_stone_spellcasting_value_add
			desc = "[GetTrait('brave').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:stubborn
			}
		}
		add = {
			value = stubborn_stone_spellcasting_value_add
			desc = "[GetTrait('stubborn').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:diligent
			}
		}
		add = {
			value = diligent_stone_spellcasting_value_add
			desc = "[GetTrait('diligent').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:compassionate
			}
		}
		add = {
			value = compassionate_stone_spellcasting_value_add
			desc = "[GetTrait('compassionate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:forgiving
			}
		}
		add = {
			value = forgiving_stone_spellcasting_value_add
			desc = "[GetTrait('forgiving').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:impatient
			}
		}
		add = {
			value = impatient_stone_spellcasting_value_add
			desc = "[GetTrait('impatient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:greedy
			}
		}
		add = {
			value = greedy_stone_spellcasting_value_add
			desc = "[GetTrait('greedy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_stone_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
dream_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:dream }
		add = {
			value = var:dream
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_beset_by_visions
			}
		}
		add = {
			value = gh_beset_by_visions_dream_spellcasting_value_add
			desc = "[GetTrait('gh_beset_by_visions').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lunatic_1
			}
		}
		add = {
			value = lunatic_1_dream_spellcasting_value_add
			desc = "[GetTrait('lunatic_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lunatic_genetic
			}
		}
		add = {
			value = lunatic_genetic_dream_spellcasting_value_add
			desc = "[GetTrait('lunatic_genetic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:paranoid
			}
		}
		add = {
			value = paranoid_dream_spellcasting_value_add
			desc = "[GetTrait('paranoid').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:patient
			}
		}
		add = {
			value = patient_dream_spellcasting_value_add
			desc = "[GetTrait('patient').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:ambitious
			}
		}
		add = {
			value = ambitious_dream_spellcasting_value_add
			desc = "[GetTrait('ambitious').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:eccentric
			}
		}
		add = {
			value = eccentric_dream_spellcasting_value_add
			desc = "[GetTrait('eccentric').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:sadistic
			}
		}
		add = {
			value = sadistic_dream_spellcasting_value_add
			desc = "[GetTrait('sadistic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:trusting
			}
		}
		add = {
			value = trusting_dream_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_dream_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
celestial_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:celestial }
		add = {
			value = var:celestial
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_aervalrian_curse
			}
		}
		add = {
			value = gh_aervalrian_curse_celestial_spellcasting_value_add
			desc = "[GetTrait('gh_aervalrian_curse').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:scholar
			}
		}
		add = {
			value = scholar_celestial_spellcasting_value_add
			desc = "[GetTrait('scholar').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:temperate
			}
		}
		add = {
			value = temperate_celestial_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_celestial_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_1
			}
		}
		add = {
			value = magic_good_1_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_2
			}
		}
		add = {
			value = magic_good_2_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_3
			}
		}
		add = {
			value = magic_good_3_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_4
			}
		}
		add = {
			value = magic_good_4_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_5
			}
		}
		add = {
			value = magic_good_5_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_6
			}
		}
		add = {
			value = magic_good_6_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_6').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_7
			}
		}
		add = {
			value = magic_good_7_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_7').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_8
			}
		}
		add = {
			value = magic_good_8_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_8').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_9
			}
		}
		add = {
			value = magic_good_9_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_9').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_10
			}
		}
		add = {
			value = magic_good_10_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_10').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_11
			}
		}
		add = {
			value = magic_good_11_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_11').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_12
			}
		}
		add = {
			value = magic_good_12_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_12').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_13
			}
		}
		add = {
			value = magic_good_13_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_13').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_14
			}
		}
		add = {
			value = magic_good_14_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_14').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_15
			}
		}
		add = {
			value = magic_good_15_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_15').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_16
			}
		}
		add = {
			value = magic_good_16_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_16').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_17
			}
		}
		add = {
			value = magic_good_17_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_17').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_18
			}
		}
		add = {
			value = magic_good_18_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_18').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_19
			}
		}
		add = {
			value = magic_good_19_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_19').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:magic_good_20
			}
		}
		add = {
			value = magic_good_20_celestial_spellcasting_value_add
			desc = "[GetTrait('magic_good_20').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
dark_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:dark }
		add = {
			value = var:dark
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:deceitful
			}
		}
		add = {
			value = deceitful_dark_spellcasting_value_add
			desc = "[GetTrait('deceitful').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:arbitrary
			}
		}
		add = {
			value = arbitrary_dark_spellcasting_value_add
			desc = "[GetTrait('arbitrary').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:cynical
			}
		}
		add = {
			value = cynical_dark_spellcasting_value_add
			desc = "[GetTrait('cynical').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:torturer
			}
		}
		add = {
			value = torturer_dark_spellcasting_value_add
			desc = "[GetTrait('torturer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:shy
			}
		}
		add = {
			value = shy_dark_spellcasting_value_add
			desc = "[GetTrait('shy').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:craven
			}
		}
		add = {
			value = craven_dark_spellcasting_value_add
			desc = "[GetTrait('craven').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_dragon_black
			}
		}
		add = {
			value = gh_dragon_black_dark_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_black').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_blackspawn_1
			}
		}
		add = {
			value = gh_blackspawn_1_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_blackspawn_2
			}
		}
		add = {
			value = gh_blackspawn_2_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_blackspawn_3
			}
		}
		add = {
			value = gh_blackspawn_3_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_blackspawn_4
			}
		}
		add = {
			value = gh_blackspawn_4_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_blackspawn_5
			}
		}
		add = {
			value = gh_blackspawn_5_dark_spellcasting_value_add
			desc = "[GetTrait('gh_blackspawn_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_dark_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
light_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:light }
		add = {
			value = var:light
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:theologian
			}
		}
		add = {
			value = theologian_light_spellcasting_value_add
			desc = "[GetTrait('theologian').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_mystic
			}
		}
		add = {
			value = lifestyle_mystic_light_spellcasting_value_add
			desc = "[GetTrait('lifestyle_mystic').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:honest
			}
		}
		add = {
			value = honest_light_spellcasting_value_add
			desc = "[GetTrait('honest').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:just
			}
		}
		add = {
			value = just_light_spellcasting_value_add
			desc = "[GetTrait('just').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:arrogant
			}
		}
		add = {
			value = arrogant_light_spellcasting_value_add
			desc = "[GetTrait('arrogant').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:zealous
			}
		}
		add = {
			value = zealous_light_spellcasting_value_add
			desc = "[GetTrait('zealous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:trusting
			}
		}
		add = {
			value = trusting_light_spellcasting_value_add
			desc = "[GetTrait('trusting').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:generous
			}
		}
		add = {
			value = generous_light_spellcasting_value_add
			desc = "[GetTrait('generous').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:temperate
			}
		}
		add = {
			value = temperate_light_spellcasting_value_add
			desc = "[GetTrait('temperate').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:chaste
			}
		}
		add = {
			value = chaste_light_spellcasting_value_add
			desc = "[GetTrait('chaste').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_light_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
blood_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:blood }
		add = {
			value = var:blood
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_power_bleeder
			}
		}
		add = {
			value = gh_power_bleeder_blood_spellcasting_value_add
			desc = "[GetTrait('gh_power_bleeder').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_reveler
			}
		}
		add = {
			value = lifestyle_reveler_blood_spellcasting_value_add
			desc = "[GetTrait('lifestyle_reveler').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:seducer
			}
		}
		add = {
			value = seducer_blood_spellcasting_value_add
			desc = "[GetTrait('seducer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:torturer
			}
		}
		add = {
			value = torturer_blood_spellcasting_value_add
			desc = "[GetTrait('torturer').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_physician
			}
		}
		add = {
			value = lifestyle_physician_blood_spellcasting_value_add
			desc = "[GetTrait('lifestyle_physician').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_blood_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
nature_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:nature }
		add = {
			value = var:nature
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_hunter
			}
		}
		add = {
			value = lifestyle_hunter_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_hunter').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_herbalist
			}
		}
		add = {
			value = lifestyle_herbalist_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_herbalist').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_gardener
			}
		}
		add = {
			value = lifestyle_gardener_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_gardener').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_dragon_green
			}
		}
		add = {
			value = gh_dragon_green_nature_spellcasting_value_add
			desc = "[GetTrait('gh_dragon_green').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_nature_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:lifestyle_one_with_nature
			}
		}
		add = {
			value = lifestyle_one_with_nature_nature_spellcasting_value_add
			desc = "[GetTrait('lifestyle_one_with_nature').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
ethereal_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:ethereal }
		add = {
			value = var:ethereal
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_racked_by_voices
			}
		}
		add = {
			value = gh_racked_by_voices_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_racked_by_voices').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_riftsight_1
			}
		}
		add = {
			value = gh_riftsight_1_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_riftsight_2
			}
		}
		add = {
			value = gh_riftsight_2_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_riftsight_3
			}
		}
		add = {
			value = gh_riftsight_3_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_riftsight_4
			}
		}
		add = {
			value = gh_riftsight_4_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_riftsight_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_ethereal_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
hymns_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:hymns }
		add = {
			value = var:hymns
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_hymns_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
death_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:death }
		add = {
			value = var:death
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_death_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:education_lich_1
			}
		}
		add = {
			value = education_lich_1_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:education_lich_2
			}
		}
		add = {
			value = education_lich_2_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_2').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:education_lich_3
			}
		}
		add = {
			value = education_lich_3_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_3').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:education_lich_4
			}
		}
		add = {
			value = education_lich_4_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_4').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:education_lich_5
			}
		}
		add = {
			value = education_lich_5_death_spellcasting_value_add
			desc = "[GetTrait('education_lich_5').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_arch_lich_1
			}
		}
		add = {
			value = gh_arch_lich_1_death_spellcasting_value_add
			desc = "[GetTrait('gh_arch_lich_1').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
sand_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:sand }
		add = {
			value = var:sand
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_sand_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
metal_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:metal }
		add = {
			value = var:metal
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_metal_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
time_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:time }
		add = {
			value = var:time
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_time_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
dawn_aspect_spellcasting_character_creation_value = {
	value = 0
	if = {
		limit = { exists = var:dawn }
		add = {
			value = var:dawn
			desc = base_value_desc
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { 
			is_target_in_variable_list = {
				name = selected_trait_list
				target = flag:gh_magic_debug
			}
		}
		add = {
			value = gh_magic_debug_dawn_spellcasting_value_add
			desc = "[GetTrait('gh_magic_debug').GetName( GetNullCharacter )]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
}
fire_aspect_spell_success_bonus_value = {
	value = fire_aspect_spellcasting_value
	multiply = 5
}
water_aspect_spell_success_bonus_value = {
	value = water_aspect_spellcasting_value
	multiply = 5
}
ice_aspect_spell_success_bonus_value = {
	value = ice_aspect_spellcasting_value
	multiply = 5
}
air_aspect_spell_success_bonus_value = {
	value = air_aspect_spellcasting_value
	multiply = 5
}
stone_aspect_spell_success_bonus_value = {
	value = stone_aspect_spellcasting_value
	multiply = 5
}
dream_aspect_spell_success_bonus_value = {
	value = dream_aspect_spellcasting_value
	multiply = 5
}
celestial_aspect_spell_success_bonus_value = {
	value = celestial_aspect_spellcasting_value
	multiply = 5
}
dark_aspect_spell_success_bonus_value = {
	value = dark_aspect_spellcasting_value
	multiply = 5
}
light_aspect_spell_success_bonus_value = {
	value = light_aspect_spellcasting_value
	multiply = 5
}
blood_aspect_spell_success_bonus_value = {
	value = blood_aspect_spellcasting_value
	multiply = 5
}
nature_aspect_spell_success_bonus_value = {
	value = nature_aspect_spellcasting_value
	multiply = 5
}
ethereal_aspect_spell_success_bonus_value = {
	value = ethereal_aspect_spellcasting_value
	multiply = 5
}
hymns_aspect_spell_success_bonus_value = {
	value = hymns_aspect_spellcasting_value
	multiply = 5
}
death_aspect_spell_success_bonus_value = {
	value = death_aspect_spellcasting_value
	multiply = 5
}
sand_aspect_spell_success_bonus_value = {
	value = sand_aspect_spellcasting_value
	multiply = 5
}
metal_aspect_spell_success_bonus_value = {
	value = metal_aspect_spellcasting_value
	multiply = 5
}
time_aspect_spell_success_bonus_value = {
	value = time_aspect_spellcasting_value
	multiply = 5
}
dawn_aspect_spell_success_bonus_value = {
	value = dawn_aspect_spellcasting_value
	multiply = 5
}
fire_aspect_magic_resistance_bonus_value = {
	value = fire_aspect_spellcasting_value
	multiply = 2
}
water_aspect_magic_resistance_bonus_value = {
	value = water_aspect_spellcasting_value
	multiply = 2
}
ice_aspect_magic_resistance_bonus_value = {
	value = ice_aspect_spellcasting_value
	multiply = 2
}
air_aspect_magic_resistance_bonus_value = {
	value = air_aspect_spellcasting_value
	multiply = 2
}
stone_aspect_magic_resistance_bonus_value = {
	value = stone_aspect_spellcasting_value
	multiply = 2
}
dream_aspect_magic_resistance_bonus_value = {
	value = dream_aspect_spellcasting_value
	multiply = 2
}
celestial_aspect_magic_resistance_bonus_value = {
	value = celestial_aspect_spellcasting_value
	multiply = 2
}
dark_aspect_magic_resistance_bonus_value = {
	value = dark_aspect_spellcasting_value
	multiply = 2
}
light_aspect_magic_resistance_bonus_value = {
	value = light_aspect_spellcasting_value
	multiply = 2
}
blood_aspect_magic_resistance_bonus_value = {
	value = blood_aspect_spellcasting_value
	multiply = 2
}
nature_aspect_magic_resistance_bonus_value = {
	value = nature_aspect_spellcasting_value
	multiply = 2
}
ethereal_aspect_magic_resistance_bonus_value = {
	value = ethereal_aspect_spellcasting_value
	multiply = 2
}
hymns_aspect_magic_resistance_bonus_value = {
	value = hymns_aspect_spellcasting_value
	multiply = 2
}
death_aspect_magic_resistance_bonus_value = {
	value = death_aspect_spellcasting_value
	multiply = 2
}
sand_aspect_magic_resistance_bonus_value = {
	value = sand_aspect_spellcasting_value
	multiply = 2
}
metal_aspect_magic_resistance_bonus_value = {
	value = metal_aspect_spellcasting_value
	multiply = 2
}
time_aspect_magic_resistance_bonus_value = {
	value = time_aspect_spellcasting_value
	multiply = 2
}
dawn_aspect_magic_resistance_bonus_value = {
	value = dawn_aspect_spellcasting_value
	multiply = 2
}
fire_aspect_max_overcharge_bonus_value = {
	value = fire_aspect_spellcasting_value
	divide = 6
	floor = yes
}
water_aspect_max_overcharge_bonus_value = {
	value = water_aspect_spellcasting_value
	divide = 6
	floor = yes
}
ice_aspect_max_overcharge_bonus_value = {
	value = ice_aspect_spellcasting_value
	divide = 6
	floor = yes
}
air_aspect_max_overcharge_bonus_value = {
	value = air_aspect_spellcasting_value
	divide = 6
	floor = yes
}
stone_aspect_max_overcharge_bonus_value = {
	value = stone_aspect_spellcasting_value
	divide = 6
	floor = yes
}
dream_aspect_max_overcharge_bonus_value = {
	value = dream_aspect_spellcasting_value
	divide = 6
	floor = yes
}
celestial_aspect_max_overcharge_bonus_value = {
	value = celestial_aspect_spellcasting_value
	divide = 6
	floor = yes
}
dark_aspect_max_overcharge_bonus_value = {
	value = dark_aspect_spellcasting_value
	divide = 6
	floor = yes
}
light_aspect_max_overcharge_bonus_value = {
	value = light_aspect_spellcasting_value
	divide = 6
	floor = yes
}
blood_aspect_max_overcharge_bonus_value = {
	value = blood_aspect_spellcasting_value
	divide = 6
	floor = yes
}
nature_aspect_max_overcharge_bonus_value = {
	value = nature_aspect_spellcasting_value
	divide = 6
	floor = yes
}
ethereal_aspect_max_overcharge_bonus_value = {
	value = ethereal_aspect_spellcasting_value
	divide = 6
	floor = yes
}
hymns_aspect_max_overcharge_bonus_value = {
	value = hymns_aspect_spellcasting_value
	divide = 6
	floor = yes
}
death_aspect_max_overcharge_bonus_value = {
	value = death_aspect_spellcasting_value
	divide = 6
	floor = yes
}
sand_aspect_max_overcharge_bonus_value = {
	value = sand_aspect_spellcasting_value
	divide = 6
	floor = yes
}
metal_aspect_max_overcharge_bonus_value = {
	value = metal_aspect_spellcasting_value
	divide = 6
	floor = yes
}
time_aspect_max_overcharge_bonus_value = {
	value = time_aspect_spellcasting_value
	divide = 6
	floor = yes
}
dawn_aspect_max_overcharge_bonus_value = {
	value = dawn_aspect_spellcasting_value
	divide = 6
	floor = yes
}
fire_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:fire }
		add = {
			value = var:fire
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = drylands
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('drylands').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('desert').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert_mountains
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('desert_mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_burning_palace }
		add = {
			value = 3
			desc = "[GetBuilding('01_burning_palace').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_temple_of_wisdom }
		add = {
			value = 3
			desc = "[GetBuilding('01_temple_of_wisdom').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_thuriya_pyinnya }
		add = {
			value = 3
			desc = "[GetBuilding('01_thuriya_pyinnya').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_wizzhaod }
		add = {
			value = 2
			desc = "[GetBuilding('01_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_wizzhaod }
		add = {
			value = 2
			desc = "[GetBuilding('03_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 01_academyofswords }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('01_academyofswords').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_easterncabal }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('01_easterncabal').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_temple_of_korlacu }
		add = {
			value = 2
			desc = "[GetBuilding('01_temple_of_korlacu').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_forsaken_fortress }
		add = {
			value = 1
			desc = "[GetBuilding('01_forsaken_fortress').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_restored_fortress }
		add = {
			value = 2
			desc = "[GetBuilding('01_restored_fortress').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_renewed_fortress }
		add = {
			value = 3
			desc = "[GetBuilding('01_renewed_fortress').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_korlacan_mines }
		add = {
			value = 1
			desc = "[GetBuilding('02_korlacan_mines').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_korlacan_mines }
		add = {
			value = 2
			desc = "[GetBuilding('03_korlacan_mines').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_korlacan_mines }
		add = {
			value = 3
			desc = "[GetBuilding('04_korlacan_mines').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_korlacan_mines }
		add = {
			value = 3
			desc = "[GetBuilding('05_korlacan_mines').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = fire_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:fire
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
water_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:water }
		add = {
			value = var:water
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = oasis
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('oasis').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = jungle
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('jungle').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = floodplains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('floodplains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = wetlands
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('wetlands').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = archipelagic
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('archipelagic').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = forest
			geographical_region = pathos_delta_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('forest').GetName] in [GetGeographicalRegion('pathos_delta_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = plains
			geographical_region = pathos_delta_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('plains').GetName] in [GetGeographicalRegion('pathos_delta_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = hills
			geographical_region = pathos_delta_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('hills').GetName] in [GetGeographicalRegion('pathos_delta_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = farmlands
			geographical_region = pathos_delta_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('farmlands').GetName] in [GetGeographicalRegion('pathos_delta_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_potionworks }
		add = {
			value = 1
			desc = "[GetBuilding('01_potionworks').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_aironoiakaan }
		add = {
			value = 1
			desc = "[GetBuilding('01_aironoiakaan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_aironoiakaan }
		add = {
			value = 2
			desc = "[GetBuilding('02_aironoiakaan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 1
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 1
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 2
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_fount_of_heroes }
		add = {
			value = 2
			desc = "[GetBuilding('01_fount_of_heroes').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = water_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = water_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			OR = {
				is_coastal = yes
				is_riverside_province = yes
			}
		}
		add = {
			value = 1
			desc = "Побережье"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:water
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
ice_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:ice }
		add = {
			value = var:ice
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = taiga
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('taiga').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 03_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('03_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('04_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('05_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ice_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:ice
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
air_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:air }
		add = {
			value = var:air
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = mountains
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert_mountains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('desert_mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = plains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('plains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = steppe
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('steppe').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_aironoiakaan }
		add = {
			value = 1
			desc = "[GetBuilding('01_aironoiakaan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_aironoiakaan }
		add = {
			value = 2
			desc = "[GetBuilding('02_aironoiakaan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('03_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('04_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('05_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = air_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = air_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:air
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
stone_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:stone }
		add = {
			value = var:stone
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = mountains
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert_mountains
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('desert_mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = hills
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('hills').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = drylands
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('drylands').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_dragoncourt }
		add = {
			value = 1
			desc = "[GetBuilding('05_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_dragoncourt }
		add = {
			value = 1
			desc = "[GetBuilding('06_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_dragoncourt }
		add = {
			value = 1
			desc = "[GetBuilding('07_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_dragoncourt }
		add = {
			value = 1
			desc = "[GetBuilding('08_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_overgrown_temple }
		add = {
			value = 3
			desc = "[GetBuilding('01_overgrown_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_tur_senach }
		add = {
			value = 1
			desc = "[GetBuilding('02_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('03_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('04_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('05_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = stone_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:stone
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
dream_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:dream }
		add = {
			value = var:dream
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = oasis
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('oasis').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = forest
			geographical_region = kalath_old_growth_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('forest').GetName] in [GetGeographicalRegion('kalath_old_growth_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = forest
			geographical_region = sulzegg_basin_biozone
		}
		add = {
			value = 1
			desc = "[GetTerrain('forest').GetName] in [GetGeographicalRegion('sulzegg_basin_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = kalath_old_growth_biozone
		}
		add = {
			value = 1
			desc = "[GetGeographicalRegion('kalath_old_growth_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = sulzegg_basin_biozone
		}
		add = {
			value = 1
			desc = "[GetGeographicalRegion('sulzegg_basin_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 00_fog_eternal_grove }
		add = {
			value = 3
			desc = "[GetBuilding('00_fog_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_benoriya_atawek }
		add = {
			value = 1
			desc = "[GetBuilding('01_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_benoriya_atawek }
		add = {
			value = 2
			desc = "[GetBuilding('02_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_wizzhaod }
		add = {
			value = 1
			desc = "[GetBuilding('01_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_wizzhaod }
		add = {
			value = 1
			desc = "[GetBuilding('03_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 01_fidhasil }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('01_fidhasil').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dream_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:dream
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
celestial_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:celestial }
		add = {
			value = var:celestial
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = nightcoast_biozone
		}
		add = {
			value = 2
			desc = "[GetGeographicalRegion('nightcoast_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_eternal_grove }
		add = {
			value = 2
			desc = "[GetBuilding('01_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 00_eternal_grove }
		add = {
			value = 1
			desc = "[GetBuilding('00_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 00_lich_eternal_grove }
		add = {
			value = 1
			desc = "[GetBuilding('00_lich_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_special_aervalr_shard }
		add = {
			value = 1
			desc = "[GetBuilding('01_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_special_aervalr_shard }
		add = {
			value = 2
			desc = "[GetBuilding('02_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_special_aervalr_shard }
		add = {
			value = 3
			desc = "[GetBuilding('03_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_special_aervalr_shard }
		add = {
			value = 4
			desc = "[GetBuilding('04_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_harekana_observatory }
		add = {
			value = 2
			desc = "[GetBuilding('01_harekana_observatory').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('03_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('04_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('05_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = celestial_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:celestial
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
dark_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:dark }
		add = {
			value = var:dark
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = konijkmener_biozone
		}
		add = {
			value = 1
			desc = "[GetGeographicalRegion('konijkmener_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = dark_obelisk_01 }
		add = {
			value = 1
			desc = "[GetBuilding('dark_obelisk_01').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_02 }
		add = {
			value = 1
			desc = "[GetBuilding('dark_obelisk_02').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_03 }
		add = {
			value = 2
			desc = "[GetBuilding('dark_obelisk_03').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_04 }
		add = {
			value = 2
			desc = "[GetBuilding('dark_obelisk_04').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_05 }
		add = {
			value = 3
			desc = "[GetBuilding('dark_obelisk_05').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_06 }
		add = {
			value = 3
			desc = "[GetBuilding('dark_obelisk_06').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_07 }
		add = {
			value = 4
			desc = "[GetBuilding('dark_obelisk_07').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = dark_obelisk_08 }
		add = {
			value = 4
			desc = "[GetBuilding('dark_obelisk_08').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_wizzhaod }
		add = {
			value = 2
			desc = "[GetBuilding('02_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = {
				value = barony.holder.stress_level
				multiply = 1
			}
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = {
				value = barony.holder.stress_level
				multiply = 1
			}
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dark_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:dark
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
light_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:light }
		add = {
			value = var:light
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_benoriya_atawek }
		add = {
			value = 1
			desc = "[GetBuilding('01_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_benoriya_atawek }
		add = {
			value = 2
			desc = "[GetBuilding('02_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_halite_temple }
		add = {
			value = 1
			desc = "[GetBuilding('01_halite_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_halite_temple }
		add = {
			value = 2
			desc = "[GetBuilding('02_halite_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_wizzhaod }
		add = {
			value = 1
			desc = "[GetBuilding('03_wizzhaod').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = light_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = light_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:light
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
blood_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:blood }
		add = {
			value = var:blood
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 01_portacademy }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('01_portacademy').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_nira_yew }
		add = {
			value = {
				value = barony.holder.piety_level
				multiply = 1
			}
			desc = "[GetBuilding('01_nira_yew').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = blood_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:blood
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
nature_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:nature }
		add = {
			value = var:nature
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = oasis
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('oasis').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = forest
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('forest').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = jungle
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('jungle').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = farmlands
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('farmlands').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = floodplains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('floodplains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = plains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('plains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = kalath_old_growth_biozone
		}
		add = {
			value = 1
			desc = "[GetGeographicalRegion('kalath_old_growth_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			
			geographical_region = sulzegg_basin_biozone
		}
		add = {
			value = 1
			desc = "[GetGeographicalRegion('sulzegg_basin_biozone').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = royal_garden_01 }
		add = {
			value = 2
			desc = "[GetBuilding('royal_garden_01').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = royal_garden_02 }
		add = {
			value = 3
			desc = "[GetBuilding('royal_garden_02').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = royal_garden_03 }
		add = {
			value = 4
			desc = "[GetBuilding('royal_garden_03').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_benoriya_atawek }
		add = {
			value = 1
			desc = "[GetBuilding('01_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_benoriya_atawek }
		add = {
			value = 2
			desc = "[GetBuilding('02_benoriya_atawek').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_potionworks }
		add = {
			value = 1
			desc = "[GetBuilding('01_potionworks').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 01_eternal_grove }
		add = {
			value = {
				value = barony.holder.piety_level
				multiply = 3
			}
			desc = "[GetBuilding('01_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_tarfal_garden }
		add = {
			value = 3
			desc = "[GetBuilding('01_tarfal_garden').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_hanging_gardens }
		add = {
			value = 3
			desc = "[GetBuilding('01_hanging_gardens').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_overgrown_temple }
		add = {
			value = 3
			desc = "[GetBuilding('01_overgrown_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_dryadstones }
		add = {
			value = 3
			desc = "[GetBuilding('01_dryadstones').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_altar_of_spring }
		add = {
			value = 3
			desc = "[GetBuilding('01_altar_of_spring').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('01_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('02_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('03_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('04_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('05_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('06_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('07_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_dragoncourt }
		add = {
			value = 2
			desc = "[GetBuilding('08_dragoncourt').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 01_nira_yew }
		add = {
			value = {
				value = barony.holder.piety_level
				multiply = 1
			}
			desc = "[GetBuilding('01_nira_yew').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_fidhasil }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('01_fidhasil').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 03_tur_senach }
		add = {
			value = 3
			desc = "[GetBuilding('03_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('04_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 05_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('05_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 06_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('06_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = 4
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_fount_of_heroes }
		add = {
			value = 1
			desc = "[GetBuilding('01_fount_of_heroes').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = nature_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:nature
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
ethereal_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:ethereal }
		add = {
			value = var:ethereal
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 00_fog_eternal_grove }
		add = {
			value = 3
			desc = "[GetBuilding('00_fog_eternal_grove').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = ethereal_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:ethereal
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
hymns_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:hymns }
		add = {
			value = var:hymns
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = hymns_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:hymns
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
death_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:death }
		add = {
			value = var:death
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = deadlands
			
		}
		add = {
			value = 
			desc = "[GetTerrain('deadlands').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_boneshrine }
		add = {
			value = 2
			desc = "[GetBuilding('01_boneshrine').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_special_aervalr_shard }
		add = {
			value = 1
			desc = "[GetBuilding('01_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_special_aervalr_shard }
		add = {
			value = 2
			desc = "[GetBuilding('02_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 03_special_aervalr_shard }
		add = {
			value = 3
			desc = "[GetBuilding('03_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 04_special_aervalr_shard }
		add = {
			value = 4
			desc = "[GetBuilding('04_special_aervalr_shard').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_mayikprolollan }
		add = {
			value = 2
			desc = "[GetBuilding('01_mayikprolollan').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = death_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = death_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:death
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
sand_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:sand }
		add = {
			value = var:sand
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = oasis
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('oasis').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert
			
		}
		add = {
			value = 2
			desc = "[GetTerrain('desert').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = {
			terrain = desert_mountains
			
		}
		add = {
			value = 1
			desc = "[GetTerrain('desert_mountains').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_halite_temple }
		add = {
			value = 1
			desc = "[GetBuilding('01_halite_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 02_halite_temple }
		add = {
			value = 2
			desc = "[GetBuilding('02_halite_temple').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = sand_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:sand
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
metal_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:metal }
		add = {
			value = var:metal
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
	if = {
		limit = { has_building = 01_temple_of_korlacu }
		add = {
			value = 3
			desc = "[GetBuilding('01_temple_of_korlacu').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 01_temple_of_wisdom }
		add = {
			value = 3
			desc = "[GetBuilding('01_temple_of_wisdom').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = {
				value = barony.holder.prestige_level
				multiply = 1
			}
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = metal_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:metal
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
time_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:time }
		add = {
			value = var:time
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = time_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = time_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:time
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}
dawn_aspect_province_value = {
	value = 0
	if = {
		limit = { exists = var:dawn }
		add = {
			value = var:dawn
			desc = "Базовое значение"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 07_tur_senach }
		add = {
			value = {
				value = barony.holder.stress_level
				multiply = 2
			}
			desc = "[GetBuilding('07_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
		
		
	if = {
		limit = { has_building = 08_tur_senach }
		add = {
			value = {
				value = barony.holder.stress_level
				multiply = 2
			}
			desc = "[GetBuilding('08_tur_senach').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { has_building_with_flag = activates_province_aspects }
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_0_province_spellcasting_add }
			}
			add = {
				value = 0
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_1_province_spellcasting_add }
			}
			add = {
				value = 1
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_2_province_spellcasting_add }
			}
			add = {
				value = 2
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_3_province_spellcasting_add }
			}
			add = {
				value = 3
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_4_province_spellcasting_add }
			}
			add = {
				value = 4
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_5_province_spellcasting_add }
			}
			add = {
				value = 5
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_6_province_spellcasting_add }
			}
			add = {
				value = 6
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_7_province_spellcasting_add }
			}
			add = {
				value = 7
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_8_province_spellcasting_add }
			}
			add = {
				value = 8
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_9_province_spellcasting_add }
			}
			add = {
				value = 9
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = dawn_10_province_spellcasting_add }
			}
			add = {
				value = 10
				desc = "[culture_traditions|E]"
				format = "ASPECT_VALUE_FORMAT"
			}
		}
	}
	# GH TODO: Replace this with a more generalized system
	
	if = {
		limit = {
			has_variable_list = province_aspect_specialization_list
			is_target_in_variable_list = {
				name = province_aspect_specialization_list
				target = flag:dawn
			}
		}
		multiply = {
			value = 2
			desc = "Специализация"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	if = {
		limit = { county = { has_county_modifier = wayline_modifier } }
		multiply = {
			value = 2
			desc = "[GetModifier('wayline_modifier').GetName]"
			format = "ASPECT_VALUE_FORMAT"
		}
	}
	floor = yes
}

aspect_being_overcharged_max_value = {
	value = 0
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:fire
		}
		value = fire_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:water
		}
		value = water_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:ice
		}
		value = ice_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:air
		}
		value = air_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:stone
		}
		value = stone_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:dream
		}
		value = dream_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:celestial
		}
		value = celestial_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:dark
		}
		value = dark_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:light
		}
		value = light_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:blood
		}
		value = blood_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:nature
		}
		value = nature_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:ethereal
		}
		value = ethereal_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:hymns
		}
		value = hymns_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:death
		}
		value = death_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:sand
		}
		value = sand_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:metal
		}
		value = metal_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:time
		}
		value = time_aspect_max_overcharge_bonus_value
	}
	if = {
		limit = {
			scope:aspect_being_overcharged = flag:dawn
		}
		value = dawn_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
fire_aspect_success_chance_decrease_per_overcharge_value = {
	value = fire_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { fire_aspect_max_overcharge_bonus_value = 0 } }
		divide = fire_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
water_aspect_success_chance_decrease_per_overcharge_value = {
	value = water_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { water_aspect_max_overcharge_bonus_value = 0 } }
		divide = water_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
ice_aspect_success_chance_decrease_per_overcharge_value = {
	value = ice_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { ice_aspect_max_overcharge_bonus_value = 0 } }
		divide = ice_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
air_aspect_success_chance_decrease_per_overcharge_value = {
	value = air_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { air_aspect_max_overcharge_bonus_value = 0 } }
		divide = air_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
stone_aspect_success_chance_decrease_per_overcharge_value = {
	value = stone_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { stone_aspect_max_overcharge_bonus_value = 0 } }
		divide = stone_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
dream_aspect_success_chance_decrease_per_overcharge_value = {
	value = dream_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { dream_aspect_max_overcharge_bonus_value = 0 } }
		divide = dream_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
celestial_aspect_success_chance_decrease_per_overcharge_value = {
	value = celestial_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { celestial_aspect_max_overcharge_bonus_value = 0 } }
		divide = celestial_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
dark_aspect_success_chance_decrease_per_overcharge_value = {
	value = dark_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { dark_aspect_max_overcharge_bonus_value = 0 } }
		divide = dark_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
light_aspect_success_chance_decrease_per_overcharge_value = {
	value = light_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { light_aspect_max_overcharge_bonus_value = 0 } }
		divide = light_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
blood_aspect_success_chance_decrease_per_overcharge_value = {
	value = blood_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { blood_aspect_max_overcharge_bonus_value = 0 } }
		divide = blood_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
nature_aspect_success_chance_decrease_per_overcharge_value = {
	value = nature_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { nature_aspect_max_overcharge_bonus_value = 0 } }
		divide = nature_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
ethereal_aspect_success_chance_decrease_per_overcharge_value = {
	value = ethereal_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { ethereal_aspect_max_overcharge_bonus_value = 0 } }
		divide = ethereal_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
hymns_aspect_success_chance_decrease_per_overcharge_value = {
	value = hymns_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { hymns_aspect_max_overcharge_bonus_value = 0 } }
		divide = hymns_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
death_aspect_success_chance_decrease_per_overcharge_value = {
	value = death_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { death_aspect_max_overcharge_bonus_value = 0 } }
		divide = death_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
sand_aspect_success_chance_decrease_per_overcharge_value = {
	value = sand_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { sand_aspect_max_overcharge_bonus_value = 0 } }
		divide = sand_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
metal_aspect_success_chance_decrease_per_overcharge_value = {
	value = metal_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { metal_aspect_max_overcharge_bonus_value = 0 } }
		divide = metal_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
time_aspect_success_chance_decrease_per_overcharge_value = {
	value = time_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { time_aspect_max_overcharge_bonus_value = 0 } }
		divide = time_aspect_max_overcharge_bonus_value
	}
	floor = yes
}
dawn_aspect_success_chance_decrease_per_overcharge_value = {
	value = dawn_aspect_spell_success_bonus_value
	if = {
		limit = { NOT = { dawn_aspect_max_overcharge_bonus_value = 0 } }
		divide = dawn_aspect_max_overcharge_bonus_value
	}
	floor = yes
}

# Sums up all aspect spellcasting values and general spellcasting ability
total_spellcasting_skill_value = {
	value = 0
	add = fire_aspect_spellcasting_value
	add = water_aspect_spellcasting_value
	add = ice_aspect_spellcasting_value
	add = air_aspect_spellcasting_value
	add = stone_aspect_spellcasting_value
	add = dream_aspect_spellcasting_value
	add = celestial_aspect_spellcasting_value
	add = dark_aspect_spellcasting_value
	add = light_aspect_spellcasting_value
	add = blood_aspect_spellcasting_value
	add = nature_aspect_spellcasting_value
	add = ethereal_aspect_spellcasting_value
	add = hymns_aspect_spellcasting_value
	add = death_aspect_spellcasting_value
	add = sand_aspect_spellcasting_value
	add = metal_aspect_spellcasting_value
	add = time_aspect_spellcasting_value
	add = dawn_aspect_spellcasting_value
}

ruler_designer_total_aspect_skill_value_cost = {
	value = 0
	add = ruler_designer_fire_skill_value_cost
	add = ruler_designer_water_skill_value_cost
	add = ruler_designer_ice_skill_value_cost
	add = ruler_designer_air_skill_value_cost
	add = ruler_designer_stone_skill_value_cost
	add = ruler_designer_dream_skill_value_cost
	add = ruler_designer_celestial_skill_value_cost
	add = ruler_designer_dark_skill_value_cost
	add = ruler_designer_light_skill_value_cost
	add = ruler_designer_blood_skill_value_cost
	add = ruler_designer_nature_skill_value_cost
	add = ruler_designer_ethereal_skill_value_cost
	add = ruler_designer_hymns_skill_value_cost
	add = ruler_designer_death_skill_value_cost
	add = ruler_designer_sand_skill_value_cost
	add = ruler_designer_metal_skill_value_cost
	add = ruler_designer_time_skill_value_cost
	add = ruler_designer_dawn_skill_value_cost
}
ruler_designer_fire_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:fire }
		if = {
			limit = {
				var:fire > 0
				var:fire < 5
			}
			add = 1
			multiply = var:fire
		}
		else_if = {	
			limit = {
				var:fire > 4
				var:fire < 9
			}
			add = 2
			multiply = {
				value = var:fire
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:fire > 8
				var:fire < 13
			}
			add = 4
			multiply = {
				value = var:fire
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:fire > 12
				var:fire < 17
			}
			add = 7
			multiply = {
				value = var:fire
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:fire > 16
			}
			add = 11
			multiply = {
				value = var:fire
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_water_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:water }
		if = {
			limit = {
				var:water > 0
				var:water < 5
			}
			add = 1
			multiply = var:water
		}
		else_if = {	
			limit = {
				var:water > 4
				var:water < 9
			}
			add = 2
			multiply = {
				value = var:water
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:water > 8
				var:water < 13
			}
			add = 4
			multiply = {
				value = var:water
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:water > 12
				var:water < 17
			}
			add = 7
			multiply = {
				value = var:water
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:water > 16
			}
			add = 11
			multiply = {
				value = var:water
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_ice_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:ice }
		if = {
			limit = {
				var:ice > 0
				var:ice < 5
			}
			add = 1
			multiply = var:ice
		}
		else_if = {	
			limit = {
				var:ice > 4
				var:ice < 9
			}
			add = 2
			multiply = {
				value = var:ice
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:ice > 8
				var:ice < 13
			}
			add = 4
			multiply = {
				value = var:ice
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:ice > 12
				var:ice < 17
			}
			add = 7
			multiply = {
				value = var:ice
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:ice > 16
			}
			add = 11
			multiply = {
				value = var:ice
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_air_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:air }
		if = {
			limit = {
				var:air > 0
				var:air < 5
			}
			add = 1
			multiply = var:air
		}
		else_if = {	
			limit = {
				var:air > 4
				var:air < 9
			}
			add = 2
			multiply = {
				value = var:air
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:air > 8
				var:air < 13
			}
			add = 4
			multiply = {
				value = var:air
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:air > 12
				var:air < 17
			}
			add = 7
			multiply = {
				value = var:air
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:air > 16
			}
			add = 11
			multiply = {
				value = var:air
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_stone_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:stone }
		if = {
			limit = {
				var:stone > 0
				var:stone < 5
			}
			add = 1
			multiply = var:stone
		}
		else_if = {	
			limit = {
				var:stone > 4
				var:stone < 9
			}
			add = 2
			multiply = {
				value = var:stone
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:stone > 8
				var:stone < 13
			}
			add = 4
			multiply = {
				value = var:stone
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:stone > 12
				var:stone < 17
			}
			add = 7
			multiply = {
				value = var:stone
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:stone > 16
			}
			add = 11
			multiply = {
				value = var:stone
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_dream_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:dream }
		if = {
			limit = {
				var:dream > 0
				var:dream < 5
			}
			add = 1
			multiply = var:dream
		}
		else_if = {	
			limit = {
				var:dream > 4
				var:dream < 9
			}
			add = 2
			multiply = {
				value = var:dream
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:dream > 8
				var:dream < 13
			}
			add = 4
			multiply = {
				value = var:dream
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:dream > 12
				var:dream < 17
			}
			add = 7
			multiply = {
				value = var:dream
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:dream > 16
			}
			add = 11
			multiply = {
				value = var:dream
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_celestial_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:celestial }
		if = {
			limit = {
				var:celestial > 0
				var:celestial < 5
			}
			add = 1
			multiply = var:celestial
		}
		else_if = {	
			limit = {
				var:celestial > 4
				var:celestial < 9
			}
			add = 2
			multiply = {
				value = var:celestial
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:celestial > 8
				var:celestial < 13
			}
			add = 4
			multiply = {
				value = var:celestial
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:celestial > 12
				var:celestial < 17
			}
			add = 7
			multiply = {
				value = var:celestial
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:celestial > 16
			}
			add = 11
			multiply = {
				value = var:celestial
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_dark_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:dark }
		if = {
			limit = {
				var:dark > 0
				var:dark < 5
			}
			add = 1
			multiply = var:dark
		}
		else_if = {	
			limit = {
				var:dark > 4
				var:dark < 9
			}
			add = 2
			multiply = {
				value = var:dark
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:dark > 8
				var:dark < 13
			}
			add = 4
			multiply = {
				value = var:dark
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:dark > 12
				var:dark < 17
			}
			add = 7
			multiply = {
				value = var:dark
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:dark > 16
			}
			add = 11
			multiply = {
				value = var:dark
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_light_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:light }
		if = {
			limit = {
				var:light > 0
				var:light < 5
			}
			add = 1
			multiply = var:light
		}
		else_if = {	
			limit = {
				var:light > 4
				var:light < 9
			}
			add = 2
			multiply = {
				value = var:light
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:light > 8
				var:light < 13
			}
			add = 4
			multiply = {
				value = var:light
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:light > 12
				var:light < 17
			}
			add = 7
			multiply = {
				value = var:light
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:light > 16
			}
			add = 11
			multiply = {
				value = var:light
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_blood_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:blood }
		if = {
			limit = {
				var:blood > 0
				var:blood < 5
			}
			add = 1
			multiply = var:blood
		}
		else_if = {	
			limit = {
				var:blood > 4
				var:blood < 9
			}
			add = 2
			multiply = {
				value = var:blood
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:blood > 8
				var:blood < 13
			}
			add = 4
			multiply = {
				value = var:blood
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:blood > 12
				var:blood < 17
			}
			add = 7
			multiply = {
				value = var:blood
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:blood > 16
			}
			add = 11
			multiply = {
				value = var:blood
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_nature_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:nature }
		if = {
			limit = {
				var:nature > 0
				var:nature < 5
			}
			add = 1
			multiply = var:nature
		}
		else_if = {	
			limit = {
				var:nature > 4
				var:nature < 9
			}
			add = 2
			multiply = {
				value = var:nature
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:nature > 8
				var:nature < 13
			}
			add = 4
			multiply = {
				value = var:nature
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:nature > 12
				var:nature < 17
			}
			add = 7
			multiply = {
				value = var:nature
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:nature > 16
			}
			add = 11
			multiply = {
				value = var:nature
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_ethereal_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:ethereal }
		if = {
			limit = {
				var:ethereal > 0
				var:ethereal < 5
			}
			add = 1
			multiply = var:ethereal
		}
		else_if = {	
			limit = {
				var:ethereal > 4
				var:ethereal < 9
			}
			add = 2
			multiply = {
				value = var:ethereal
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:ethereal > 8
				var:ethereal < 13
			}
			add = 4
			multiply = {
				value = var:ethereal
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:ethereal > 12
				var:ethereal < 17
			}
			add = 7
			multiply = {
				value = var:ethereal
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:ethereal > 16
			}
			add = 11
			multiply = {
				value = var:ethereal
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_hymns_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:hymns }
		if = {
			limit = {
				var:hymns > 0
				var:hymns < 5
			}
			add = 1
			multiply = var:hymns
		}
		else_if = {	
			limit = {
				var:hymns > 4
				var:hymns < 9
			}
			add = 2
			multiply = {
				value = var:hymns
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:hymns > 8
				var:hymns < 13
			}
			add = 4
			multiply = {
				value = var:hymns
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:hymns > 12
				var:hymns < 17
			}
			add = 7
			multiply = {
				value = var:hymns
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:hymns > 16
			}
			add = 11
			multiply = {
				value = var:hymns
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_death_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:death }
		if = {
			limit = {
				var:death > 0
				var:death < 5
			}
			add = 1
			multiply = var:death
		}
		else_if = {	
			limit = {
				var:death > 4
				var:death < 9
			}
			add = 2
			multiply = {
				value = var:death
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:death > 8
				var:death < 13
			}
			add = 4
			multiply = {
				value = var:death
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:death > 12
				var:death < 17
			}
			add = 7
			multiply = {
				value = var:death
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:death > 16
			}
			add = 11
			multiply = {
				value = var:death
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_sand_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:sand }
		if = {
			limit = {
				var:sand > 0
				var:sand < 5
			}
			add = 1
			multiply = var:sand
		}
		else_if = {	
			limit = {
				var:sand > 4
				var:sand < 9
			}
			add = 2
			multiply = {
				value = var:sand
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:sand > 8
				var:sand < 13
			}
			add = 4
			multiply = {
				value = var:sand
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:sand > 12
				var:sand < 17
			}
			add = 7
			multiply = {
				value = var:sand
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:sand > 16
			}
			add = 11
			multiply = {
				value = var:sand
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_metal_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:metal }
		if = {
			limit = {
				var:metal > 0
				var:metal < 5
			}
			add = 1
			multiply = var:metal
		}
		else_if = {	
			limit = {
				var:metal > 4
				var:metal < 9
			}
			add = 2
			multiply = {
				value = var:metal
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:metal > 8
				var:metal < 13
			}
			add = 4
			multiply = {
				value = var:metal
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:metal > 12
				var:metal < 17
			}
			add = 7
			multiply = {
				value = var:metal
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:metal > 16
			}
			add = 11
			multiply = {
				value = var:metal
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_time_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:time }
		if = {
			limit = {
				var:time > 0
				var:time < 5
			}
			add = 1
			multiply = var:time
		}
		else_if = {	
			limit = {
				var:time > 4
				var:time < 9
			}
			add = 2
			multiply = {
				value = var:time
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:time > 8
				var:time < 13
			}
			add = 4
			multiply = {
				value = var:time
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:time > 12
				var:time < 17
			}
			add = 7
			multiply = {
				value = var:time
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:time > 16
			}
			add = 11
			multiply = {
				value = var:time
				subtract = 16
			}
			add = 56
		}
	}
}
ruler_designer_dawn_skill_value_cost = {
	value = 0
	if = {
		limit = { exists = var:dawn }
		if = {
			limit = {
				var:dawn > 0
				var:dawn < 5
			}
			add = 1
			multiply = var:dawn
		}
		else_if = {	
			limit = {
				var:dawn > 4
				var:dawn < 9
			}
			add = 2
			multiply = {
				value = var:dawn
				subtract = 4
			}
			add = 4
		}
		else_if = {	
			limit = {
				var:dawn > 8
				var:dawn < 13
			}
			add = 4
			multiply = {
				value = var:dawn
				subtract = 8
			}
			add = 12
		}
		else_if = {	
			limit = {
				var:dawn > 12
				var:dawn < 17
			}
			add = 7
			multiply = {
				value = var:dawn
				subtract = 12
			}
			add = 28
		}
		else_if = {	
			limit = {
				var:dawn > 16
			}
			add = 11
			multiply = {
				value = var:dawn
				subtract = 16
			}
			add = 56
		}
	}
}

strongest_aspect_on_first_glowing_mutation_value = {
	value = 0

	if = {
		limit = {
			is_alive = yes
			has_variable = gh_strongest_aspect_on_first_glowing_mutation
		}

		if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:fire }

			add = fire_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:water }

			add = water_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:ice }

			add = ice_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:air }

			add = air_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:stone }

			add = stone_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:dream }

			add = dream_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:celestial }

			add = celestial_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:dark }

			add = dark_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:light }

			add = light_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:blood }

			add = blood_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:nature }

			add = nature_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:ethereal }

			add = ethereal_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:hymns }

			add = hymns_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:death }

			add = death_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:sand }

			add = sand_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:metal }

			add = metal_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:time }

			add = time_aspect_spellcasting_value
		}

		else_if = {
			limit = { var:gh_strongest_aspect_on_first_glowing_mutation = flag:dawn }

			add = dawn_aspect_spellcasting_value
		}
	}
}