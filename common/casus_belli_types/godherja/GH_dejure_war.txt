chevalie_defense_cb = {
	group = de_jure

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		culture = { has_cultural_parameter = chevalien_defense }
	}

	allowed_for_character_display_regardless = {
		trigger_if = {
			AND = {
				piety_level >= 2
				prestige_level >= 2
				is_independent_ruler = yes
			}
		}
	}
	allowed_against_character = {
		NOT = { culture = { has_cultural_parameter = chevalien_defense } }
		character_is_realm_neighbor = scope:attacker
		any_realm_county = {
			empire = title:e_chevalie
		}
		NOT = {
			top_liege = scope:attacker
		}
		scope:defender = {
			is_ruin = no
		}
	}

	target_titles = neighbor_land_or_water
	target_title_tier = empire
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	valid_to_start = {
		scope:target = { this = title:e_chevalie }
	}

	max_attacker_score_from_battles = 200

	on_invalidated_desc = msg_invasion_war_invalidated_message

	should_invalidate = {
		OR = {
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
			#Faith change does not immediately invalidate, it's run through event war_event.3100
			scope:war = { exists = var:invalidate_defender_faith_change }
			scope:war = { exists = var:invalidate_attacker_faith_change }
		}
	}

	on_invalidated = {

	}

	cost = {
		piety = {
			add = {
				value = 750
				desc = CB_BASE_COST
			}
			# Faith Doctrine Piety Discounts
			if = {
				limit = {
					scope:attacker.faith = {
						has_doctrine_parameter = divine_destiny_holy_war_cost_reduction
					}
				}
				multiply = {
					value = 0.5
					desc = CB_DIVINE_DESTINY_COST
				}
			}

			if = {
				limit = {
					scope:attacker.faith = {
						has_doctrine_parameter = cheaper_holy_wars_active
					}
				}
				multiply = {
					value = 0.8
					desc = CB_REDUCED_HOLY_WAR_COST
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Culture
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_cultural_parameter = cheaper_cbs
						}
					}
				}
				multiply = {
					value = 0.8
					desc = "CB_ATTACKER_CULTURE"
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}

			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes

		scope:attacker = {
			every_ruler = {
				limit = {
					highest_held_title_tier >= tier_county
					AND = {
						capital_county.title_province = {
							geographical_region = world_ga_marcher_kingdoms
						}
						culture = { has_cultural_tradition = tradition_chevalien_identity }
					}
					NOT = { this = scope:attacker }
				}
				trigger_event = marcher_political.0010
			}

		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = chevalie_defense_cb_victory_desc_attacker
			}
			desc = chevalie_defense_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest_holy_war
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equaly or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper
		every_in_list = {
			list = target_titles
			custom_tooltip = RELIGIOUS_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = yes
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		ordered_in_list = {
			list = target_titles
			order_by = tier
			max = 1

			save_scope_as = war_goal_title
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = chevalie_defense_cb_white_peace_desc_defender
			}
			desc = chevalie_defense_cb_white_peace_desc
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = miniscule_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = chevalie_defense_cb_white_peace_desc_defender
			}
			desc = chevalie_defense_cb_white_peace_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 2
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	transfer_behavior = transfer

	war_name = "CHEVALIEN_INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "CHEVALIE_DEFENSE_CB_NAME"

	interface_priority = 500
}

marcher_reunification_cb = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		has_character_modifier = claimant_to_the_high_kingdom
		title:e_chevalie = { is_title_created = no }
	}

	allowed_against_character = {
		character_is_realm_neighbor = scope:attacker
		culture = { has_cultural_pillar = heritage_marcher }
		any_realm_county = {
			empire = title:e_chevalie
		}
		scope:defender = {
			is_ruin = no
		}
	}
	
	valid_to_start = {
		scope:target = title:e_chevalie
	}

	target_titles = all
	target_title_tier = empire
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_invalidated_desc = msg_marcher_reunification_invalidated_message

	cost = {
		prestige = {
			value = 250

			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Game Rules
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		every_ruler = {
			limit = {
				AND = {
					primary_title.empire = title:e_chevalie
					NOR = {
						this = scope:attacker
						this = scope:defender
					}
				}
			}
			trigger_event = {
				id = gh_war_event.4002
				days = 1
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = marcher_reunification_war_victory_desc_attacker
			}
			desc = marcher_reunification_war_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#Take the crown pieces
		scope:attacker = {
			every_personal_claimed_artifact = {
				limit = {
					has_variable = broken_crown_piece
					artifact_owner = {
						is_ruler = yes
						target_is_same_character_or_above = scope:defender
					}
				}
				set_owner = {
					target = scope:attacker
					history = {
						type = conquest
						actor = scope:defender
						recipient = scope:attacker
					}
				}
				if = {
					limit = {
						NOT = {
							scope:defender = { has_personal_artifact_claim = prev }
						}
					}
					scope:defender = { add_personal_artifact_claim = prev }
				}
			}
		}

		every_ruler = {
			limit = {
				AND = {
					primary_title.empire = title:e_chevalie
					NOR = {
						this = scope:attacker
						this = scope:defender
					}
				}
			}
			trigger_event = {
				id = gh_war_event.4003
				days = 1
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# Take the defender's primary title and all titles of the same tier
		every_in_list = {
			list = target_titles
			every_in_de_jure_hierarchy = {
				limit = {
					AND = {
						tier = scope:defender.primary_title.tier
						holder = scope:defender
					}
				}
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
				}
			}
		}

		# Make the defender a vassal of the attacker
		scope:defender = {
			change_liege = {
				LIEGE = scope:attacker
				CHANGE = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change
		
		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = marcher_reunification_war_white_peace_desc_defender
			}
			desc = marcher_reunification_war_white_peace_desc
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = miniscule_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = marcher_reunification_war_defeat_desc_attacker
			}
			desc = marcher_reunification_war_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 2
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	transfer_behavior = transfer

	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "MARCHER_REUNIFICATION_CB_NAME"

	interface_priority = 500
}

reclaim_the_east_cb = {
	group = de_jure

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		AND = {
			culture = { has_cultural_pillar = heritage_aversarian }
			any_realm_county = {
				county = title:c_asiupoli
			}
			title:e_aironoi = {
				is_title_created = no
			}
			OR = {
				primary_title.tier = tier_kingdom
				primary_title.tier = tier_empire
			}
		}
	}

	allowed_against_character = {
		AND = {
			OR = {
				any_realm_county = {
					OR = {
						empire = title:e_aironoi
					}
				}
			}
		}
		scope:defender = {
			is_ruin = no
		}
	}
	
	valid_to_start = {
		scope:target = title:e_aironoi
	}

	target_titles = all
	target_title_tier = empire
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	
	on_invalidated_desc = msg_reclaim_the_east_invalidated_message

	cost = {
		prestige = {
			value = 250
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = reclaim_the_east_victory_desc_attacker
			}
			desc = reclaim_the_east_war_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# Vassalize every defender under the title, if county is held personally by defender, seize it.
		every_in_list = {
			list = target_titles
			every_dejure_vassal_title_holder = {
				limit = {
					AND = {
						top_liege = scope:defender
					}
				}
				change_liege = {
					LIEGE = scope:attacker
					CHANGE = scope:change
				}
			}
			
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					holder = scope:defender
				}
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
				}
			}
		}

		resolve_title_and_vassal_change = scope:change
		
		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = reclaim_the_east_white_peace_desc_defender
			}
			desc = reclaim_the_east_white_peace_desc
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = miniscule_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = reclaim_the_east_defeat_desc_defender
			}
			desc = reclaim_the_east_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 2
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	transfer_behavior = transfer

	war_name = "INVASION_WAR_NAME"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "RECLAIM_THE_EAST_CB_NAME"

	interface_priority = 500
}